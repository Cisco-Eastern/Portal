{"version":3,"sources":["webpack:///./src/DeviceManager/DeviceManager.jsx","webpack:///./src/modules/comet/configeditor.js","webpack:///./packages/styles/static/AlarmSymbol.jsx","webpack:///./src/DeviceManager/DeviceManagerStyles.js","webpack:///./src/DeviceManager/AddListItemButtonStyles.js","webpack:///./src/DeviceManager/LabelFilterStyles.js","webpack:///./src/DeviceManager/DeviceCounterContainer.jsx","webpack:///./src/DeviceManager/DeviceColumnsContainer.jsx","webpack:///./src/DeviceManager/AddDeviceButton.jsx","webpack:///./src/DeviceManager/RemoveDevicesContainer.jsx","webpack:///./src/DeviceManager/RemoveDevicesButton.jsx","webpack:///./src/DeviceManager/DeviceListContainer.jsx","webpack:///./src/DeviceManager/AlarmCell.jsx","webpack:///./packages/styles/static/WarningSymbol.jsx","webpack:///./src/DeviceManager/AlarmCellStyles.js","webpack:///./src/DeviceManager/LabelsMenuContainer.jsx","webpack:///./src/DeviceManager/LabelsMenu.jsx","webpack:///./src/DeviceManager/static/LabelSymbol.jsx","webpack:///./src/DeviceManager/LabelFilterContainer.jsx","webpack:///./src/DeviceManager/LabelFilter.jsx","webpack:///./src/DeviceManager/LabelFilterStyles.css?dc72","webpack:///./src/DeviceManager/static/DeleteSymbol.jsx","webpack:///./src/DeviceManager/DeviceBatchActions.jsx","webpack:///./src/DeviceManager/DeviceSummaryContainer.jsx"],"names":["style","application","additionalComponentsRight","secondHeader","contentWrapper","container","enabled","defaultStyles","shadow","scrollingContainer","setValue","change","nodes","value","updateNode","keypath","updateConfig","notifications","subscriptionPath","onDelete","onUpdateLeaf","onCreate","onModifiedNodes","changes","removeList","addNode","modifiedNodes","forEach","listPath","getListPath","isNonEmptyString","push","op","path","deleteChildren","Object","keys","nodePath","node","length","uniq","AlarmSymbol","color","version","baseProfile","x","y","viewBox","xmlSpace","fill","d","propTypes","PropTypes","string","alignSelf","marginRight","position","fontFamilt","font2","height","display","flexFlow","backgroundImage","pattern1","overflow","flexGrow","backgroundColor","color11","borderTop","justifyContent","maxWidth","margin","padding","image","verticalAlign","menuArrow","width","left","transform","color3","labelsMenu","wrapper","boxShadow","textColor2","fontFamily","overlay","top","pop","zIndex","menuArrowShadow","header","marginBottom","labelImage","labelContainer","label","fontSize","medium2","wordBreak","deleteLabel","marginLeft","flexShrink","border","cursor","color1","large1","lineHeight","createContainer","marginTop","input","color6","button","symbol","arrow","DeviceCounter","text","whiteSpace","borderRadius","disabled","color9","deviceGroupsOptions","popDownMenu","right","labelFilter","alignItems","backgroundColor1","small3","tip","delete","add","outline","deviceGroupsOptionsActive","backgroundColor3","notFound","textAlign","boxSizing","React","Component","constructor","props","super","this","showTooltip","bind","hideTooltip","tooltip","show","hide","render","selected","total","direction","toolTipText","ref","tt","data-handle","role","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","number","mapStateToProps","state","selectedDeviceCountSelector","selectTotalNumberOfDevices","connect","DeviceColumnsContainer","onSetColumnVisible","columnsVisibility","columns","DEVICE_COLUMNS","c","index","isVisible","isVisibleColumn","onChange","key","DEVICE_MANAGER_USER_STORAGE_PATH","filter","canBeHidden","func","isRequired","shape","selectDeviceColumns","mapDispatchToProps","dispatch","columnKey","nodesActions","setColumnVisibilityAction","AddDeviceButton","showAddDeviceModal","onClick","getShowAddDeviceModal","RemoveDevicesContainer","deleteSelected","devices","map","device","rowKey","onRemoveDevices","arrayOf","selectedDeviceRowsSelector","paths","deleteNodesThunk","RemoveDevicesButton","bool","DEVICE_CHUNK_SIZE","STYLE_NAME","isAlarm","sortColumn","Array","isArray","includes","ALARM_PRECEDENCE","list","createAlarmCell","severity","_","deviceRoute","getLinkWithPath","row","alarm","Link","to","configurationCellFactory","name","toConfig","configKey","cell","buttonWrapper","link","translate","createButtonCellFactory","action","onAction","onExpand","btnStyle","actionIndicatorTimeout","result","status","pathOr","undefined","isExpanded","completedAt","yangAction","getDeviceColumn","getDefaultColumn","find","DeviceListContainer","onSelectAllRows","onSelectRow","onChangeSortOrder","onCometUpdate","onConfirm","onClose","onGoToPage","onRunAction","handleExpand","hasSelectedAll","errorOnCreate","actions","ping","timer","Timer","componentDidMount","onLoad","onLoadActionStatusIndicatorTimeout","onSubscribe","selection","sortOrder","xpathExpression","start","componentDidUpdate","prevProps","alarms","deviceGroupChangeIsPending","hasActiveLabels","offset","rows","totalNumberOfResults","newXpathExpression","newDeviceGroupChangeIsPending","newAlarms","newSelection","isEqual","Math","max","componentWillUnmount","onUnsubscribe","stop","onSelectRows","setState","isSelected","isLoading","sortColumnToCheck","newSortorder","newColumnKey","subscription","onHideAddDeviceModal","parentPath","keyValues","onAddDevice","then","error","newColumn","r","data","expandable","column","sortOrdering","columnKeys","COLUMNS_SELECTION","isDesc","title","createHeader","createSortableHeaderFactory","createCell","createKeyCellFactory","CONFIGURATION_EDITOR_NAME","unshift","isSticky","createCheckboxHeaderFactory","createCheckBoxCellFactory","createEmptyHeaderFactory","createDirtyCellFactory","COLUMNS_ACTION","createHeaderFactory","found","actionButton","filluppColumn","createResultCellFactory","additionalElements","empty","chunkSize","LinkComponent","shouldPadRows","styleName","shouldRetainColumnsSize","nrOfStaticColumns","deviceListPath","closeOnConfirm","oneOfType","defaultProps","deviceListIsLoading","selectSchemaIsLoading","devicesRootPath","selectGlobalSettingsIsLoading","QUERY_SELECTION","COLUMN_VISIBILITY","HIDDEN_USER","selectDeviceAlarms","selectDeviceGroupChangeIsPending","selectHasActiveLabels","selectDeviceOffset","deviceRowSelector","selectShowAddDeviceModal","selectDeviceSortColumn","selectDeviceSortOrder","selectDeviceXpathExpression","selectGlobalSetting","ACTION_STATUS_INDICATOR_TIMEOUT","runCustomActionThunk","sortorder","getDevices","getGlobalApplicationSetting","setting","rowKeys","selectDeviceAction","getHideAddDeviceModal","setDeviceExpandedAction","addDevice","handler","subscribeCdbOperAction","alarmsPath","subscribeChangesAction","unsubscribeCdbOperAction","unsubscribeChangesAction","modifiedNodesAction","getValueAction","deleteAction","deleteNodeAndChildrenAction","createAction","Symbol","cleared","ALARM_STATUS","MAJORS","CRITICALS","MINORS","WARNINGS","INDETERMINATES","AlarmCell","WarningSymbol","xmlns","criticals","color5","majors","color17","minors","color15","warnings","color4","indeterminates","justifySelf","LabelsMenuContainer","UNSAFE_componentWillMount","onGetDeviceGroupsForSelectedDevices","loadStatus","NOT_LOADED","deviceGroups","onAddDevicesToGroup","onRemoveDevicesFromGroup","loadDeviceGroups","group","removeDevicesFromGroup","addDevicesToGroup","selectDeviceGroupsByDeviceUnion","selectLoadStatus","LabelsMenu","onKeyDown","hideMenu","showMenu","menuOpen","UNSAFE_componentWillReceiveProps","nextProps","wasEnabled","newLabelInput","focus","e","keyCode","labels","lbl","menuColor","placeholder","LabelSymbol","LabelFilterContainer","getFilteredLabels","labelAdd","onBlur","onFilterMenuRef","onFocus","isElementInVisibleInList","autoCompleteIsVisible","dropDownIndex","inputValue","inputLabels","deviceGroupsOption","scrollTop","offsetTop","numLabels","diff","preventDefault","dg","labelTypesCopy","labelTypes","SEARCH","nonEmpty","values","l","indexOf","beginsWith","startsWith","filteredLabels","concat","reduce","acc","type","getFilteredGroupsComponents","val","ix","className","tabIndex","getLabelTextNode","onLabelAdd","labelToAdd","rect","getBoundingClientRect","bottom","onLabelRemove","filteredDeviceGroups","labelAddAction","labelRemoveAction","onLoadDeviceGroups","selectDeviceGroupsWithDevices","selectLabels","getLabelTypeColor","LBL_ONE_OF","LBL_INCLUDE","LBL_EXCLUDE","Error","getLabelTypeText","LabelFilter","onInitHide","onResetHide","content","cssStyles","target","module","exports","DeleteSymbol","selectDeviceActions","BatchActions","keyword","selectDeviceSearch","unit","Summary"],"mappings":"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","file":"DeviceManager.chunk.js","sourcesContent":["import HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport React from 'react';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport DeviceCounterContainer from './DeviceCounterContainer';\nimport DeviceColumnsContainer from './DeviceColumnsContainer';\nimport AddDeviceButton from './AddDeviceButton';\nimport RemoveDevicesContainer from './RemoveDevicesContainer';\nimport DeviceListContainer from './DeviceListContainer';\nimport LabelsMenuContainer from './LabelsMenuContainer';\nimport LabelFilterContainer from './LabelFilterContainer';\nimport style from './DeviceManagerStyles';\nimport DeviceBatchActions from './DeviceBatchActions';\nimport DeviceSummaryContainer from './DeviceSummaryContainer';\n\nconst DeviceManager = () => (\n    <div style={style.application}>\n        <HeaderContainer\n            additionalComponentsRight={[\n                <DeviceBatchActions />,\n                <LabelsMenuContainer />,\n            ]}\n        >\n            <div style={style.secondHeader}>\n                <div style={style.contentWrapper}>\n                    <div style={style.container}>\n                        <AddDeviceButton enabled />\n                    </div>\n                    <div style={style.container}>\n                        <RemoveDevicesContainer />\n                    </div>\n                    <div style={style.container}>\n                        <DeviceColumnsContainer />\n                    </div>\n                    <DeviceCounterContainer />\n                    <LabelFilterContainer />\n                </div>\n            </div>\n            <div style={defaultStyles.shadow} />\n        </HeaderContainer>\n        <div style={style.scrollingContainer}>\n            <DeviceSummaryContainer/>\n            <DeviceListContainer />\n        </div>\n        <FooterContainer />\n    </div>\n);\n\nexport default DeviceManager;\n","import { getListPath } from '@webui-one/core/keypath/kp-parser';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { uniq } from '@webui-one/core/utils/array';\n\nconst setValue = (change, nodes) => {\n    const value = change.value;\n    const { updateNode } = nodes;\n    updateNode[change.keypath] = value;\n};\n\nconst updateConfig = (\n    notifications,\n    subscriptionPath,\n    {\n        onDelete,\n        onUpdateLeaf,\n        onCreate,\n        onModifiedNodes,\n    }) => {\n    const changes = notifications.changes || [];\n    const removeList = [];\n    const addNode = {};\n    const updateNode = {};\n    const modifiedNodes = [];\n    changes.forEach((change) => {\n        const listPath = getListPath(change.keypath, subscriptionPath);\n        if (isNonEmptyString(listPath)) {\n            modifiedNodes.push(listPath);\n            return;\n        }\n        if (change.op === 'deleted') {\n            removeList.push([change.keypath, true]);\n        }\n        if (change.op === 'created') {\n            addNode[change.keypath] = true;\n        }\n        if (change.op === 'default_set') {\n            removeList.push([change.keypath, false]);\n        }\n        if (change.op === 'value_set') {\n            setValue(change, { updateNode });\n        }\n    });\n    removeList.forEach(([path, deleteChildren]) => {\n        onDelete(path, deleteChildren);\n    });\n    Object.keys(addNode).forEach((nodePath) => {\n        onCreate(nodePath);\n    });\n    Object.keys(updateNode).forEach((node) => {\n        onUpdateLeaf(node, updateNode[node]);\n    });\n    if (modifiedNodes.length > 0) {\n        onModifiedNodes(uniq(modifiedNodes));\n    }\n};\n\nexport default updateConfig;\n\nexport {\n    updateConfig,\n    setValue as _setValue,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AlarmSymbol = ({ color }) =>\n    (<svg version=\"1.2\" baseProfile=\"tiny\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 21\" xmlSpace=\"preserve\">\n        <path\n            fill={color}\n            d=\"M12.7,0.5c-0.4-0.7-1.1-0.7-1.5,0L0.2,19.7C-0.2,20.4,0.1,21,0.9,21h22.2\n        c0.8,0,1.2-0.6,0.8-1.3L12.7,0.5z M12.7,17.7C12.5,17.9,12.2,18,12,18c-0.3,0-0.5-0.1-0.7-0.3C11.1,17.5,11,17.2,11,17\n        c0-0.3,0.1-0.5,0.3-0.7c0.4-0.4,1.1-0.4,1.4,0c0.2,0.2,0.3,0.5,0.3,0.7C13,17.2,12.9,17.5,12.7,17.7L12.7,17.7z M13,13.5\n        c0,0.6-0.5,1-1,1s-1-0.5-1-1v-6c0-0.6,0.5-1,1-1s1,0.5,1,1V13.5L13,13.5z\" />\n    </svg>);\n\nAlarmSymbol.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default AlarmSymbol;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst rowStyle = {};\n\nconst image = {\n    verticalAlign: 'middle',\n    height: '1rem',\n};\n\nconst container = {\n    alignSelf: 'center',\n    marginRight: '0.5rem',\n    position: 'relative',\n    fontFamilt: defaultStyles.font2,\n};\n\nexport default {\n    application: {\n        ...defaultStyles.application,\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column',\n        backgroundImage: defaultStyles.pattern1,\n    },\n    scrollingContainer: {\n        overflow: 'auto',\n        flexGrow: '1',\n    },\n    secondHeader: {\n        backgroundColor: defaultStyles.color11,\n        borderTop: '1px solid #cccccc',\n        height: '50px',\n        justifyContent: 'flex-end',\n    },\n    contentWrapper: {\n        display: 'flex',\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n        height: '100%',\n        padding: '0 1rem',\n    },\n    container: {\n        ...container,\n    },\n    image: {\n        ...image,\n        height: '1.5rem',\n    },\n};\n\nconst menuArrow = {\n    width: '1.2rem',\n    height: '1.2rem',\n    left: '5.6rem',\n    transform: 'translate(-50%, -50%)rotate(45deg)',\n    backgroundColor: defaultStyles.color3,\n    position: 'absolute',\n};\n\nconst labelsMenu = {\n    container,\n    wrapper: {\n        position: 'absolute',\n        width: '9.2rem',\n        backgroundColor: defaultStyles.color3,\n        padding: '1rem',\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n        color: defaultStyles.textColor2,\n        fontFamily: defaultStyles.font2,\n    },\n    overlay: {\n        position: 'fixed',\n        backgroundColor: 'transparent',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n    },\n    pop: {\n        position: 'absolute',\n        left: '-4.5rem',\n        top: '2.55rem',\n        zIndex: '1',\n    },\n    menuArrow,\n    menuArrowShadow: {\n        ...menuArrow,\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n    },\n    header: {\n        marginBottom: '1rem',\n    },\n    labelImage: {\n        height: '0.8rem',\n        verticalAlign: 'middle',\n    },\n    labelContainer: {\n        display: 'flex',\n    },\n    label: {\n        alignSelf: 'center',\n        fontSize: defaultStyles.medium2,\n        wordBreak: 'break-all',\n        marginRight: '0.5rem',\n    },\n    deleteLabel: {\n        marginLeft: 'auto',\n        flexShrink: '0',\n        padding: '0',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        color: defaultStyles.color1,\n        fontSize: defaultStyles.large1,\n        lineHeight: '1',\n    },\n    createContainer: {\n        display: 'flex',\n        marginTop: '0.5rem',\n    },\n    input: {\n        width: '7rem',\n        padding: '0.25rem',\n        border: `1px solid ${defaultStyles.color6}`,\n    },\n    button: {\n        cursor: 'pointer',\n        border: 'none',\n        display: 'flex',\n        backgroundColor: 'transparent',\n    },\n    symbol: {\n        width: '1.1rem',\n    },\n    arrow: {\n        width: '0.5rem',\n        marginLeft: '0.5rem',\n        alignSelf: 'center',\n    },\n};\n\nconst DeviceCounter = {\n    wrapper: {\n        position: 'relative',\n        display: 'flex',\n        alignSelf: 'center',\n        marginLeft: '1rem',\n    },\n    text: {\n        fontSize: '1rem',\n        color: defaultStyles.textColor2,\n        whiteSpace: 'nowrap',\n    },\n};\n\nexport {\n    DeviceCounter,\n    labelsMenu,\n    rowStyle,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst style = {\n    width: '1.5rem',\n    height: '1.5rem',\n    borderRadius: '1.5rem',\n    display: 'block',\n    padding: '0.3rem',\n};\n\nexport default {\n    enabled: {\n        ...style,\n        cursor: 'pointer',\n        border: `1px solid ${defaultStyles.color1}`,\n        backgroundColor: defaultStyles.color1,\n    },\n    disabled: {\n        ...style,\n        border: `1px solid ${defaultStyles.color9}`,\n        backgroundColor: defaultStyles.color3,\n    },\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst menuArrow = {\n    width: '1.2rem',\n    height: '1.2rem',\n    top: '-0.5rem',\n    left: '8.5rem',\n    transform: 'rotate(43deg)',\n    backgroundColor: defaultStyles.color3,\n    position: 'absolute',\n};\nconst popDownMenu = {\n    pop: {\n        position: 'absolute',\n        right: '13rem',\n        top: '2.25rem',\n        zIndex: '1',\n    },\n    menuArrow,\n    menuArrowShadow: {\n        ...menuArrow,\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n    },\n    wrapper: {\n        position: 'absolute',\n        right: '-14rem',\n        width: '9.2rem',\n        backgroundColor: defaultStyles.color3,\n        padding: '0.75rem 0',\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n        color: defaultStyles.color9,\n    },\n    header: {\n        marginBottom: '1rem',\n    },\n};\n\n\nconst wrapper = {\n    margin: '0 0.25rem',\n    padding: '0.1875rem 0.5rem',\n    display: 'flex',\n    alignItems: 'center',\n    border: `solid 1px ${defaultStyles.color9}`,\n    borderRadius: '0.81rem',\n    backgroundColor: defaultStyles.backgroundColor1,\n    position: 'relative',\n    fontSize: defaultStyles.small3,\n    color: defaultStyles.color9,\n};\n\nconst symbol = {\n    width: '0.7rem',\n    padding: '0.25rem',\n    cursor: 'pointer',\n};\n\nconst deviceGroupsOptions = {\n    display: 'flex',\n    color: 'grey',\n    cursor: 'pointer',\n    padding: '0.25rem 0.5rem',\n};\n\nexport default {\n    popDownMenu,\n    labelFilter: {\n        display: 'flex',\n        alignSelf: 'center',\n        fontSize: '0.6rem',\n        padding: '0.1rem 0',\n        flexGrow: 2,\n        justifyContent: 'flex-end',\n    },\n    wrapper,\n    label: {\n        alignSelf: 'center',\n        color: '#000',\n        display: 'inline',\n        padding: '0 0.5rem',\n        whiteSpace: 'nowrap',\n    },\n    tip: {\n        height: '1.2rem',\n    },\n    delete: {\n        ...symbol,\n    },\n    add: {\n        ...symbol,\n        color: defaultStyles.color1,\n    },\n    button: {\n        position: 'relative',\n        padding: '0',\n        margin: '0',\n        color: defaultStyles.color1,\n        display: 'inline-block',\n        border: 'none',\n        backgroundColor: 'transparent',\n        lineHeight: '0',\n        cursor: 'pointer',\n        ':focus': {\n            outline: 'none',\n        },\n    },\n    deviceGroupsOptions,\n    deviceGroupsOptionsActive: {\n        ...deviceGroupsOptions,\n        backgroundColor: defaultStyles.backgroundColor3,\n    },\n    notFound: {\n        width: '100%',\n        color: 'grey',\n        padding: '0.25rem 0.5rem',\n        textAlign: 'center',\n        boxSizing: 'border-box',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ToolTip from '@webui-one/components/ToolTip/ToolTip';\nimport {\n    selectTotalNumberOfDevices,\n    selectedDeviceCountSelector,\n} from 'modules/devices/selectors';\nimport { DeviceCounter as style } from './DeviceManagerStyles';\n\nclass DeviceCounter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n    }\n\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const { selected, total } = this.props;\n        return (\n            <div style={style.wrapper}>\n                <ToolTip\n                    direction=\"left\"\n                    toolTipText=\"selected devices / devices in list\"\n                    ref={(tt) => { this.tooltip = tt; }}\n                />\n                <div\n                    data-handle=\"device-counter\"\n                    role=\"tooltip\"\n                    style={style.text}\n                    onMouseDown={this.showTooltip}\n                    onMouseUp={this.hideTooltip}\n                    onMouseEnter={this.showTooltip}\n                    onMouseLeave={this.hideTooltip}\n                >\n                    {`${selected} / ${total}`}\n                </div>\n            </div>\n        );\n    }\n}\n\nDeviceCounter.propTypes = {\n    total: PropTypes.number,\n    selected: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n    selected: selectedDeviceCountSelector(state),\n    total: selectTotalNumberOfDevices(state),\n});\n\n\nexport default connect(\n    mapStateToProps,\n    null,\n)(DeviceCounter);\n\nexport {\n    DeviceCounter as _DeviceCounter,\n    mapStateToProps as _mapStateToProps,\n};\n\n","import * as nodesActions from 'modules/nodes/actions';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SelectMenu from '@webui-one/components/ConfigRender/List/SelectMenu';\nimport {\n    DEVICE_MANAGER_USER_STORAGE_PATH,\n    DEVICE_COLUMNS,\n} from 'modules/devices/paths';\nimport { connect } from 'react-redux';\nimport { isVisibleColumn } from '@webui-one/core/utils/list';\nimport { selectDeviceColumns } from 'modules/devices/selectors';\n\nconst DeviceColumnsContainer = ({\n    onSetColumnVisible,\n    columnsVisibility,\n}) => {\n    const columns = [...DEVICE_COLUMNS];\n    columns.forEach((c, index) => {\n        columns[index].isVisible = isVisibleColumn(columnsVisibility, c);\n    });\n\n    return (\n        <div data-handle=\"device-column-select\">\n            <SelectMenu\n                onChange={(key, value) =>\n                    onSetColumnVisible(DEVICE_MANAGER_USER_STORAGE_PATH, key, value)\n                }\n                columns={columns.filter(c => c.canBeHidden)}\n                enabled\n            />\n        </div>\n    );\n};\n\nDeviceColumnsContainer.propTypes = {\n    onSetColumnVisible: PropTypes.func.isRequired,\n    columnsVisibility: PropTypes.shape(Object),\n};\n\nconst mapStateToProps = state => ({\n    columnsVisibility: selectDeviceColumns(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetColumnVisible(path, columnKey, value) {\n        return dispatch(nodesActions.setColumnVisibilityAction(path, columnKey, value));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(DeviceColumnsContainer);\n\nexport {\n    DeviceColumnsContainer as _DeviceColumnsContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ToolTip from '@webui-one/components/ToolTip/ToolTip';\nimport AddSymbol from '@webui-one/styles/static/AddSymbol';\nimport { getShowAddDeviceModal } from 'modules/devices/actions';\nimport style from './AddListItemButtonStyles';\n\nclass AddDeviceButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n    }\n\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const { showAddDeviceModal, path } = this.props;\n        return (<div>\n            <ToolTip\n                direction=\"right\"\n                toolTipText=\"add device\"\n                ref={(tt) => { this.tooltip = tt; }}\n            />\n            <button\n                data-handle=\"add-list-item-button\"\n                style={style.enabled}\n                onClick={() => showAddDeviceModal(path)}\n                onMouseDown={this.showTooltip}\n                onMouseUp={this.hideTooltip}\n                onMouseEnter={this.showTooltip}\n                onMouseLeave={this.hideTooltip}\n            >\n                <AddSymbol color=\"#ffffff\" />\n            </button></div>);\n    }\n}\n\nAddDeviceButton.propTypes = {\n    path: PropTypes.string,\n    showAddDeviceModal: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    showAddDeviceModal(path) {\n        return dispatch(getShowAddDeviceModal(path));\n    },\n\n\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(AddDeviceButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    deleteNodesThunk,\n} from 'modules/nodes/thunks';\nimport {\n    selectedDeviceRowsSelector,\n} from 'modules/devices/selectors';\nimport RemoveDevicesButton from './RemoveDevicesButton';\n\nclass RemoveDevicesContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.deleteSelected = this.deleteSelected.bind(this);\n    }\n    deleteSelected() {\n        const { devices, onDelete } = this.props;\n        onDelete(devices.map(device => device.rowKey));\n    }\n\n    render() {\n        const { devices } = this.props;\n        return (<RemoveDevicesButton\n            enabled={devices.length > 0}\n            onRemoveDevices={this.deleteSelected}\n        />);\n    }\n}\n\nRemoveDevicesContainer.propTypes = {\n    devices: PropTypes.arrayOf(Object),\n    onDelete: PropTypes.func,\n};\n\nconst mapStateToProps = state =>\n    ({\n        devices: selectedDeviceRowsSelector(state),\n    });\n\nconst mapDispatchToProps = dispatch => ({\n    onDelete(paths) {\n        dispatch(deleteNodesThunk({ paths }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RemoveDevicesContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RemoveSymbol from '@webui-one/styles/static/RemoveSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport ToolTip from '@webui-one/components/ToolTip/ToolTip';\nimport style from './AddListItemButtonStyles';\n\nexport default class RemoveDevicesButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n    }\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const { enabled, onRemoveDevices } = this.props;\n        return (<div>\n            <button\n                data-handle=\"remove-list-item-button\"\n                style={enabled ? style.enabled : style.disabled}\n                onClick={onRemoveDevices}\n                onMouseDown={this.showTooltip}\n                onMouseUp={this.hideTooltip}\n                onMouseEnter={this.showTooltip}\n                onMouseLeave={this.hideTooltip}\n            >\n                <RemoveSymbol color={enabled ? defaultStyles.color3 : defaultStyles.color9} />\n            </button>\n            <ToolTip\n                direction=\"right\"\n                toolTipText=\"remove device\"\n                ref={(tt) => { this.tooltip = tt; }}\n            />\n        </div>);\n    }\n}\n\nRemoveDevicesButton.propTypes = {\n    enabled: PropTypes.bool,\n    onRemoveDevices: PropTypes.func,\n};\n","import ActionButton from 'modules/yangActions/ActionButton';\nimport List from '@webui-one/components/ConfigRender/List/List';\nimport React from 'react';\nimport Pagination from '@webui-one/components/ConfigRender/List/Pagination';\nimport PropTypes from 'prop-types';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport ModalSchemaInputContainer from 'Common/Components/Modal/ModalSchemaInputContainer';\nimport { connect } from 'react-redux';\nimport { getLinkWithPath, CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor';\nimport { Link } from 'react-router';\nimport { translate } from 'modules/intl';\nimport { createResultCellFactory } from 'modules/yangActions/ActionResult';\nimport { isEqual } from '@webui-one/core/utils/array';\nimport { pathOr } from '@webui-one/core/utils/object';\nimport {\n    runCustomActionThunk,\n} from 'modules/yangActions/actions';\nimport {\n    getGlobalApplicationSetting,\n    ACTION_STATUS_INDICATOR_TIMEOUT,\n} from 'modules/globalSettings/actions';\nimport {\n    addDevice,\n    getDevices,\n    getHideAddDeviceModal,\n    selectDeviceAction,\n    setDeviceExpandedAction,\n} from 'modules/devices/actions';\nimport {\n    selectSchemaIsLoading,\n} from 'modules/schemas2/selectors';\nimport {\n    selectGlobalSetting,\n    selectGlobalSettingsIsLoading,\n} from 'modules/globalSettings/selectors';\nimport {\n    createCheckBoxCellFactory,\n    createCheckboxHeaderFactory,\n    createHeaderFactory,\n    createKeyCellFactory,\n    createSortableHeaderFactory,\n    getDefaultColumn,\n    createDirtyCellFactory,\n    createEmptyHeaderFactory,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport {\n    deviceListIsLoading,\n    deviceRowSelector,\n    selectDeviceColumns,\n    selectDeviceGroupChangeIsPending,\n    selectDeviceOffset,\n    selectDeviceSortColumn,\n    selectDeviceSortOrder,\n    selectHasActiveLabels,\n    selectDeviceXpathExpression,\n    selectShowAddDeviceModal,\n    selectTotalNumberOfDevices,\n    selectDeviceAlarms,\n} from 'modules/devices/selectors';\nimport {\n    ALARM_PRECEDENCE,\n    COLUMNS_ACTION,\n    COLUMNS_SELECTION,\n    DEVICE_COLUMNS,\n    QUERY_SELECTION,\n    alarmsPath,\n    deviceListPath,\n    devicesRootPath,\n} from 'modules/devices/paths';\nimport { Timer } from '@webui-one/core/utils/time';\nimport {\n    subscribeCdbOperAction,\n    subscribeChangesAction,\n    unsubscribeCdbOperAction,\n    unsubscribeChangesAction,\n} from 'modules/comet/actions';\nimport {\n    deleteAction,\n    deleteNodeAndChildrenAction,\n    getValueAction,\n    modifiedNodesAction,\n    createAction,\n} from 'modules/nodes/actions';\nimport { updateConfig } from 'modules/comet/configeditor';\nimport { COLUMN_VISIBILITY } from 'modules/userdata/selectors';\n\nimport {\n    isVisibleColumn,\n} from '@webui-one/core/utils/list';\n\nimport AlarmCell from './AlarmCell';\n\nconst DEVICE_CHUNK_SIZE = 50;\nconst STYLE_NAME = 'deviceList';\n\nconst isAlarm = sortColumn => Array.isArray(sortColumn) && sortColumn.includes(ALARM_PRECEDENCE[0]);\n\nconst style = styles(STYLE_NAME).list;\n\nconst createAlarmCell = (severity, _, deviceRoute) => {\n    if (severity === 'cleared') return <AlarmCell severity={severity} />;\n    const path = getLinkWithPath(`${deviceRoute}/al:alarm-summary`);\n    return (\n        <div style={styles('defaultStyle').list.row.alarm}>\n            <Link to={path} >\n                <AlarmCell severity={severity} />\n            </Link>\n        </div>\n    );\n};\n\nconst configurationCellFactory = (name, key, rowKey) => {\n    const toConfig = getLinkWithPath(`${rowKey}/config`);\n    const configKey = `config-${key}`;\n    return (\n        <div key={configKey} style={style.cell.buttonWrapper}>\n            <Link to={toConfig} style={style.cell.link}>\n                {translate('devicemanager.config_button')}\n            </Link>\n        </div>\n    );\n};\n\nconst createButtonCellFactory = (action, onAction, onExpand, btnStyle, actionIndicatorTimeout) => (\n    (result, key, rowKey) => {\n        const status = pathOr(undefined, ['yangAction', 'status'], result);\n        return <ActionButton\n            style={btnStyle}\n            result={(result || {}).status}\n            status={status}\n            path={rowKey}\n            action={action}\n            onAction={onAction}\n            onExpand={onExpand}\n            isExpanded={(result || {}).isExpanded}\n            actionIndicatorTimeout={actionIndicatorTimeout}\n            completedAt={(result && result.yangAction) ? result.yangAction.completedAt : 0}\n        />;\n    }\n);\n\nconst getDeviceColumn = key => ({\n    ...getDefaultColumn(),\n    ...DEVICE_COLUMNS.find(c => c.key === key),\n});\n\nclass DeviceListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onSelectAllRows = this.onSelectAllRows.bind(this);\n        this.onSelectRow = this.onSelectRow.bind(this);\n        this.onChangeSortOrder = this.onChangeSortOrder.bind(this);\n        this.onCometUpdate = this.onCometUpdate.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onGoToPage = this.onGoToPage.bind(this);\n        this.onRunAction = this.onRunAction.bind(this);\n        this.handleExpand = this.handleExpand.bind(this);\n        this.state = {\n            hasSelectedAll: false,\n            errorOnCreate: undefined,\n        };\n        this.actions = {\n            ping: {},\n            connect: {},\n        };\n        this.timer = new Timer(30000);\n    }\n\n    componentDidMount() {\n        const {\n            onLoad,\n            onLoadActionStatusIndicatorTimeout,\n            onSubscribe,\n            selection,\n            sortColumn,\n            sortOrder,\n            xpathExpression,\n        } = this.props;\n        onLoad(1, sortColumn, sortOrder, xpathExpression, selection);\n        onSubscribe(this.onCometUpdate);\n        onLoadActionStatusIndicatorTimeout();\n        this.timer.start();\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            alarms,\n            deviceGroupChangeIsPending,\n            hasActiveLabels,\n            onLoad,\n            offset,\n            selection,\n            sortColumn,\n            sortOrder,\n            rows,\n            totalNumberOfResults,\n            xpathExpression,\n        } = prevProps;\n        const {\n            xpathExpression: newXpathExpression,\n            deviceGroupChangeIsPending: newDeviceGroupChangeIsPending,\n            alarms: newAlarms,\n            selection: newSelection,\n        } = this.props;\n\n        if (xpathExpression !== newXpathExpression ||\n            !isEqual(selection, newSelection) ||\n            (hasActiveLabels && deviceGroupChangeIsPending && !newDeviceGroupChangeIsPending) ||\n            (alarms !== newAlarms)\n        ) {\n            onLoad(1, sortColumn, sortOrder, newXpathExpression, newSelection);\n        }\n\n        if (rows && rows.length === 0 && totalNumberOfResults > 0) {\n            this.onGoToPage(Math.max(1, offset - DEVICE_CHUNK_SIZE));\n        }\n    }\n\n    componentWillUnmount() {\n        const { onUnsubscribe } = this.props;\n        this.timer.stop();\n        onUnsubscribe(this.onCometUpdate);\n    }\n\n    onSelectAllRows(hasSelectedAll) {\n        const { rows, onSelectRows } = this.props;\n        this.setState({ hasSelectedAll });\n        const rowKeys = rows.map(row => row.rowKey);\n        onSelectRows(hasSelectedAll, rowKeys);\n    }\n\n    onSelectRow(isSelected, rowKey) {\n        this.props.onSelectRows(isSelected, [rowKey]);\n    }\n\n    onChangeSortOrder(columnKey) {\n        const {\n            onLoad,\n            selection,\n            sortOrder,\n            sortColumn,\n            isLoading,\n            xpathExpression,\n        } = this.props;\n\n        if (!isLoading) {\n            const sortColumnToCheck = isAlarm(sortColumn) ? 'alarm' : sortColumn;\n            const isDesc = columnKey === sortColumnToCheck && sortOrder !== 'descending';\n            const isNone = columnKey === sortColumnToCheck && sortOrder === 'descending';\n            let newSortorder = 'ascending';\n            let newColumnKey = columnKey;\n            if (isDesc) newSortorder = 'descending';\n            if (isNone) {\n                newSortorder = undefined;\n                newColumnKey = undefined;\n            }\n            const offset = 1;\n            if (newColumnKey === 'alarm') newColumnKey = ALARM_PRECEDENCE;\n            onLoad(offset, newColumnKey, newSortorder, xpathExpression, selection);\n        }\n    }\n\n    onCometUpdate(notifications, subscription) {\n        const {\n            onCreate,\n            onDelete,\n            onModifiedNodes,\n            onUpdateLeaf,\n        } = this.props;\n        updateConfig(\n            notifications,\n            subscription.path,\n            {\n                onCreate,\n                onDelete,\n                onModifiedNodes,\n                onUpdateLeaf,\n            },\n        );\n    }\n\n    onGoToPage(offset) {\n        const {\n            isLoading,\n            onLoad,\n            selection,\n            sortOrder,\n            sortColumn,\n            xpathExpression,\n        } = this.props;\n\n        if (!isLoading) {\n            onLoad(offset, sortColumn, sortOrder, xpathExpression, selection);\n        }\n    }\n\n    onRunAction(action, path) {\n        const { onAction } = this.props;\n        onAction(action, path);\n    }\n    onClose() {\n        const { onHideAddDeviceModal } = this.props;\n        this.setState({ errorOnCreate: undefined });\n        onHideAddDeviceModal();\n    }\n    onConfirm(parentPath, keyValues) {\n        const {\n            offset,\n            onAddDevice,\n            sortColumn,\n            sortOrder,\n            xpathExpression,\n        } = this.props;\n        return onAddDevice(\n            parentPath,\n            keyValues,\n            offset,\n            sortColumn,\n            sortOrder,\n            xpathExpression,\n        ).then((result) => {\n            if (result.error) {\n                this.setState({ errorOnCreate: result.error });\n            } else {\n                this.onClose();\n            }\n        });\n    }\n\n    handleExpand(rowKey, newColumn) {\n        const { onExpand, rows } = this.props;\n        const row = rows.find(r => r.rowKey === rowKey);\n        const { isExpanded, column } = row.data.expandable;\n        const shouldExpand = (!isExpanded || newColumn !== column);\n        onExpand(rowKey, newColumn, shouldExpand);\n    }\n\n    render() {\n        const {\n            columnsVisibility,\n            isLoading,\n            offset,\n            rows,\n            showAddDeviceModal,\n            sortColumn,\n            sortOrder: sortOrdering,\n            totalNumberOfResults,\n            actionIndicatorTimeout,\n        } = this.props;\n        const {\n            hasSelectedAll,\n            errorOnCreate,\n        } = this.state;\n        const columnKeys = [...COLUMNS_SELECTION];\n        const nrOfStaticColumns = 2;\n\n        const sortOrder = {\n            columnKey: isAlarm(sortColumn) ? 'alarm' : sortColumn,\n            isDesc: sortOrdering === 'descending',\n        };\n        let columns = columnKeys.map(({ title, key }) => ({\n            ...getDefaultColumn(),\n            createHeader: createSortableHeaderFactory(\n                this.onChangeSortOrder,\n                sortOrder,\n            ),\n            createCell: createKeyCellFactory(CONFIGURATION_EDITOR_NAME, Link),\n            title,\n            key,\n        }));\n\n        columns.unshift({\n            ...getDefaultColumn(),\n            key: 'isSelected',\n            canBeHidden: false,\n            isSticky: true,\n            title: 'is selected',\n            createHeader: createCheckboxHeaderFactory(\n                hasSelectedAll,\n                this.onSelectAllRows,\n                STYLE_NAME,\n            ),\n            createCell: createCheckBoxCellFactory(this.onSelectRow, STYLE_NAME),\n        });\n\n        columns.unshift({\n            ...getDefaultColumn(),\n            key: 'isDirty',\n            canBeHidden: false,\n            isSticky: true,\n            title: 'is dirty',\n            createHeader: createEmptyHeaderFactory(STYLE_NAME),\n            createCell: createDirtyCellFactory(STYLE_NAME),\n        });\n\n        COLUMNS_ACTION.forEach(({ key }) => columns.push({\n            ...getDeviceColumn(key),\n            createHeader: createHeaderFactory(\n                'defaultStyle',\n                style.header.found,\n            ),\n            createCell: createButtonCellFactory(\n                key,\n                this.onRunAction,\n                this.handleExpand,\n                style.cell.actionButton,\n                actionIndicatorTimeout),\n        }));\n\n        columns.push({\n            ...getDeviceColumn('alarm'),\n            createCell: createAlarmCell,\n            createHeader: createSortableHeaderFactory(\n                () => this.onChangeSortOrder('alarm'),\n                sortOrder,\n            ),\n        });\n\n        columns.push({\n            ...getDeviceColumn('config'),\n            createCell: configurationCellFactory,\n        });\n\n        columns = columns.filter(c => isVisibleColumn(columnsVisibility, c));\n\n        if (columns.length === nrOfStaticColumns) {\n            const filluppColumn = {\n                ...getDefaultColumn('empty'),\n                title: '',\n            };\n            columns.push(filluppColumn);\n        }\n\n        columns.push({\n            ...getDeviceColumn('expandable'),\n            createCell: createResultCellFactory(),\n        });\n\n        const additionalElements = [\n            totalNumberOfResults === 0 && <div\n                key=\"empty\"\n                style={style.empty}\n                >No devices in list</div>,\n            <Pagination\n                chunkSize={DEVICE_CHUNK_SIZE}\n                key=\"pagination\"\n                offset={offset}\n                onGoToPage={this.onGoToPage}\n                totalNumberOfResults={totalNumberOfResults}\n            />,\n        ];\n\n        return (\n            <div data-handle=\"list-wrapper\">\n                <List\n                    additionalElements={additionalElements}\n                    chunkSize={DEVICE_CHUNK_SIZE}\n                    columns={columns}\n                    isLoading={isLoading}\n                    LinkComponent={Link}\n                    offset={offset}\n                    rows={rows}\n                    shouldPadRows={false}\n                    styleName=\"deviceList\"\n                    totalNumberOfResults={totalNumberOfResults}\n                    shouldRetainColumnsSize={false}\n                    nrOfStaticColumns={nrOfStaticColumns}\n                />\n                {showAddDeviceModal &&\n                    <ModalSchemaInputContainer\n                        title=\"Add device\"\n                        path={deviceListPath}\n                        onConfirm={this.onConfirm}\n                        onClose={this.onClose}\n                        closeOnConfirm={false}\n                        error={errorOnCreate}\n                    />}\n            </div>\n        );\n    }\n}\n\nDeviceListContainer.propTypes = {\n    alarms: PropTypes.shape({}),\n    columnsVisibility: PropTypes.shape(Object),\n    deviceGroupChangeIsPending: PropTypes.bool,\n    hasActiveLabels: PropTypes.bool,\n    actionIndicatorTimeout: PropTypes.string,\n    isLoading: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.shape({}),\n    ]),\n    offset: PropTypes.number,\n    onAction: PropTypes.func.isRequired,\n    onAddDevice: PropTypes.func,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    onExpand: PropTypes.func,\n    onHideAddDeviceModal: PropTypes.func,\n    onLoad: PropTypes.func.isRequired,\n    onLoadActionStatusIndicatorTimeout: PropTypes.func,\n    onModifiedNodes: PropTypes.func,\n    onSelectRows: PropTypes.func.isRequired,\n    onSubscribe: PropTypes.func.isRequired,\n    onUnsubscribe: PropTypes.func.isRequired,\n    onUpdateLeaf: PropTypes.func,\n    rows: PropTypes.arrayOf(Object),\n    selection: PropTypes.arrayOf(PropTypes.string),\n    showAddDeviceModal: PropTypes.bool,\n    sortColumn: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]),\n    sortOrder: PropTypes.string,\n    totalNumberOfResults: PropTypes.number,\n    xpathExpression: PropTypes.string,\n};\n\nDeviceListContainer.defaultProps = {\n    columns: [],\n    rows: [],\n    selection: [],\n};\n\nconst mapStateToProps = (state) => {\n    const isLoading = deviceListIsLoading(state)\n        || selectSchemaIsLoading(state, devicesRootPath)\n        || selectGlobalSettingsIsLoading(state);\n    const columnsVisibility = selectDeviceColumns(state);\n\n    const keys = Object.keys(columnsVisibility);\n    const selection = QUERY_SELECTION.filter(c => (\n        !keys.includes(c)\n        || columnsVisibility[c] !== COLUMN_VISIBILITY.HIDDEN_USER\n    ));\n\n    return {\n        alarms: selectDeviceAlarms(state),\n        columnsVisibility,\n        deviceGroupChangeIsPending: selectDeviceGroupChangeIsPending(state),\n        hasActiveLabels: selectHasActiveLabels(state),\n        isLoading,\n        offset: selectDeviceOffset(state),\n        rows: deviceRowSelector(state),\n        selection,\n        showAddDeviceModal: selectShowAddDeviceModal(state),\n        sortColumn: selectDeviceSortColumn(state),\n        sortOrder: selectDeviceSortOrder(state),\n        totalNumberOfResults: selectTotalNumberOfDevices(state),\n        xpathExpression: selectDeviceXpathExpression(state),\n        actionIndicatorTimeout: selectGlobalSetting(\n            state,\n            ACTION_STATUS_INDICATOR_TIMEOUT,\n        ),\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onAction(action, path) {\n        dispatch(runCustomActionThunk({ path: `${path}/${action}` }));\n    },\n    onLoad(offset, columnKey, sortorder, xpathExpression, selection) {\n        dispatch(getDevices({\n            chunkSize: DEVICE_CHUNK_SIZE,\n            offset,\n            columnKey,\n            selection,\n            sortorder,\n            xpathExpression,\n        }));\n    },\n    onLoadActionStatusIndicatorTimeout() {\n        dispatch(getGlobalApplicationSetting({\n            setting: ACTION_STATUS_INDICATOR_TIMEOUT,\n        }));\n    },\n    onSelectRows(isSelected, rowKeys) {\n        dispatch(selectDeviceAction(isSelected, rowKeys));\n    },\n    onHideAddDeviceModal() {\n        return dispatch(getHideAddDeviceModal());\n    },\n    onExpand(path, column, isExpanded) {\n        return dispatch(setDeviceExpandedAction(path, column, isExpanded));\n    },\n    onAddDevice(\n        parentPath,\n        keyValues,\n        offset,\n        columnKey,\n        sortorder,\n        xpathExpression,\n    ) {\n        return dispatch(\n            addDevice({\n                parentPath,\n                keyValues,\n                chunkSize: DEVICE_CHUNK_SIZE,\n                offset,\n                columnKey,\n                sortorder,\n                xpathExpression,\n            }),\n        );\n    },\n    onSubscribe(handler) {\n        dispatch(subscribeCdbOperAction([alarmsPath], handler));\n        dispatch(subscribeChangesAction([deviceListPath], handler));\n    },\n    onUnsubscribe(handler) {\n        dispatch(unsubscribeCdbOperAction([alarmsPath], handler));\n        dispatch(unsubscribeChangesAction([deviceListPath], handler));\n    },\n    onModifiedNodes(paths) {\n        dispatch(modifiedNodesAction(paths));\n    },\n    onUpdateLeaf(path, value) {\n        dispatch(getValueAction(path, value));\n    },\n    onDelete(path, deleteChildren = false) {\n        if (deleteChildren !== true) {\n            dispatch(deleteAction(path));\n        } else {\n            dispatch(deleteNodeAndChildrenAction(path));\n        }\n    },\n    onCreate(path) {\n        dispatch(createAction(path));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(DeviceListContainer);\n\nexport {\n    DeviceListContainer as _DeviceListContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    configurationCellFactory as _configurationCellFactory,\n    createButtonCellFactory as _createButtonCellFactory,\n    createAlarmCell as _createAlarmCell,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AlarmSymbol from '@webui-one/styles/static/AlarmSymbol';\nimport WarningSymbol from '@webui-one/styles/static/WarningSymbol';\nimport { ALARM_STATUS } from 'modules/devices/paths';\n\nimport style from './AlarmCellStyles';\n\n\nexport const Symbol = ({ severity }) => {\n    const color = (style[severity] || style.cleared).color;\n    if ([ALARM_STATUS.MAJORS, ALARM_STATUS.CRITICALS, ALARM_STATUS.MINORS].includes(severity)) {\n        return <AlarmSymbol color={color} />;\n    }\n    if ([ALARM_STATUS.WARNINGS, ALARM_STATUS.INDETERMINATES].includes(severity)) {\n        return <WarningSymbol color={color} />;\n    }\n    return false;\n};\n\nconst AlarmCell = ({ severity }) => (\n    <div data-handle={`alarm-${severity}`} style={style.wrapper}>\n        <Symbol severity={severity} />\n    </div>\n);\n\nAlarmCell.propTypes = {\n    severity: PropTypes.string,\n};\n\nexport default AlarmCell;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WarningSymbol = ({ color }) =>\n    (<svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\">\n        <path\n            fill={color}\n            d=\"M12,0C5.4,0,0,5.4,0,12s5.4,12,12,12s12-5.4,12-12S18.6,0,12,0L12,0z M12,18c-0.6,0-1-0.5-1-1\n   s0.4-1,1-1c0.5,0,1,0.5,1,1S12.5,18,12,18L12,18z M13,12.5c0,0.5-0.5,1-1,1c-0.6,0-1-0.5-1-1V7c0-0.6,0.4-1,1-1c0.5,0,1,0.4,1,1\n   V12.5L13,12.5z\" />\n    </svg>\n    );\n\nWarningSymbol.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default WarningSymbol;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    criticals: {\n        color: defaultStyles.color5,\n    },\n    majors: {\n        color: defaultStyles.color17,\n    },\n    minors: {\n        color: defaultStyles.color15,\n    },\n    warnings: {\n        color: defaultStyles.color4,\n    },\n    indeterminates: {\n        color: defaultStyles.color6,\n    },\n    cleared: {\n        color: defaultStyles.color15,\n    },\n    wrapper: {\n        width: '1.2rem',\n        alignSelf: 'center',\n        justifySelf: 'center',\n        lineHeight: 0,\n    },\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    loadStatus,\n    selectedDeviceRowsSelector,\n    selectDeviceGroupsByDeviceUnion,\n    selectLoadStatus,\n} from 'modules/devices/selectors';\nimport {\n    addDevicesToGroup,\n    loadDeviceGroups,\n    removeDevicesFromGroup,\n} from 'modules/devices/actions';\nimport LabelsMenu from './LabelsMenu';\n\nclass LabelsMenuContainer extends React.Component {\n    // eslint-disable-next-line camelcase, react/sort-comp\n    UNSAFE_componentWillMount() {\n        const { status, onGetDeviceGroupsForSelectedDevices } = this.props;\n        if (!status || status === loadStatus.NOT_LOADED) {\n            onGetDeviceGroupsForSelectedDevices();\n        }\n    }\n\n    render() {\n        const {\n            devices,\n            deviceGroups,\n            onAddDevicesToGroup,\n            onRemoveDevicesFromGroup,\n        } = this.props;\n\n        return (\n            <LabelsMenu\n                deviceGroups={deviceGroups}\n                devices={devices.map(d => d.data.name)}\n                onAddDevicesToGroup={onAddDevicesToGroup}\n                onRemoveDevicesFromGroup={onRemoveDevicesFromGroup}\n                enabled={devices.length > 0}\n            />\n        );\n    }\n}\n\nLabelsMenuContainer.propTypes = {\n    devices: PropTypes.arrayOf(Object),\n    deviceGroups: PropTypes.arrayOf(PropTypes.string),\n    status: PropTypes.string,\n    onAddDevicesToGroup: PropTypes.func,\n    onGetDeviceGroupsForSelectedDevices: PropTypes.func,\n    onRemoveDevicesFromGroup: PropTypes.func,\n};\n\nLabelsMenuContainer.defaultProps = {\n    deviceGroups: [],\n    devices: [],\n    onGetDeviceGroupsForSelectedDevices: () => (null),\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetDeviceGroupsForSelectedDevices() {\n        dispatch(loadDeviceGroups());\n    },\n    onRemoveDevicesFromGroup(devices, group) {\n        dispatch(removeDevicesFromGroup(devices, group));\n    },\n    onAddDevicesToGroup(devices, group) {\n        dispatch(addDevicesToGroup(devices, group));\n    },\n});\n\nconst mapStateToProps = state =>\n    ({\n        devices: selectedDeviceRowsSelector(state),\n        deviceGroups: selectDeviceGroupsByDeviceUnion(state),\n        status: selectLoadStatus(state),\n    });\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LabelsMenuContainer);\n\nexport {\n    LabelsMenuContainer as _LabelsMenuContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ToolTip from '@webui-one/components/ToolTip/ToolTip';\nimport Downarrow from '@webui-one/styles/static/Downarrow';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { labelsMenu as style } from './DeviceManagerStyles';\nimport LabelSymbol from './static/LabelSymbol';\n\nclass LabelsMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onAddDevicesToGroup = this.onAddDevicesToGroup.bind(this);\n        this.onRemoveDevicesFromGroup = this.onRemoveDevicesFromGroup.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.showMenu = this.showMenu.bind(this);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n        this.state = { menuOpen: false };\n    }\n\n    // eslint-disable-next-line camelcase, react/sort-comp\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { enabled } = nextProps;\n        const { enabled: wasEnabled } = this.props;\n        if (!enabled && wasEnabled) this.hideMenu();\n    }\n\n    componentDidUpdate() {\n        if (this.newLabelInput) this.newLabelInput.focus();\n    }\n\n    onKeyDown(e) {\n        if (e.keyCode === 13) this.onAddDevicesToGroup();\n        if (e.keyCode === 27) this.hideMenu();\n    }\n\n    onAddDevicesToGroup() {\n        this.newLabelInput.focus();\n        const { devices, onAddDevicesToGroup } = this.props;\n        if (this.newLabelInput.value && devices.length) {\n            onAddDevicesToGroup(devices, this.newLabelInput.value);\n            this.newLabelInput.value = '';\n        }\n    }\n\n    onRemoveDevicesFromGroup(group) {\n        const { devices, onRemoveDevicesFromGroup } = this.props;\n        onRemoveDevicesFromGroup(devices, group);\n    }\n\n    showMenu() {\n        if (this.props.enabled) this.setState({ menuOpen: true });\n    }\n\n    hideMenu() {\n        this.setState({ menuOpen: false });\n    }\n\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const { deviceGroups, enabled } = this.props;\n        const { menuOpen } = this.state;\n\n        const labels = deviceGroups.map(lbl => (\n            <div\n                data-handle={`menu-item-${lbl}`}\n                key={`menu-item-${lbl}`}\n                style={style.labelContainer}\n                >\n                <div style={style.label}>{lbl}</div>\n                <button\n                    style={style.deleteLabel}\n                    onClick={() => this.onRemoveDevicesFromGroup(lbl)}\n                    >\n                    ×\n                </button>\n            </div>\n        ));\n        const menuColor = enabled ? defaultStyles.color1 : defaultStyles.color6;\n        return (\n            <div\n                style={style.container}\n                data-handle=\"label-menu\"\n                >\n                <ToolTip\n                    direction=\"left\"\n                    toolTipText=\"add/remove groups\"\n                    ref={(tt) => { this.tooltip = tt; }}\n                />\n                <button\n                    style={style.button}\n                    onClick={this.showMenu}\n                    onMouseDown={this.showTooltip}\n                    onMouseUp={this.hideTooltip}\n                    onMouseEnter={this.showTooltip}\n                    onMouseLeave={this.hideTooltip}\n                    disabled={false /* can not disable. ToolTip wont work */}\n                >\n                    <div style={style.symbol}><LabelSymbol color={menuColor} /></div>\n                    <div style={style.arrow}><Downarrow color={menuColor} /></div>\n                </button>\n                {menuOpen && <div style={style.pop}>\n                    <button\n                        data-handle=\"overlay\"\n                        onClick={() => this.hideMenu()}\n                        style={style.overlay}\n                         />\n                    <div style={style.menuArrowShadow} />\n                    <div style={style.wrapper}>\n                        <div style={style.header}>Groups in selection:</div>\n                        { labels }\n                        <div data-handle=\"add-label\" style={style.createContainer}>\n                            <input\n                                style={style.input}\n                                placeholder=\"add label\"\n                                ref={(input) => {\n                                    this.newLabelInput = input;\n                                    return this.newLabelInput;\n                                }}\n                                onKeyDown={this.onKeyDown}\n                            />\n                            <button\n                                style={style.deleteLabel}\n                                onClick={this.onAddDevicesToGroup}\n                            >+</button>\n                        </div>\n                    </div>\n                    <div style={style.menuArrow} />\n                </div>}\n            </div>\n        );\n    }\n}\n\nLabelsMenu.propTypes = {\n    devices: PropTypes.arrayOf(PropTypes.string),\n    deviceGroups: PropTypes.arrayOf(PropTypes.string),\n    enabled: PropTypes.bool,\n    onAddDevicesToGroup: PropTypes.func,\n    onRemoveDevicesFromGroup: PropTypes.func,\n};\n\nLabelsMenu.defaultProps = {\n    deviceGroups: [],\n    devices: [],\n    onGetDeviceGroupsForSelectedDevices: () => (null),\n};\n\n\nexport default LabelsMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LabelSymbol = ({ color }) =>\n    (<svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 23 24\">\n        <path\n            fill={color}\n            d=\"M23,8l-1-8l-8.3,0L0,16.1L9.3,24L23,8z M17.8,2.3c0.5-0.6,1.5-0.7,2.2-0.2c0.6,0.5,0.7,1.5,0.2,2.2S18.6,5,18,4.4\n   c0,0,0,0,0,0l0,0C17.4,3.9,17.3,2.9,17.8,2.3z\" />\n    </svg>);\n\nLabelSymbol.propTypes = {\n    color: PropTypes.string,\n};\n\nLabelSymbol.defaultProps = {\n    color: 'red',\n};\n\nexport default LabelSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    labelAddAction,\n    labelRemoveAction,\n    loadDeviceGroups,\n} from 'modules/devices/actions';\nimport {\n    labelTypes,\n    selectDeviceGroupsWithDevices,\n    selectLabels,\n    selectLoadStatus,\n} from 'modules/devices/selectors';\nimport LabelFilter, {\n    getLabelTextNode,\n} from './LabelFilter';\nimport style from './LabelFilterStyles';\n\nclass LabelFilterContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getFilteredLabels = this.getFilteredLabels.bind(this);\n        this.labelAdd = this.labelAdd.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onFilterMenuRef = this.onFilterMenuRef.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.isElementInVisibleInList = this.isElementInVisibleInList.bind(this);\n        this.state = {\n            autoCompleteIsVisible: false,\n            dropDownIndex: 0,\n            inputValue: '',\n            inputLabels: [],\n        };\n    }\n\n    componentDidUpdate() {\n        if (this.deviceGroupsOption && this.deviceGroups && !this.isElementInVisibleInList()) {\n            this.deviceGroups.scrollTop = this.deviceGroupsOption.offsetTop;\n        }\n    }\n\n    onFocus() {\n        const inputLabels = this.getFilteredLabels('');\n        this.setState({ autoCompleteIsVisible: true, dropDownIndex: 0, inputLabels });\n    }\n\n    onBlur() {\n        this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n    }\n\n    onChange(inputValue) {\n        const inputLabels = this.getFilteredLabels(inputValue);\n        this.setState({ dropDownIndex: 0, inputValue, inputLabels });\n    }\n\n    onKeyDown(e) {\n        const { autoCompleteIsVisible, dropDownIndex, inputLabels } = this.state;\n\n        if (e.key === 'Enter' && autoCompleteIsVisible) {\n            const label = inputLabels[dropDownIndex];\n            if (label) this.labelAdd();\n        }\n        if (e.key === 'Escape') {\n            this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n        }\n        if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && autoCompleteIsVisible) {\n            const numLabels = inputLabels.length;\n            const diff = e.key === 'ArrowUp' ? -1 : 1;\n            this.setState({ dropDownIndex: (dropDownIndex + diff + numLabels) % numLabels });\n            e.preventDefault();\n        }\n    }\n\n    onFilterMenuRef(dg) {\n        this.deviceGroups = dg;\n    }\n\n    getFilteredLabels(inputValue) {\n        const { deviceGroups, labels } = this.props;\n        const labelTypesCopy = { ...labelTypes };\n        delete labelTypesCopy[labelTypes.SEARCH];\n\n        const nonEmpty = Object.keys(deviceGroups).filter((group) => {\n            if (Object.values(labels).map(l => l.name).indexOf(group) >= 0) return false;\n            if (!deviceGroups[group]) return false;\n            if (deviceGroups[group].length === 0) return false;\n            return true;\n        });\n        const beginsWith = nonEmpty.filter((group) => {\n            if (group.startsWith(inputValue)) return true;\n            return false;\n        });\n        const includes = nonEmpty.filter((group) => {\n            if (!group.includes(inputValue) ||\n            group.startsWith(inputValue)) return false;\n            return true;\n        });\n        const filteredLabels = beginsWith.concat(includes).reduce((acc, name) => [\n            ...acc,\n            ...Object.values(labelTypesCopy).map(type => ({ name, type })),\n        ], []);\n\n        if (inputValue) {\n            return [\n                { name: inputValue, type: labelTypes.SEARCH },\n                ...filteredLabels,\n            ];\n        }\n        return filteredLabels;\n    }\n\n    getFilteredGroupsComponents() {\n        const { autoCompleteIsVisible, dropDownIndex, inputLabels } = this.state;\n        if (!autoCompleteIsVisible) return [];\n        return inputLabels.map((val, ix) => (\n            <a\n                className=\"deviceGroups\"\n                role=\"button\"\n                tabIndex={0}\n                onMouseDown={() => (this.labelAdd(val))}\n                data-handle={`label-add-${val.name}-${val.type}`}\n                style={dropDownIndex === ix\n                    ? style.deviceGroupsOptionsActive : style.deviceGroupsOptions\n                }\n                ref={ix === dropDownIndex && ((r) => { this.deviceGroupsOption = r; })}\n                key={`info${ix}`}\n                >{getLabelTextNode(val)}\n            </a>\n        ));\n    }\n\n    labelAdd(label) {\n        const { dropDownIndex } = this.state;\n        const { onLabelAdd } = this.props;\n        const labelToAdd = this.state.inputLabels[dropDownIndex];\n        if (!label && !labelToAdd) return;\n\n        onLabelAdd(label || labelToAdd);\n        this.setState({ inputValue: '' });\n    }\n\n    isElementInVisibleInList() {\n        const { deviceGroups } = this.props;\n\n        if (!deviceGroups) return false;\n        const rect = this.deviceGroupsOption.getBoundingClientRect();\n\n        return rect.bottom > this.deviceGroups.bottom &&\n            rect.top < this.deviceGroups.top;\n    }\n\n    render() {\n        const { labels, onLabelRemove } = this.props;\n        const { autoCompleteIsVisible } = this.state;\n        const filteredDeviceGroups = this.getFilteredGroupsComponents();\n\n        return (\n            <LabelFilter\n                autoCompleteIsVisible={autoCompleteIsVisible}\n                filteredDeviceGroups={filteredDeviceGroups}\n                labels={labels}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                onFilterMenuRef={this.onFilterMenuRef}\n                onFocus={this.onFocus}\n                onKeyDown={this.onKeyDown}\n                onLabelRemove={onLabelRemove}\n                value={this.state.inputValue}\n            />\n        );\n    }\n}\n\nLabelFilterContainer.propTypes = {\n    deviceGroups: PropTypes.shape(Object),\n    labels: PropTypes.shape(Object),\n    onLabelAdd: PropTypes.func.isRequired,\n    onLabelRemove: PropTypes.func.isRequired,\n};\nLabelFilterContainer.defaultProps = {\n    labels: {},\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLabelAdd(label) {\n        dispatch(labelAddAction(label));\n    },\n    onLabelRemove(label) {\n        dispatch(labelRemoveAction(label));\n    },\n    onLoadDeviceGroups() {\n        dispatch(loadDeviceGroups());\n    },\n});\n\nconst mapStateToProps = state => ({\n    deviceGroups: selectDeviceGroupsWithDevices(state),\n    labels: selectLabels(state),\n    status: selectLoadStatus(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LabelFilterContainer);\n\nexport {\n    LabelFilterContainer as _LabelFilterContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { labelTypes } from 'modules/devices/selectors';\nimport style from './LabelFilterStyles';\nimport cssStyles from './LabelFilterStyles.css';\nimport DeleteSymbol from './static/DeleteSymbol';\n\n\nexport const getLabelTypeColor = (label) => {\n    switch (label.type) {\n    case labelTypes.LBL_ONE_OF:\n        return '#d0c994';\n    case labelTypes.LBL_INCLUDE:\n        return '#7faa85';\n    case labelTypes.LBL_EXCLUDE:\n        return '#e5a5a5';\n    case labelTypes.SEARCH:\n        return '';\n    default:\n        throw Error(`Unknown label type: '${label.type}'`);\n    }\n};\n\nexport const getLabelTypeText = (label) => {\n    switch (label.type) {\n    case labelTypes.LBL_ONE_OF:\n        return '∪';\n    case labelTypes.LBL_INCLUDE:\n        return '∩';\n    case labelTypes.LBL_EXCLUDE:\n        return '¬';\n    case labelTypes.SEARCH:\n        return 'include:';\n    default:\n        throw Error(`Unknown label type: '${label.type}'`);\n    }\n};\n\nexport const getLabelTextNode = label => (\n    <span>\n        <span style={{ color: getLabelTypeColor(label) }}>{getLabelTypeText(label)}</span>\n        {` ${label.name}`}\n    </span>\n);\n\nconst LabelFilter = ({\n    autoCompleteIsVisible,\n    filteredDeviceGroups,\n    labels,\n    onBlur,\n    onChange,\n    onFilterMenuRef,\n    onFocus,\n    onInitHide,\n    onKeyDown,\n    onLabelRemove,\n    onResetHide,\n    value,\n}) => {\n    const content = Object.values(labels).map((label, index) => (\n        <div\n            style={{\n                ...style.wrapper,\n            }}\n            key={index}\n            data-handle={`filter-${label.name}-${label.type}`}\n            >\n            <div style={style.label}>{getLabelTextNode(label)}</div>\n            <button\n                style={style.button}\n                onClick={() => { onLabelRemove(label); }}\n                key={`btn${index}`}\n            >\n                <DeleteSymbol color=\"inherit\" />\n            </button>\n        </div>\n    ));\n\n    return (\n        <div style={style.labelFilter} data-handle=\"labelFilter\">\n            {content}\n            <div style={style.wrapper}>\n                <input\n                    className={cssStyles.input}\n                    onKeyDown={onKeyDown}\n                    data-handle=\"labelInput\"\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    onChange={e => onChange(e.target.value)}\n                    placeholder=\"+Add filter\"\n                    value={value}\n                />\n                <span\n                    style={style.button}\n                    key=\"add\"\n                 />\n                {autoCompleteIsVisible && filteredDeviceGroups.length > 0 &&\n                    <div style={style.popDownMenu.pop}>\n                        <div style={style.popDownMenu.menuArrowShadow} />\n                        <div\n                            data-handle=\"add-filter-menu\"\n                            style={style.popDownMenu.wrapper}\n                            onMouseEnter={onResetHide}\n                            onMouseLeave={onInitHide}\n                            onBlur={onBlur}\n                            ref={onFilterMenuRef}\n                        >\n                            <div>\n                                {filteredDeviceGroups}\n                            </div>\n                        </div>\n                        <div style={style.popDownMenu.menuArrow} />\n                    </div>\n                }\n            </div>\n        </div>\n    );\n};\n\nLabelFilter.propTypes = {\n    autoCompleteIsVisible: PropTypes.bool,\n    filteredDeviceGroups: PropTypes.arrayOf(PropTypes.shape(Object)),\n    labels: PropTypes.shape(Object),\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onFilterMenuRef: PropTypes.func,\n    onInitHide: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onLabelRemove: PropTypes.func,\n    onResetHide: PropTypes.func,\n    value: PropTypes.string,\n};\n\nexport default LabelFilter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_2xF7zrr-NrJ90MnbTZOqo5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DeleteSymbol = ({ color }) =>\n    (<span style={{ color }}>×</span>);\n\nDeleteSymbol.propTypes = {\n    color: PropTypes.string,\n};\n\nDeleteSymbol.defaultProps = {\n    color: 'red',\n};\n\nexport default DeleteSymbol;\n","import { connect } from 'react-redux';\nimport {\n    selectedDeviceRowsSelector,\n    selectDeviceActions,\n} from 'modules/devices/selectors';\nimport {\n    runCustomActionThunk,\n} from 'modules/yangActions/actions';\nimport BatchActions from 'Common/Components/BatchActions/BatchActions';\n\n\nconst mapStateToProps = state => ({\n    rows: selectedDeviceRowsSelector(state),\n    actions: selectDeviceActions(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAction: (action, path) => dispatch(runCustomActionThunk({ path: `${path}/${action}` })),\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BatchActions);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import { connect } from 'react-redux';\nimport {\n    selectLabels,\n    selectDeviceSearch,\n    selectHasActiveLabels,\n} from 'modules/devices/selectors';\nimport Summary from 'Common/Components/Summary/Summary';\n\nconst mapStateToProps = state => ({\n    labels: selectLabels(state),\n    keyword: selectDeviceSearch(state),\n    unit: (selectHasActiveLabels(state) || selectDeviceSearch(state)) ? 'devices' : '',\n});\n\nexport default connect(\n    mapStateToProps,\n)(Summary);\n"],"sourceRoot":""}