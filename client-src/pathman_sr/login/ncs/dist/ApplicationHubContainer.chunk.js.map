{"version":3,"sources":["webpack:///./src/ApplicationHub/ApplicationHubContainer.jsx","webpack:///./src/ApplicationHub/ApplicationHub.jsx","webpack:///./src/ApplicationHub/ApplicationGrid.jsx","webpack:///./src/ApplicationHub/ApplicationIcon.jsx","webpack:///./src/ApplicationHub/ApplicationIconStyles.js","webpack:///./src/ApplicationHub/static/BoxIcon.jsx","webpack:///./src/ApplicationHub/ApplicationGridStyles.js","webpack:///./src/ApplicationHub/ApplicationHubStyles.js"],"names":["hypenToCamel","str","replace","m","toUpperCase","selectApplicationCategories","applications","Object","keys","reduce","acc","appKey","app","obj","a","key","keysToCamel","category","res","hidden","title","applicationItems","push","selectApplicationHubCategories","createSelector","selectPackages","applicationsSelector","packages","categories","packageCategory","translate","Messages","APPLICATIONHUB","PACKAGES","sort","packageKey","pack","url","packageUrl","name","webui","entries","find","href","promoLabel","id","description","package","packageApplication","PACKAGE_PROMOLABEL","selectPackageCategories","map","k","ApplicationHubContainer","React","Component","UNSAFE_componentWillMount","this","props","onLoad","render","propTypes","PropTypes","func","isLoading","bool","mapDispatchToProps","dispatch","getPackagesAsyncAction","mapStateToProps","state","isLoadingSelector","connect","ApplicationHub","applicationCategories","style","application","defaultStyles","shadow","wrapper","color","loader","version","isDevEnv","buildType","arrayOf","shape","isRequired","ApplicationGrid","applicationElements","appProps","gridBox","header","grid","clearFix","object","string","ApplicationIcon","link","isNativeApplication","Link","to","pathname","applicationHub","native","data-application-type","logo","data-handle","packageType","applicationIcon","titlePackage","icon","color9","position","fontFamily","font2","textDecoration","display","minWidth","marginRight","marginBottom","backgroundColor","color3","boxShadow","minHeight","width","backgroundImage","cisco","height","backgroundRepeat","margin","backgroundPositionY","textColor4","fontSize","large1","color1","lineHeight","paddingLeft","fontWeight","whiteSpace","overflow","textOverflow","custom","color7","textColor2","medium1","padding","verticalAlign","color10","small3","right","top","BoxIcon","x","y","viewBox","xmlSpace","fill","points","defaultProps","color8","medium3","flexWrap","clear","pattern1","flexFlow","flexGrow","maxWidth","textColor3","backgroundColor1"],"mappings":"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","file":"ApplicationHubContainer.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n    getPackagesAsyncAction,\n} from 'modules/packages/actions';\nimport {\n    selectPackages,\n} from 'modules/packages/reducer';\nimport {\n    packageUrl,\n} from 'modules/packages/utils';\nimport {\n    applicationsSelector,\n    isLoadingSelector,\n} from 'modules/applications/selectors';\nimport { Messages, translate } from 'modules/intl';\nimport ApplicationHub from './ApplicationHub';\n\nconst hypenToCamel = str => str.replace(/-([a-z])/g, m => m[1].toUpperCase());\n\nconst keysToCamel = obj => Object.keys(obj).reduce((a, key) => (\n    { ...a, [hypenToCamel(key)]: obj[key] }\n), {});\nconst packageApplication = (pack, category, href, promoLabel) => ({\n    id: pack.name,\n    title: pack.name,\n    category,\n    href,\n    description: pack.description,\n    promoLabel,\n    package: true,\n});\n\nconst selectApplicationCategories = (applications) => {\n    const categories = Object.keys(applications).reduce((acc, appKey) => {\n        const app = keysToCamel(applications[appKey]);\n        const { category } = app;\n        const res = acc;\n        if (app.hidden === true || app.hidden === 'true') {\n            return res;\n        }\n        if (!(category in acc)) {\n            res[category] = {\n                key: category,\n                title: category,\n                applicationItems: [],\n            };\n        }\n        res[category].applicationItems.push(app);\n        return res;\n    }, {});\n    return categories;\n};\n\nconst selectPackageCategories = (packages, applications) => {\n    const packageCategory = translate(Messages.APPLICATIONHUB.PACKAGES);\n    const categories = Object.keys(packages).sort().reduce((acc, packageKey) => {\n        const res = acc;\n        const pack = packages[packageKey];\n        const url = packageUrl(pack.name);\n        if (pack.webui !== true) {\n            return res;\n        }\n        const application = Object.entries(applications).find(([name, app]) => (\n            name === pack.name && app.href === url\n        ));\n        if (application) {\n            return res;\n        }\n        if (!(packageCategory in acc)) {\n            res[packageCategory] = {\n                key: packageCategory,\n                title: packageCategory,\n                applicationItems: [],\n            };\n        }\n        res[packageCategory].applicationItems.push(\n            packageApplication(\n                pack,\n                packageCategory,\n                packageUrl(pack.name),\n                translate(Messages.APPLICATIONHUB.PACKAGE_PROMOLABEL),\n            ),\n        );\n        return res;\n    }, {});\n    return categories;\n};\n\nconst selectApplicationHubCategories = createSelector(\n    selectPackages,\n    applicationsSelector,\n    (packages, applications) => {\n        const categories = {\n            ...selectApplicationCategories(applications, packages),\n            ...selectPackageCategories(packages, applications),\n        };\n        return Object.keys(categories).map(k => categories[k]);\n    },\n);\n\nexport class ApplicationHubContainer extends React.Component {\n    // eslint-disable-next-line camelcase, react/sort-comp\n    UNSAFE_componentWillMount() {\n        this.props.onLoad();\n    }\n\n    render() {\n        return <ApplicationHub {...this.props} />;\n    }\n}\n\nApplicationHubContainer.propTypes = {\n    onLoad: PropTypes.func,\n    isLoading: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad() {\n        dispatch(getPackagesAsyncAction());\n    },\n});\n\nconst mapStateToProps = state => ({\n    categories: selectApplicationHubCategories(state),\n    isLoading: isLoadingSelector(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ApplicationHubContainer);\n\nexport {\n    selectApplicationHubCategories as _selectApplicationHubCategories,\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { isDevEnv } from '@webui-one/core/utils/functional';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport ApplicationGrid from './ApplicationGrid';\nimport style from './ApplicationHubStyles';\n\nconst buildType = () => (isDevEnv() ? 'development build' : 'release build');\n\nconst ApplicationHub = ({ categories, isLoading }) => {\n    const applicationCategories = categories.map(category => (\n        <ApplicationGrid {...category} />\n    ));\n    return (\n        <div style={style.application}>\n            <HeaderContainer >\n                <div style={defaultStyles.shadow} />\n            </HeaderContainer>\n            <div style={style.wrapper}>\n                <div style={style.applications}>\n                    {isLoading && <Loader color={style.loader.color} />}\n                    {!isLoading && applicationCategories}\n                    <div style={style.version}>webui one, {buildType()}</div>\n                </div>\n            </div>\n            <FooterContainer />\n        </div>\n    );\n};\n\nApplicationHub.propTypes = {\n    categories: PropTypes.arrayOf(PropTypes.shape).isRequired,\n    isLoading: PropTypes.bool,\n};\n\nexport default ApplicationHub;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ApplicationIcon from './ApplicationIcon';\nimport style from './ApplicationGridStyles';\n\nconst ApplicationGrid = (props) => {\n    const applicationElements = props.applicationItems.map(appProps => (\n        <ApplicationIcon key={appProps.id} {...appProps} />\n    ));\n    return (\n        <div style={style.gridBox}>\n            <div style={style.header}>{props.title.toUpperCase()}</div>\n            <div style={style.grid}>\n                {applicationElements}\n            </div>\n            <div style={style.clearFix} />\n        </div>\n    );\n};\n\nApplicationGrid.propTypes = {\n    applicationItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default ApplicationGrid;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport { isNativeApplication } from 'Application/Routes';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './ApplicationIconStyles';\nimport BoxIcon from './static/BoxIcon';\n\nconst ApplicationIcon = (props) => {\n    const { href } = props;\n    const native = isNativeApplication(props);\n    let link;\n\n    if (native) {\n        link = (\n            <Link\n                to={{\n                    pathname: href,\n                    state: {\n                        applicationHub: true,\n                    },\n                }}\n                style={style.native}\n                data-application-type=\"native\"\n                >\n                <div style={style.logo} />\n                <div style={style.title}>\n                    {props.title}\n                </div>\n                <div style={style.description}>\n                    {props.description}\n                </div>\n                {props.promoLabel &&\n                    <div data-handle=\"promoLabel\" style={style.promoLabel}>{props.promoLabel}</div>\n                    }\n            </Link>\n        );\n    } else {\n        const packageType = props.package === true ? 'package' : 'custom';\n        link = (\n            <Link href={href} style={style.applicationIcon} data-application-type={packageType}>\n                <div style={style.logo} />\n                <div\n                    data-handle=\"applicationTitle\"\n                    style={props.package ? style.titlePackage : style.title}>\n                    {props.package && <div style={style.icon}>\n                        <BoxIcon color={defaultStyles.color9} />\n                    </div>}\n                    {props.title}\n                </div>\n                <div style={style.description}>\n                    {props.description}\n                </div>\n                {props.promoLabel &&\n                    <div data-handle=\"promoLabel\" style={style.promoLabel}>{props.promoLabel}</div>\n                    }\n            </Link>\n        );\n    }\n    return (<div data-handle=\"applicationIcon\" style={style.wrapper} key={props.href}>\n        { link }\n    </div>);\n};\n\nApplicationIcon.propTypes = {\n    description: PropTypes.string,\n    href: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    promoLabel: PropTypes.string,\n    package: PropTypes.bool,\n};\n\nexport default ApplicationIcon;\n","import cisco from '@webui-one/styles/static/cisco.svg';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst applicationIcon = {\n    position: 'relative',\n    fontFamily: defaultStyles.font2,\n    textDecoration: 'none',\n    display: 'inline-block',\n    minWidth: '17rem',\n    marginRight: '1rem',\n    marginBottom: '1rem',\n    backgroundColor: defaultStyles.color3,\n    boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.1)',\n    minHeight: '13rem',\n    width: '12rem',\n};\n\nconst logo = {\n    backgroundImage: `url(/login${cisco})`,\n    width: '2.625rem',\n    height: '2.625rem',\n    backgroundRepeat: 'no-repeat',\n    margin: '0.5rem 1.5rem',\n    backgroundPositionY: 'center',\n};\n\nconst title = {\n    color: defaultStyles.textColor4,\n    fontSize: defaultStyles.large1,\n    backgroundColor: defaultStyles.color1,\n    lineHeight: '2.5',\n    paddingLeft: '1rem',\n    fontWeight: '300',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n};\n\nexport default {\n    wrapper: { display: 'flex' },\n    applicationIcon,\n    native: {\n        ...applicationIcon,\n    },\n    custom: {\n        ...applicationIcon,\n        backgroundColor: '#ddf0f9',\n    },\n    package: {\n        ...applicationIcon,\n        backgroundColor: '#ddf0dd',\n    },\n    title,\n    titlePackage: {\n        ...title,\n        backgroundColor: defaultStyles.color7,\n        color: defaultStyles.textColor2,\n    },\n    description: {\n        fontSize: defaultStyles.medium1,\n        lineHeight: 'normal',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        color: defaultStyles.textColor2,\n        padding: '1rem',\n    },\n    logo: {\n        ...logo,\n    },\n    icon: {\n        width: '2.625rem',\n        height: '2.625rem',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        marginRight: '1rem',\n    },\n    promoLabel: {\n        backgroundColor: defaultStyles.color10,\n        color: defaultStyles.textColor4,\n        fontSize: defaultStyles.small3,\n        padding: '0.4rem 0.8rem',\n        position: 'absolute',\n        right: '0',\n        top: '0',\n    },\n};\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BoxIcon = ({ color }) =>\n    (<svg x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" xmlSpace=\"preserve\">\n        <g fill={color}>\n            <g>\n                <polygon points=\"12.4,10.9 3.8,6.5 0.9,10.2 9.5,14.7 12.5,10.9\" />\n                <polygon points=\"12.4,10.9 15.4,14.8 24,8.9 21.1,5.1\" />\n                <polygon points=\"24,4.9 15.3,2.1 12.4,2.4 21,5.1\" />\n                <polygon points=\"12.5,2.4 8.8,2.6 0,6.8 3.8,6.6\" />\n            </g>\n            <polygon points=\"15.1,15.7 12.3,11.9 9.7,15.3 3.2,11.8 3.1,17 12.7,21.9 22.2,15.4 22,10.8\" />\n        </g>\n    </svg>);\n\nBoxIcon.propTypes = {\n    color: PropTypes.string,\n};\n\nBoxIcon.defaultProps = {\n    color: 'red',\n};\n\nexport default BoxIcon;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    gridBox: {\n    },\n    header: {\n        backgroundColor: defaultStyles.color8,\n        fontFamily: defaultStyles.font2,\n        fontSize: defaultStyles.medium3,\n        color: defaultStyles.textColor4,\n        display: 'inline-block',\n        padding: '0.75rem',\n    },\n    grid: {\n        padding: '2rem 0',\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    clearFix: {\n        clear: 'both',\n    },\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    application: {\n        height: '100vh',\n        backgroundImage: defaultStyles.pattern1,\n        display: 'flex',\n        flexFlow: 'column',\n    },\n    wrapper: {\n        overflow: 'auto',\n        padding: '1rem 0 1rem 1rem',\n        flexGrow: '1',\n    },\n    applications: {\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n    },\n    version: {\n        fontFamily: defaultStyles.font2,\n        color: defaultStyles.textColor3,\n        fontSize: defaultStyles.medium1,\n    },\n    loader: {\n        color: defaultStyles.backgroundColor1,\n    },\n};\n"],"sourceRoot":""}