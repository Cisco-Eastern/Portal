{"version":3,"sources":["webpack:///./src/ConfigurationEditor/ConfigurationEditorContainer.jsx","webpack:///./src/Common/Components/Breadcrumb/BreadcrumbStyles.js","webpack:///./src/Common/Components/ConfigRender/DataContainer.jsx","webpack:///./src/modules/comet/configeditor.js","webpack:///./src/modules/breadcrumbs/selectors.js","webpack:///./src/ConfigurationEditor/ConfigurationEditor.jsx","webpack:///./src/Common/Components/Breadcrumb/BreadcrumbContainer.jsx","webpack:///./src/modules/breadcrumbs/actions.js","webpack:///./src/Common/Components/Breadcrumb/Breadcrumb.jsx","webpack:///./packages/styles/static/NavigateHome.jsx","webpack:///./packages/styles/static/NavigateUp.jsx","webpack:///./src/Common/Components/Breadcrumb/BreadcrumbInput.jsx","webpack:///./src/ConfigurationEditor/PackagesAndModulesContainer.jsx","webpack:///./src/ConfigurationEditor/PackagesAndModules.jsx"],"names":["routeToPath","route","isString","indexOf","getSubUri","subPath","encodedSubPath","pathToObjects","length","uri","ConfigurationEditorContainer","React","Component","constructor","props","super","this","shortcuts","shortcutHandler","bind","navigateModel","onCometUpdate","componentDidMount","isOperdata","onSetApplicationName","onRegisterShortcut","CONFIGURATION_EDITOR_NAME","updateRoute","componentDidUpdate","prevProps","componentWillUnmount","onUnregistShortcut","onUnsubscribe","notifications","subscription","onCreate","onDelete","onModifiedNodes","onUpdateLeaf","updateConfig","path","wasOperdata","lastLocation","newRoute","onSetLastLocation","onSubscribe","oldRoute","router","baseUrl","url","formatPath","push","shortcut","onSetHideActions","onSetShowEmpty","onSetHideOperdata","applicationConfiguration","showActions","showEmpty","showOperdata","createCheckboxes","style","checkboxStyle","checkboxWrapper","key","group","editable","value","onSetValue","name","styleName","label","labelDisabled","render","includeSubfolders","isEditMode","routeParams","showPackagesAndModules","splat","isBigYang","isBigYangPath","enableSubfolders","onNavigate","checkboxes","subfoldersAreDisabled","applicationName","propTypes","PropTypes","shape","Object","bool","string","func","isRequired","mapStateToProps","state","ownProps","selectApplicationConfiguration","selectIncludeSubfolders","selectIsEditMode","selectIsOperdata","selectLastLocation","previousUrl","selectPreviousUrl","selectShowActions","selectShowEmpty","selectShowOperdata","mapDispatchToProps","dispatch","paths","modifiedNodesAction","getValueAction","deleteChildren","deleteAction","deleteNodeAndChildrenAction","createAction","handler","registerShortcut","unregisterShortcut","applicationNameSetAction","href","setConfigurationEditorHref","showActionsAction","showEmptyAction","showOperdataAction","subscribeCdbOperAction","subscribeChangesAction","unsubscribeCdbOperAction","unsubscribeChangesAction","connect","withRouter","link","color","defaultStyles","color1","textDecoration","fontSize","medium2","lineHeight","alignSelf","crumbs","fontFamily","font2","display","marginLeft","minWidth","overflow","flexShrink","textOverflow","whiteSpace","blackLink","textColor2","navHome","width","navUp","deviceGroupsOptions","cursor","padding","input","labelFilter","labelDropdown","wordBreak","position","backgroundColor","boxShadow","zIndex","deviceGroupsOptionsActive","background","highlight","fontWeight","color2","DataContainer","onLoad","shouldComponentUpdate","nextProps","error","prevSubfolders","prevPath","prevShowEmpty","prevShowOperdata","isLoading","defaultProps","hideIndicators","selectHasError","getDataThunk","setValue","change","nodes","updateNode","keypath","subscriptionPath","changes","removeList","addNode","modifiedNodes","forEach","listPath","getListPath","isNonEmptyString","op","keys","nodePath","node","uniq","breadcrumbs","childrenNames","isList","schema","ConfigurationEditor","showOptions","children","optionsMenu","optionsStyle","container","data-handle","button","onClick","setState","onScroll","overlay","scrollProvoker","pop","menuArrowShadow","menuArrow","commitComponents","application","additionalComponentsRight","secondHeader","contentWrapper","yangMessage","translate","Messages","CONFIGURATIONEDITOR","INCLUDE_SUBFOLDERS_DISABLED","shadow","backgroundContainer","configContainer","rootModels","selectRootModels","selectChildrenNames","selectIsList","onGetChildrenNames","matchString","chunkSize","getChildrenNamesThunk","onReset","resetAction","Breadcrumb","getChildrenNamesStartAction","type","actionTypes","GET_CHILDREN_NAMES_START","getChildrenNamesErrorAction","GET_CHILDREN_NAMES_ERROR","getChildrenNamesCompleteAction","result","GET_CHILDREN_NAMES_COMPLETE","queryListChildrenNames","async","th","jrpc","data","xpathExpr","params","selection","result_as","xpath_expr","context_node","substr","lastIndexOf","chunk_size","funcs","rd","read","getModels","maybeGetModels","jsonrpc","_jsonrpc","selectHasSchemaFromCurrentPath","_selectHasSchemaFromCurrentPath","getState","levels","evaluate_when_entries","kind","RESET","getPath","obj","parentPath","handleNavigateBreadcrumbs","handleGetChildrenNames","handleNavigate","handleReset","originalUrl","breadcrumbPath","isBackNav","newBreadcrumbPath","pathSegments","parentUri","buildBreadcrumbLinks","breadcrumbsCount","getApplicationKey","window","location","pathname","childIsListNode","reverse","reduce","acc","index","Array","isArray","linkText","strip","truncateLongString","Link","to","handleBackNavigate","tempIsList","fullUrl","breadcrumbsPaths","split","links","upLink","enabled","data-breadcrumb-path","onNavigateBreadcrumbs","arrayOf","NavigateHome","version","baseProfile","id","xmlns","x","y","viewBox","xmlSpace","fill","d","NavigateUp","points","DROP_DOWN_LIMIT","sortNames","name1","name2","toLowerCase","updateListNames","inputValue","nameMatch","namespaceMatch","contains","childName","fullName","colonIndex","startsWith","duplicate","item","includes","sort","BreadcrumbInput","handleBlur","handleChange","handleFocus","handleKeyDown","autoCompleteIsVisible","dropDownIndex","undefined","map","getAnchorElement","child","active","pos","search","RegExp","textBits","role","tabIndex","onMouseDown","e","navigate","ref","r","deviceGroupsOption","names","concat","listNames","fullMatch","filter","blur","preventDefault","navigateBreadcrumbs","matchingChars","matchingString","matchingStrings","doMatch","commonString","nrOfNames","newIndex","diff","moduloIndex","Math","min","filteredContainerNames","ix","onKeyDown","onFocus","onBlur","onChange","dg","deviceGroups","getPackageLinks","packages","prefix","pkg","status","isOk","PackagesAndModulesContainer","onReloadPackages","completedAt","reloadError","reloadPending","loadingRootModels","packageLinks","onReload","number","models","expandedModels","getModelsAndPackages","reloadPackages","onSetModelExpanded","modelName","expanded","setModelExpandedAction","selectPackages","selectRootModelsLoading","selectResultPending","RELOAD_PATH","selectCompletedAt","selectError","messages","renderPackages","moduleLinks","headerContainer","header","reloadButton","contentContainer","loadingInformation","loader","textColor1","timeStampToISOLocale","RELOAD_ACTION_PATH","asGrid","category","modelLinks","showStatus","moduleChunk","moduleRow","modulesHeader","packageVersionOk","packageVersionError","getPackageHeader","PackagesAndModules","modelLink","renderModels"],"mappings":"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","file":"ConfigurationEditorContainer.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { applicationNameSetAction } from 'modules/application/actions';\nimport { formatPath } from '@webui-one/core/utils/path';\nimport { isString } from '@webui-one/core/utils/string';\nimport DataContainer from 'Common/Components/ConfigRender/DataContainer';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor';\nimport {\n    subscribeCdbOperAction,\n    subscribeChangesAction,\n    unsubscribeCdbOperAction,\n    unsubscribeChangesAction,\n} from 'modules/comet/actions';\nimport { updateConfig } from 'modules/comet/configeditor';\nimport { selectPreviousUrl } from 'modules/routing/reducer';\nimport { selectIsOperdata } from 'modules/schemas/reducer';\nimport { isBigYangPath } from 'modules/schemas/utils';\nimport {\n    deleteAction,\n    deleteNodeAndChildrenAction,\n    getValueAction,\n    modifiedNodesAction,\n    createAction,\n} from 'modules/nodes/actions';\nimport {\n    registerShortcut,\n    unregisterShortcut,\n} from 'modules/shortcuts/actions';\nimport ConfigurationEditor from './ConfigurationEditor';\nimport {\n    setConfigurationEditorHref,\n    showActionsAction,\n    showEmptyAction,\n    showOperdataAction,\n} from './actions';\nimport { checkboxStyle } from './ConfigurationEditorStyles';\nimport {\n    selectApplicationConfiguration,\n    selectIsEditMode,\n    selectLastLocation,\n    selectShowEmpty,\n    selectShowOperdata,\n    selectShowActions,\n    selectIncludeSubfolders,\n} from './reducer';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport PackagesAndModulesContainer from './PackagesAndModulesContainer';\n\nconst routeToPath = route => (\n    isString(route) && route.indexOf('/') !== 0\n        ? `/${route}`\n        : route\n);\n\nconst getSubUri = (subPath) => {\n    if (!subPath) return '';\n    const encodedSubPath = pathToObjects(subPath);\n    return encodedSubPath[encodedSubPath.length - 1].uri;\n};\n\nclass ConfigurationEditorContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.route = '';\n        this.shortcuts = ['vo', 'va', 'vc', 'vm'];\n        this.shortcutHandler = this.shortcutHandler.bind(this);\n        this.navigateModel = this.navigateModel.bind(this);\n        this.onCometUpdate = this.onCometUpdate.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            isOperdata,\n            onSetApplicationName,\n            onRegisterShortcut,\n        } = this.props;\n        onSetApplicationName(CONFIGURATION_EDITOR_NAME);\n        this.updateRoute(isOperdata);\n\n        onRegisterShortcut(this.shortcuts, this.shortcutHandler);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isOperdata } = prevProps;\n        this.updateRoute(isOperdata);\n    }\n\n    componentWillUnmount() {\n        const {\n            isOperdata,\n            onUnregistShortcut,\n            onUnsubscribe,\n        } = this.props;\n        onUnregistShortcut(this.shortcuts, this.shortcutHandler);\n        onUnsubscribe(\n            routeToPath(this.route),\n            this.onCometUpdate,\n            isOperdata,\n        );\n    }\n\n    onCometUpdate(notifications, subscription) {\n        const {\n            onCreate,\n            onDelete,\n            onModifiedNodes,\n            onUpdateLeaf,\n        } = this.props;\n        updateConfig(\n            notifications,\n            subscription.path,\n            {\n                onCreate,\n                onDelete,\n                onModifiedNodes,\n                onUpdateLeaf,\n            },\n        );\n    }\n\n    updateRoute(wasOperdata) {\n        const {\n            isOperdata,\n            lastLocation,\n            route: newRoute,\n            onSetLastLocation,\n            onSubscribe,\n            onUnsubscribe,\n        } = this.props;\n        const oldRoute = this.route;\n        if (typeof newRoute === 'string' && newRoute !== this.route) {\n            this.route = newRoute;\n        }\n        if (oldRoute !== this.route) {\n            onSubscribe(\n                routeToPath(this.route),\n                this.onCometUpdate,\n                isOperdata,\n            );\n            onUnsubscribe(\n                routeToPath(oldRoute),\n                this.onCometUpdate,\n                wasOperdata,\n            );\n        }\n        if (this.route !== lastLocation) {\n            onSetLastLocation(this.route);\n        }\n        return this.route;\n    }\n\n    navigateModel(subPath) {\n        const { router } = this.props;\n        const baseUrl = CONFIGURATION_EDITOR_NAME;\n        const url = formatPath(`${baseUrl}${getSubUri(subPath)}`);\n        router.push(url);\n    }\n\n    shortcutHandler(shortcut) {\n        const {\n            onSetHideActions,\n            onSetShowEmpty,\n            onSetHideOperdata,\n            applicationConfiguration,\n        } = this.props;\n        const {\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = applicationConfiguration;\n\n        if (shortcut === 'vo') {\n            onSetHideOperdata(showOperdata);\n        } else if (shortcut === 'va') {\n            onSetHideActions(showActions);\n        } else if (shortcut === 'vm') {\n            onSetShowEmpty(!showEmpty);\n        }\n    }\n\n    createCheckboxes() {\n        const {\n            onSetHideActions,\n            onSetShowEmpty,\n            onSetHideOperdata,\n            applicationConfiguration,\n        } = this.props;\n        const {\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = applicationConfiguration;\n        const checkboxes = (\n            <div style={checkboxStyle.checkboxWrapper} key=\"incSub\">\n                <div style={checkboxStyle.group}>\n                    <CheckBox\n                        editable\n                        value={!showEmpty}\n                        onSetValue={value => onSetShowEmpty(!value)}\n                        name=\"config-only\"\n                        styleName=\"radio\"\n                    >\n                        <div style={checkboxStyle.label}>\n                            configuration only\n                        </div>\n                    </CheckBox>\n                </div>\n                <CheckBox\n                    editable\n                    value={showEmpty}\n                    onSetValue={onSetShowEmpty}\n                    name=\"full-model\"\n                    styleName=\"radio\"\n                >\n                    <div style={checkboxStyle.label}>\n                        full model\n                    </div>\n                </CheckBox>\n                <CheckBox\n                    editable={showEmpty}\n                    value={!showActions}\n                    onSetValue={onSetHideActions}\n                    name=\"hide-actions\"\n                    styleName=\"padded\"\n                >\n                    <div style={showEmpty ? checkboxStyle.label : checkboxStyle.labelDisabled}>\n                        hide actions\n                    </div>\n                </CheckBox>\n                <CheckBox\n                    editable={showEmpty}\n                    value={!showOperdata}\n                    onSetValue={onSetHideOperdata}\n                    name=\"hide-oper\"\n                    styleName=\"padded\"\n                >\n                    <div style={showEmpty ? checkboxStyle.label : checkboxStyle.labelDisabled}>\n                        hide operational data\n                    </div>\n                </CheckBox>\n            </div>\n        );\n        return checkboxes;\n    }\n\n    render() {\n        const {\n            includeSubfolders,\n            isEditMode,\n            routeParams,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n        const showPackagesAndModules = (routeParams.splat === '');\n        const isBigYang = isBigYangPath(routeParams.splat);\n        const enableSubfolders = isBigYang ? false : includeSubfolders;\n\n        return (\n            <ConfigurationEditor\n                onNavigate={this.navigateModel}\n                routeParams={routeParams}\n                checkboxes={this.createCheckboxes()}\n                subfoldersAreDisabled={isBigYang}\n                >\n                {showPackagesAndModules ? <PackagesAndModulesContainer /> : <DataContainer\n                    applicationName={CONFIGURATION_EDITOR_NAME}\n                    includeSubfolders={enableSubfolders}\n                    isEditMode={isEditMode}\n                    path={routeParams.splat}\n                    showActions={showActions}\n                    showEmpty={showEmpty}\n                    showOperdata={showOperdata}\n                />}\n            </ConfigurationEditor>\n        );\n    }\n}\n\nConfigurationEditorContainer.propTypes = {\n    applicationConfiguration: PropTypes.shape(Object),\n    includeSubfolders: PropTypes.bool,\n    isEditMode: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n    lastLocation: PropTypes.string,\n    route: PropTypes.string,\n    onUpdateLeaf: PropTypes.func,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    onModifiedNodes: PropTypes.func,\n    onRegisterShortcut: PropTypes.func,\n    onSetApplicationName: PropTypes.func.isRequired,\n    onSetLastLocation: PropTypes.func.isRequired,\n    onSetHideActions: PropTypes.func.isRequired,\n    onSetHideOperdata: PropTypes.func.isRequired,\n    onSetShowEmpty: PropTypes.func.isRequired,\n    onSubscribe: PropTypes.func.isRequired,\n    onUnregistShortcut: PropTypes.func,\n    onUnsubscribe: PropTypes.func.isRequired,\n    routeParams: PropTypes.shape(Object).isRequired,\n    router: PropTypes.shape(Object),\n    showActions: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    const routeParams = (ownProps.routeParams) || {};\n    const { splat: route } = routeParams;\n    return ({\n        applicationConfiguration: selectApplicationConfiguration(state),\n        includeSubfolders: selectIncludeSubfolders(state),\n        isEditMode: selectIsEditMode(state),\n        isOperdata: selectIsOperdata(state, route),\n        lastLocation: selectLastLocation(state),\n        route,\n        previousUrl: selectPreviousUrl(state),\n        showActions: selectShowActions(state),\n        showEmpty: selectShowEmpty(state),\n        showOperdata: selectShowOperdata(state),\n    });\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onModifiedNodes(paths) {\n        dispatch(modifiedNodesAction(paths));\n    },\n    onUpdateLeaf(path, value) {\n        dispatch(getValueAction(path, value));\n    },\n    onDelete(path, deleteChildren = false) {\n        if (deleteChildren !== true) {\n            dispatch(deleteAction(path));\n        } else {\n            dispatch(deleteNodeAndChildrenAction(path));\n        }\n    },\n    onCreate(path) {\n        dispatch(createAction(path));\n    },\n    onRegisterShortcut(shortcuts, handler) {\n        dispatch(registerShortcut(shortcuts, handler));\n    },\n    onUnregistShortcut(shortcuts, handler) {\n        dispatch(unregisterShortcut(shortcuts, handler));\n    },\n    onSetApplicationName(name) {\n        dispatch(applicationNameSetAction(name));\n    },\n    onSetLastLocation(href) {\n        dispatch(setConfigurationEditorHref(href));\n    },\n    onSetHideActions(value) {\n        dispatch(showActionsAction(!value));\n    },\n    onSetShowEmpty(value) {\n        dispatch(showEmptyAction(value));\n    },\n    onSetHideOperdata(value) {\n        dispatch(showOperdataAction(!value));\n    },\n    onSubscribe(path, handler, isOperdata) {\n        if (isOperdata) {\n            return dispatch(subscribeCdbOperAction([path], handler));\n        }\n        return dispatch(subscribeChangesAction([path], handler));\n    },\n    onUnsubscribe(path, handler, isOperdata) {\n        if (isOperdata) {\n            return dispatch(unsubscribeCdbOperAction([path], handler));\n        }\n        return dispatch(unsubscribeChangesAction([path], handler));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withRouter(ConfigurationEditorContainer));\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n    routeToPath as _routeToPath,\n    ConfigurationEditorContainer as _ConfigurationEditorContainer,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst link = {\n    color: defaultStyles.color1,\n    textDecoration: 'none',\n    fontSize: defaultStyles.medium2,\n    lineHeight: 'normal',\n    alignSelf: 'center',\n};\n\nexport default {\n    crumbs: {\n        fontFamily: defaultStyles.font2,\n        display: 'flex',\n        alignSelf: 'center',\n        marginLeft: '0.5rem',\n        minWidth: '5rem',\n        overflow: 'hidden',\n        flexShrink: '0',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    link,\n    blackLink: {\n        ...link,\n        color: defaultStyles.textColor2,\n    },\n    navHome: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n    navUp: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n};\n\nconst labelDropdown = {\n    wordBreak: 'break-all',\n    position: 'absolute',\n    backgroundColor: 'rgb(248, 248, 248)',\n    padding: '0.6rem',\n    boxShadow: '0 0 0.5rem #888888',\n    minWidth: '6rem',\n    zIndex: '1',\n};\n\nconst deviceGroupsOptions = {\n    display: 'flex',\n    color: 'grey',\n    fontSize: '0.8rem',\n    cursor: 'pointer',\n    padding: '.2rem',\n};\n\nconst input = {\n    labelFilter: {\n        alignSelf: 'center',\n        fontSize: '0.6rem',\n    },\n    labelDropdown,\n    deviceGroupsOptions,\n    deviceGroupsOptionsActive: {\n        ...deviceGroupsOptions,\n        background: 'rgba(0, 0, 0, 0.05)',\n    },\n    input: {\n        width: '3rem',\n    },\n    highlight: {\n        fontWeight: 'bold',\n        color: defaultStyles.color2,\n    },\n};\n\nexport {\n    input,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { selectRawLoading as selectLoading } from 'modules/nodes/selectors';\nimport { getDataThunk } from 'modules/data/actions';\nimport { selectHasError } from 'modules/data/selectors';\n\nimport NotFound from 'Common/Components/ConfigRender/NotFound';\nimport SchemaContainer from 'Common/Components/ConfigRender/SchemaContainer';\n\nclass DataContainer extends React.Component {\n    componentDidMount() {\n        const { onLoad, path, includeSubfolders, showEmpty, showOperdata } = this.props;\n        onLoad(path, includeSubfolders, showEmpty, showOperdata);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {\n            error,\n            includeSubfolders,\n            path,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n\n        if (error !== nextProps.error) {\n            return true;\n        }\n\n        if (path !== nextProps.path) {\n            return true;\n        }\n        if (includeSubfolders !== nextProps.includeSubfolders) {\n            return true;\n        }\n        if (showOperdata !== nextProps.showOperdata) {\n            return true;\n        }\n        if (showEmpty !== nextProps.showEmpty) {\n            return true;\n        }\n        if (showActions !== nextProps.showActions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            includeSubfolders,\n            onLoad,\n            path,\n            showEmpty,\n            showOperdata } = this.props;\n        const {\n            includeSubfolders: prevSubfolders,\n            path: prevPath,\n            showEmpty: prevShowEmpty,\n            showOperdata: prevShowOperdata,\n        } = prevProps;\n\n        if (prevPath !== path ||\n            prevSubfolders !== includeSubfolders ||\n            prevShowEmpty !== showEmpty ||\n            prevShowOperdata !== showOperdata) {\n            onLoad(path, includeSubfolders, showEmpty, showOperdata);\n        }\n    }\n\n    render() {\n        const { error, isLoading } = this.props;\n        if (isLoading === true) {\n            return <Loader color=\"white\" />;\n        }\n        if (error) {\n            return <NotFound />;\n        }\n        return (\n            <SchemaContainer {...this.props} />\n        );\n    }\n}\n\nDataContainer.defaultProps = {\n    hideIndicators: false,\n    isLoading: false,\n    path: '',\n};\n\nDataContainer.propTypes = {\n    hideIndicators: PropTypes.bool,\n    error: PropTypes.bool,\n    includeSubfolders: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    showActions: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, { path }) => ({\n    error: selectHasError(state, path),\n    isLoading: selectLoading(state, path),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad(path, includeSubfolders, showEmpty, showOperdata) {\n        return dispatch(getDataThunk({\n            path,\n            includeSubfolders,\n            showEmpty,\n            showOperdata,\n        }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(DataContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    DataContainer as _DataContainer,\n};\n","import { getListPath } from '@webui-one/core/keypath/kp-parser';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { uniq } from '@webui-one/core/utils/array';\n\nconst setValue = (change, nodes) => {\n    const value = change.value;\n    const { updateNode } = nodes;\n    updateNode[change.keypath] = value;\n};\n\nconst updateConfig = (\n    notifications,\n    subscriptionPath,\n    {\n        onDelete,\n        onUpdateLeaf,\n        onCreate,\n        onModifiedNodes,\n    }) => {\n    const changes = notifications.changes || [];\n    const removeList = [];\n    const addNode = {};\n    const updateNode = {};\n    const modifiedNodes = [];\n    changes.forEach((change) => {\n        const listPath = getListPath(change.keypath, subscriptionPath);\n        if (isNonEmptyString(listPath)) {\n            modifiedNodes.push(listPath);\n            return;\n        }\n        if (change.op === 'deleted') {\n            removeList.push([change.keypath, true]);\n        }\n        if (change.op === 'created') {\n            addNode[change.keypath] = true;\n        }\n        if (change.op === 'default_set') {\n            removeList.push([change.keypath, false]);\n        }\n        if (change.op === 'value_set') {\n            setValue(change, { updateNode });\n        }\n    });\n    removeList.forEach(([path, deleteChildren]) => {\n        onDelete(path, deleteChildren);\n    });\n    Object.keys(addNode).forEach((nodePath) => {\n        onCreate(nodePath);\n    });\n    Object.keys(updateNode).forEach((node) => {\n        onUpdateLeaf(node, updateNode[node]);\n    });\n    if (modifiedNodes.length > 0) {\n        onModifiedNodes(uniq(modifiedNodes));\n    }\n};\n\nexport default updateConfig;\n\nexport {\n    updateConfig,\n    setValue as _setValue,\n};\n","export const selectChildrenNames = state =>\n    state.breadcrumbs.childrenNames;\nexport const selectIsList = state => state.breadcrumbs.isList;\nexport const selectSchema = state => state.breadcrumbs.schema;\nexport const selectHasSchemaFromCurrentPath = (state, path) => state.breadcrumbs.path &&\n    state.breadcrumbs.path === path &&\n    state.breadcrumbs.schema;\n","import HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BreadcrumbContainer from 'Common/Components/Breadcrumb/BreadcrumbContainer';\nimport { Messages, translate } from 'modules/intl';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport EditModeButtonContainer from './EditModeButtonContainer';\nimport FlattenButtonContainer from './FlattenButtonContainer';\nimport { style, optionsStyle } from './ConfigurationEditorStyles';\n\nclass ConfigurationEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showOptions: false,\n        };\n    }\n\n    render() {\n        const {\n            children,\n            onNavigate,\n            routeParams,\n            checkboxes,\n            subfoldersAreDisabled,\n        } = this.props;\n        const { showOptions } = this.state;\n        const optionsMenu =\n        (<div style={optionsStyle.container} data-handle=\"viewOptionsMenu\">\n            <button\n                data-handle=\"view-options\"\n                style={optionsStyle.button}\n                onClick={() => this.setState({ showOptions: true })}\n            >View options ▾\n            </button>\n            {showOptions && <button\n                data-handle=\"close-view-options\"\n                onClick={() => this.setState({ showOptions: false })}\n                onScroll={() => this.setState({ showOptions: false })}\n                style={optionsStyle.overlay}\n            >\n                <div style={optionsStyle.scrollProvoker} />\n            </button>}\n            {showOptions && <div style={optionsStyle.pop}>\n                <div style={optionsStyle.menuArrowShadow} />\n                {checkboxes}\n                <div style={optionsStyle.menuArrow} />\n            </div>}\n        </div>);\n\n        const commitComponents = [\n            <FlattenButtonContainer />,\n            <EditModeButtonContainer />,\n            optionsMenu,\n        ];\n        return (\n            <div\n                data-handle={CONFIGURATION_EDITOR_NAME}\n                style={style.application}\n                >\n                <HeaderContainer\n                    applicationName={'Configuration editor'}\n                    additionalComponentsRight={commitComponents}\n            >\n                    <div style={style.secondHeader}>\n                        <div style={style.contentWrapper}>\n                            <BreadcrumbContainer\n                                onNavigate={onNavigate}\n                                url={routeParams.splat}\n                       />\n                            {subfoldersAreDisabled &&\n                            <div data-handle=\"yangMessage\" style={style.yangMessage}>\n                                {translate(\n                                    Messages.CONFIGURATIONEDITOR.INCLUDE_SUBFOLDERS_DISABLED,\n                                    )}\n                            </div>}\n                        </div>\n                    </div>\n                    <div style={defaultStyles.shadow} />\n                </HeaderContainer>\n                <div style={style.backgroundContainer}>\n                    <div style={style.configContainer}>\n                        {children}\n                    </div>\n                </div>\n                <FooterContainer />\n            </div>\n        );\n    }\n}\n\nConfigurationEditor.propTypes = {\n    children: PropTypes.node,\n    checkboxes: PropTypes.shape(Object).isRequired,\n    onNavigate: PropTypes.func,\n    routeParams: PropTypes.shape(Object).isRequired,\n    subfoldersAreDisabled: PropTypes.bool,\n};\n\nexport default ConfigurationEditor;\n","import { connect } from 'react-redux';\nimport {\n    getChildrenNamesThunk,\n    resetAction,\n} from 'modules/breadcrumbs/actions';\nimport {\n    selectChildrenNames,\n    selectIsList,\n} from 'modules/breadcrumbs/selectors';\nimport { selectRootModels } from 'modules/models/reducer';\nimport {\n    selectShowActions,\n    selectShowOperdata,\n} from 'ConfigurationEditor/reducer';\nimport Breadcrumb from './Breadcrumb';\n\nconst mapStateToProps = (state) => {\n    const rootModels = selectRootModels(state);\n    const childrenNames = selectChildrenNames(state);\n    return {\n        childrenNames,\n        isList: selectIsList(state),\n        rootModels,\n        showActions: selectShowActions(state),\n        showOperdata: selectShowOperdata(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetChildrenNames(path, matchString = '', showActions, showOperdata, chunkSize) {\n        dispatch(getChildrenNamesThunk({\n            path,\n            matchString,\n            showActions,\n            showOperdata,\n            chunkSize,\n        }));\n    },\n    onReset() {\n        dispatch(resetAction());\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Breadcrumb);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    getChildrenNamesThunk as _getChildrenNamesThunk,\n};\n","import _jsonrpc from '@webui-one/core/jsonrpc';\nimport { maybeGetModels } from 'modules/models/actions';\nimport { read } from 'modules/transactions/actions';\nimport * as actionTypes from './actionTypes';\nimport { selectHasSchemaFromCurrentPath as _selectHasSchemaFromCurrentPath } from './selectors';\n\nexport const getChildrenNamesStartAction = () => ({\n    type: actionTypes.GET_CHILDREN_NAMES_START,\n});\n\nexport const getChildrenNamesErrorAction = error => ({\n    type: actionTypes.GET_CHILDREN_NAMES_ERROR,\n    error,\n});\n\nexport const getChildrenNamesCompleteAction = (\n    path,\n    result,\n    isList,\n    schema,\n    showActions = true,\n    showOperdata = true,\n) => ({\n    type: actionTypes.GET_CHILDREN_NAMES_COMPLETE,\n    path,\n    result,\n    schema,\n    isList,\n    showActions,\n    showOperdata,\n});\n\nconst queryListChildrenNames = async (path, th, schema, matchString, chunkSize, jrpc) => {\n    const keys = schema.data.key;\n    let xpathExpr;\n    if (matchString !== '') {\n        xpathExpr = `${schema.data.name}[starts-with(${keys[0]}, \"${matchString}\")]`;\n    }\n    const params = {\n        th,\n        path,\n        selection: keys,\n        result_as: 'string',\n        xpath_expr: xpathExpr,\n        context_node: path.substr(0, path.lastIndexOf('/')),\n        chunk_size: chunkSize,\n    };\n    const result = await jrpc('query', params);\n    return result;\n};\n\nexport const getChildrenNamesThunk = ({\n    path,\n    matchString,\n    showActions,\n    showOperdata,\n    chunkSize = 10,\n    funcs: {\n        rd = read,\n        getModels = maybeGetModels,\n        jsonrpc = _jsonrpc,\n        selectHasSchemaFromCurrentPath = _selectHasSchemaFromCurrentPath,\n    } = {},\n} = {}) => async (dispatch, getState) => {\n    if (path === '') {\n        return dispatch(getModels());\n    }\n    dispatch(getChildrenNamesStartAction());\n    try {\n        const { th } = await dispatch(rd());\n        const state = getState();\n        const hasSchemaFromCurrentPath = selectHasSchemaFromCurrentPath(state, path);\n        let schema;\n\n        if (hasSchemaFromCurrentPath) {\n            schema = state.breadcrumbs.schema;\n        } else {\n            schema = await jsonrpc('get_schema', {\n                path,\n                th,\n                levels: 1,\n                evaluate_when_entries: true,\n            });\n        }\n\n        if (schema.data.kind === 'list') {\n            const result = await queryListChildrenNames(\n                path,\n                th,\n                schema,\n                matchString,\n                chunkSize,\n                jsonrpc,\n            );\n            return dispatch(\n                getChildrenNamesCompleteAction(\n                    path,\n                    result,\n                    true,\n                    schema,\n                ),\n            );\n        }\n        return dispatch(\n            getChildrenNamesCompleteAction(\n                path,\n                schema,\n                false,\n                null,\n                showActions,\n                showOperdata,\n            ),\n        );\n    } catch (error) {\n        return dispatch(getChildrenNamesErrorAction(error));\n    }\n};\n\nexport const resetAction = () => ({\n    type: actionTypes.RESET,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport { formatPath, getApplicationKey } from '@webui-one/core/utils/path';\nimport {\n    strip,\n    truncateLongString,\n} from '@webui-one/core/utils/string';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport NavigateHome from '@webui-one/styles/static/NavigateHome';\nimport NavigateUp from '@webui-one/styles/static/NavigateUp';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport BreadcrumbInput from './BreadcrumbInput';\nimport style from './BreadcrumbStyles';\n\nconst getPath = obj => (\n    obj.path.indexOf(obj.parentPath) === 0\n        ? obj.path.substr(obj.parentPath.length)\n        : obj.path\n);\n\nclass Breadcrumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleNavigateBreadcrumbs = this.handleNavigateBreadcrumbs.bind(this);\n        this.handleGetChildrenNames = this.handleGetChildrenNames.bind(this);\n        this.handleNavigate = this.handleNavigate.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.state = { originalUrl: '', breadcrumbPath: '' };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { url } = props;\n        const { originalUrl } = state;\n        return url === originalUrl ? null : { originalUrl: url, breadcrumbPath: url };\n    }\n\n    handleGetChildrenNames(matchString = '', chunkSize) {\n        const { onGetChildrenNames, showActions, showOperdata } = this.props;\n        const { breadcrumbPath } = this.state;\n        onGetChildrenNames(breadcrumbPath, matchString, showActions, showOperdata, chunkSize);\n    }\n\n    handleNavigateBreadcrumbs(path, isBackNav) {\n        const { onGetChildrenNames } = this.props;\n        const { breadcrumbPath } = this.state;\n        let newBreadcrumbPath;\n        if (isBackNav) {\n            if (breadcrumbPath === '') return;\n            const pathSegments = pathToObjects(breadcrumbPath);\n            newBreadcrumbPath = pathSegments[pathSegments.length - 1].parentUri;\n        } else {\n            newBreadcrumbPath = breadcrumbPath + path;\n        }\n        onGetChildrenNames(newBreadcrumbPath);\n        this.setState({ breadcrumbPath: newBreadcrumbPath });\n    }\n\n    handleReset() {\n        const { originalUrl } = this.state;\n        this.setState({ breadcrumbPath: originalUrl });\n        this.props.onReset();\n    }\n\n    buildBreadcrumbLinks(paths, isList, breadcrumbsCount) {\n        const baseUrl = formatPath(getApplicationKey(window.location.pathname));\n        let childIsListNode = false;\n        const links = paths.reverse().reduce((acc, obj, index) => {\n            if (obj.uri) {\n                const path = `${baseUrl}${obj.uri}`;\n                if (!(index === 0 && isList)) {\n                    if (!childIsListNode) {\n                        acc.push(\n                            <span\n                                key={`${path}/`}\n                                style={\n                                index === breadcrumbsCount ? style.blackLink : style.link\n                                } >\n                                {'/'}\n                            </span>,\n                        );\n                    }\n                }\n\n                childIsListNode = Array.isArray(obj.keys);\n                let linkText = strip(getPath(obj), '/');\n                if (childIsListNode) {\n                    linkText = truncateLongString(linkText);\n                }\n\n                acc.push(\n                    <Link\n                        style={index === breadcrumbsCount ? style.blackLink : style.link}\n                        key={path}\n                        to={path}\n                        data-handle={`link ${path}`}\n                        onClick={() => this.setState({ breadcrumbPath: obj.path })}\n                        >\n                        {linkText}\n                    </Link>,\n                );\n            }\n            return acc;\n        }, []);\n        return links.reverse();\n    }\n\n    handleNavigate(path, isBackNav) {\n        if (isBackNav) this.handleBackNavigate();\n        else {\n            const { onNavigate, onGetChildrenNames } = this.props;\n            const { breadcrumbPath } = this.state;\n            if (path !== '') {\n                const newBreadcrumbPath = breadcrumbPath + path;\n                this.setState({ breadcrumbPath: newBreadcrumbPath });\n                onNavigate(newBreadcrumbPath);\n                onGetChildrenNames(newBreadcrumbPath);\n            } else {\n                onNavigate(breadcrumbPath);\n            }\n        }\n    }\n\n    handleBackNavigate() {\n        const { onGetChildrenNames } = this.props;\n        const { breadcrumbPath } = this.state;\n        if (breadcrumbPath !== '') {\n            const pathSegments = pathToObjects(breadcrumbPath);\n            const newBreadcrumbPath = pathSegments[pathSegments.length - 1].parentUri;\n            this.setState({ breadcrumbPath: newBreadcrumbPath });\n            onGetChildrenNames(newBreadcrumbPath);\n        }\n    }\n\n    render() {\n        const {\n            childrenNames,\n            isList: tempIsList,\n            rootModels,\n        } = this.props;\n        const {\n            breadcrumbPath,\n        } = this.state;\n        const fullUrl = breadcrumbPath;\n        const isList = fullUrl === '' ? false : tempIsList;\n        const breadcrumbsPaths = strip(breadcrumbPath, '/').split(/[/{]/);\n        const breadcrumbsCount = (breadcrumbsPaths.length === 1 && breadcrumbsPaths[0] === '') ?\n            0 : breadcrumbsPaths.length;\n        const paths = pathToObjects(`/${strip(fullUrl, '/')}`);\n        const links = this.buildBreadcrumbLinks(paths, isList, breadcrumbsCount);\n        const upLink = (paths && paths.length > 1) ? paths[1].uri : '/';\n        const baseUrl = formatPath(getApplicationKey(window.location.pathname));\n        const path = `${baseUrl}${upLink}`;\n        const enabled = !!fullUrl;\n        return (<div style={style.crumbs} data-handle=\"breadcrumb\" data-breadcrumb-path={fullUrl}>\n            <Link\n                to={baseUrl}\n                style={style.navHome}\n                data-handle={`navHome${enabled ? '' : '_disabled'}`}>\n                <NavigateHome color={enabled ? defaultStyles.color1 : defaultStyles.color2}/>\n            </Link>\n            <Link\n                to={path}\n                style={style.navUp}\n                data-handle={`navUp${enabled ? '' : '_disabled'}`}>\n                <NavigateUp color={enabled ? defaultStyles.color1 : defaultStyles.color2}/>\n            </Link>\n            <span style={style.blackLink}>\n                {'/'}\n            </span>\n            { links }\n            {isList && <span style={style.blackLink}>{'{'}</span>}\n            <BreadcrumbInput\n                onGetChildrenNames={this.handleGetChildrenNames}\n                childrenNames={breadcrumbPath === '' ? rootModels : childrenNames}\n                onNavigate={this.handleNavigate}\n                onNavigateBreadcrumbs={this.handleNavigateBreadcrumbs}\n                onReset={this.handleReset}\n                path={fullUrl}\n                isList={isList}\n                  />\n            {isList && <span style={style.blackLink}>{'}'}</span>}\n        </div>);\n    }\n}\n\nBreadcrumb.propTypes = {\n    childrenNames: PropTypes.arrayOf(PropTypes.string),\n    isList: PropTypes.bool,\n    onGetChildrenNames: PropTypes.func,\n    onReset: PropTypes.func,\n    onNavigate: PropTypes.func,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    showActions: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n    // url: PropTypes.string, //url only used in get derived state from props\n};\n\nBreadcrumb.defaultProps = {\n    url: '',\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigateHome = ({ color }) =>\n    (<svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\">\n        <path\n            fill={color}\n            d=\"M4,21.69c0,0.49,0.4,0.89,0.89,0.89h4.44c0.25,0,0.44-0.2,0.44-0.44\n            v-7.56c0-0.25,0.2-0.44,0.44-0.44h3.56c0.25,0,0.44,0.2,0.44,0.44v7.56\n            c0,0.25,0.2,0.44,0.44,0.44h4.44c0.49,0,0.89-0.4,0.89-0.89V9.43\n            c0-0.12-0.05-0.23-0.13-0.31l-7.56-7.56c-0.17-0.17-0.45-0.17-0.63,0\n            L4.13,9.11C4.05,9.19,4,9.31,4,9.43V21.69z\" />\n    </svg>);\n\nNavigateHome.propTypes = {\n    color: PropTypes.string,\n};\n\nNavigateHome.defaultProps = {\n    color: 'red',\n};\n\nexport default NavigateHome;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigateUp = ({ color }) =>\n    (<svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\">\n        <polygon\n            fill={color}\n            points=\"9.39,2 14.77,7.39 10.31,7.39 10.31,20.15 20.01,20.15\n                    20.01,22 8.46,22 8.46,7.39 4,7.39 \"/>\n    </svg>);\n\nNavigateUp.propTypes = {\n    color: PropTypes.string,\n};\n\nNavigateUp.defaultProps = {\n    color: 'red',\n};\n\nexport default NavigateUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { input as style } from './BreadcrumbStyles';\nimport {\n    truncateLongString,\n} from '@webui-one/core/utils/string';\n\nconst DROP_DOWN_LIMIT = 20;\n\nconst sortNames = (name1, name2) => {\n    if (name1.name.toLowerCase() > name2.name.toLowerCase()) return 1;\n    return -1;\n};\n\nconst updateListNames = (props, state) => {\n    const { childrenNames } = props;\n    const input = state.inputValue.toLowerCase();\n    const nameMatch = [];\n    const namespaceMatch = [];\n    const contains = [];\n    (childrenNames || []).forEach((childName) => {\n        const fullName = childName;\n        const colonIndex = fullName.indexOf(':');\n        if (input === '') {\n            nameMatch.push({ name: fullName, fullName });\n            return;\n        }\n        let name = fullName;\n        if (colonIndex > -1) {\n            name = fullName.substr(colonIndex + 1);\n        }\n        if (name.toLowerCase().startsWith(input)) {\n            let duplicate = false;\n            nameMatch.forEach((item) => {\n                if (item.name === name) {\n                    // eslint-disable-next-line no-param-reassign\n                    item.name = item.fullName;\n                    duplicate = true;\n                }\n            });\n            nameMatch.push({ name: duplicate ? fullName : name, fullName });\n            return;\n        }\n        if (fullName.toLowerCase().startsWith(input)) {\n            namespaceMatch.push({ name: fullName, fullName });\n            return;\n        }\n        if (fullName.toLowerCase().includes(input)) {\n            contains.push({ name: fullName, fullName });\n        }\n    });\n    nameMatch.sort(sortNames);\n    namespaceMatch.sort(sortNames);\n    return { nameMatch, namespaceMatch, contains };\n};\n\nclass BreadcrumbInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.state = {\n            autoCompleteIsVisible: false,\n            dropDownIndex: undefined,\n            nameMatch: [],\n            namespaceMatch: [],\n            contains: [],\n            inputValue: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.autoCompleteIsVisible) return null;\n        if (props.isList) {\n            return {\n                nameMatch: props.childrenNames.map(name => ({ name, fullName: name })),\n                namespaceMatch: [],\n                contains: [],\n            };\n        }\n        return updateListNames(props, state);\n    }\n\n    getAnchorElement(child, matchString, active) {\n        const childName = truncateLongString(child.name);\n        const pos = childName.search(RegExp(matchString, 'ig'));\n        const textBits = [childName.substr(0, pos),\n            childName.substr(pos, matchString.length),\n            childName.substr(pos + matchString.length)];\n\n        return (<a\n            role=\"button\"\n            tabIndex={0}\n            onMouseDown={(e) => { if (e.button === 0) this.navigate(child.fullName); }}\n            style={active ? style.deviceGroupsOptionsActive : style.deviceGroupsOptions}\n            ref={active && ((r) => { this.deviceGroupsOption = r; })}\n            key={child.fullName}\n            data-handle={`anchor ${child.fullName} ${active ? 'active' : ''}`}\n            >\n            {textBits[0] === '' || <span key=\"a\">{textBits[0]}</span>}\n            {textBits[1] === '' || <span key=\"b\" style={style.highlight}>{textBits[1]}</span>}\n            {textBits[2] === '' || <span key=\"c\" >{textBits[2]}</span>}\n        </a>);\n    }\n\n    handleKeyDown(e) {\n        const {\n            autoCompleteIsVisible,\n            contains,\n            dropDownIndex,\n            nameMatch,\n            namespaceMatch,\n            inputValue,\n        } = this.state;\n        const names = nameMatch.concat(namespaceMatch);\n        const listNames = names.concat(contains);\n        if (e.key === 'Enter' && autoCompleteIsVisible) {\n            if (dropDownIndex !== undefined && listNames.length > dropDownIndex) {\n                this.navigate(\n                    listNames[dropDownIndex].fullName,\n                );\n            } else if (inputValue === '') {\n                this.navigate('');\n            } else if (names.length > 0) {\n                const fullMatch = names.filter(name => name.name === inputValue)[0];\n                if (fullMatch) {\n                    this.navigate(fullMatch.fullName);\n                } else if (names.length === 1) {\n                    this.navigate(names[0].fullName);\n                }\n            }\n        } else if (e.key === 'Escape') {\n            this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n            this.props.onReset();\n            this.input.blur();\n        } else if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && autoCompleteIsVisible) {\n            e.preventDefault();\n            const nrOfNames = listNames.length;\n            if (nrOfNames > 0) {\n                let newIndex;\n                if (dropDownIndex === undefined) {\n                    newIndex = e.key === 'ArrowUp' ? nrOfNames - 1 : 0;\n                } else {\n                    const diff = e.key === 'ArrowUp' ? -1 : 1;\n                    const moduloIndex = Math.min(nrOfNames, DROP_DOWN_LIMIT);\n                    newIndex = (dropDownIndex + diff + moduloIndex) % moduloIndex;\n                }\n                this.setState({ dropDownIndex: newIndex });\n            }\n        } else if (e.key === 'Tab' && autoCompleteIsVisible) {\n            e.preventDefault();\n            if (dropDownIndex !== undefined && listNames.length > dropDownIndex) {\n                this.navigateBreadcrumbs(\n                    listNames[dropDownIndex].fullName,\n                );\n            } else if (names.length > 1) {\n                const fullMatch = names.filter(name => name.name === inputValue)[0];\n                if (fullMatch) {\n                    this.navigateBreadcrumbs(fullMatch.fullName);\n                } else {\n                    let matchingChars = inputValue.length;\n                    let matchingString = '';\n                    let matchingStrings = [];\n                    const doMatch = matchString => (name => name.name.startsWith(matchString));\n                    do {\n                        matchingChars += 1;\n                        matchingString = names[0].name.substr(0, matchingChars);\n                        matchingStrings = names.filter(doMatch(matchingString));\n                    }\n                    while (matchingChars <= names[0].name.length &&\n                        matchingStrings.length === names.length);\n                    const commonString = names[0].name.substr(0, matchingChars - 1);\n                    this.setState({ inputValue: commonString });\n                }\n            } else if (names.length === 1) {\n                this.navigateBreadcrumbs(names[0].fullName);\n            }\n        } else if (e.key === 'Backspace' && inputValue === '') {\n            this.navigateBreadcrumbs('', true);\n        }\n    }\n\n    handleChange() {\n        const { isList } = this.props;\n        if (isList) {\n            const {\n                onGetChildrenNames,\n            } = this.props;\n            onGetChildrenNames(\n                this.input.value, DROP_DOWN_LIMIT,\n            );\n        }\n        this.setState({\n            dropDownIndex: undefined,\n            inputValue: this.input ? this.input.value : '',\n        });\n    }\n\n\n    handleBlur() {\n        this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n        this.props.onReset();\n    }\n\n    handleFocus() {\n        const { onGetChildrenNames } = this.props;\n        onGetChildrenNames();\n        this.setState({\n            autoCompleteIsVisible: true,\n        });\n    }\n\n    navigate(childName) {\n        const { onNavigate, isList } = this.props;\n        this.setState({ dropDownIndex: undefined, inputValue: '' });\n        if (childName === '') onNavigate('');\n        else onNavigate(isList ? `{${childName}}` : `/${childName}`);\n    }\n\n    navigateBreadcrumbs(childName, isBackNav = false) {\n        const { onNavigateBreadcrumbs, isList } = this.props;\n        this.setState({ dropDownIndex: undefined, inputValue: '' });\n        onNavigateBreadcrumbs(isList ? `{${childName}}` : `/${childName}`, isBackNav);\n    }\n\n    render() {\n        const {\n            autoCompleteIsVisible,\n            dropDownIndex,\n            nameMatch,\n            namespaceMatch,\n            contains,\n            inputValue,\n        } = this.state;\n        if (this.input) this.input.value = inputValue;\n        let filteredContainerNames = [];\n        if (autoCompleteIsVisible) {\n            const listNames = nameMatch.concat(namespaceMatch.concat(contains));\n            filteredContainerNames = listNames.map((child, ix) => {\n                if (ix > DROP_DOWN_LIMIT) return null;\n                if (ix === DROP_DOWN_LIMIT) {\n                    return <div key={`info${ix}`} style={style.deviceGroupsOptions}>...</div>;\n                }\n                return this.getAnchorElement(\n                    child,\n                    inputValue,\n                    ix === dropDownIndex,\n                );\n            });\n        }\n\n        return (<div style={style.labelFilter} data-handle=\"breadcrumbInput\">\n            <input\n                style={style.input}\n                ref={(r) => { this.input = r; }}\n                onKeyDown={this.handleKeyDown}\n                data-handle=\"labelInput\"\n                onFocus={this.handleFocus}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                  />\n            {(autoCompleteIsVisible && filteredContainerNames.length > 0) && <div\n                ref={(dg) => { this.deviceGroups = dg; }}\n                style={style.labelDropdown}\n                  >\n                    {filteredContainerNames}\n                </div>}\n        </div>);\n    }\n}\n\nBreadcrumbInput.propTypes = {\n    // childrenNames: //is a prop, but only used in getDerivedState\n    isList: PropTypes.bool,\n    onGetChildrenNames: PropTypes.func.isRequired,\n    onNavigate: PropTypes.func,\n    onNavigateBreadcrumbs: PropTypes.func,\n    onReset: PropTypes.func,\n};\n\nexport default BreadcrumbInput;\n\nexport {\n    updateListNames as _updateListNames,\n};\n","import { connect } from 'react-redux';\nimport {\n    setModelExpandedAction,\n} from 'modules/models/actions';\nimport {\n    reloadPackages,\n} from 'modules/packages/actions';\nimport {\n    RELOAD_PATH,\n} from 'modules/packages/paths';\nimport {\n    selectCompletedAt,\n    selectError,\n    selectResultPending,\n} from 'modules/yangActions/selectors';\nimport { selectPackages } from 'modules/packages/reducer';\nimport { selectRootModels, selectRootModelsLoading } from 'modules/models/reducer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PackagesAndModules from './PackagesAndModules';\nimport { getModelsAndPackages } from './utils';\n\nconst getPackageLinks = (packages) => {\n    const packagePrefixes = Object.keys(packages);\n    const packageLinks = packagePrefixes.reduce((acc, prefix) => {\n        const pkg = packages[prefix];\n        const version = pkg.version;\n        const status = pkg.status;\n        const isOk = status === 'up';\n        return {\n            ...acc,\n            [prefix]: {\n                name: prefix,\n                version,\n                isOk,\n                status,\n            },\n        };\n    }, {});\n    return packageLinks;\n};\n\nclass PackagesAndModulesContainer extends React.Component {\n    componentDidMount() {\n        this.props.onLoad();\n    }\n\n    render() {\n        const {\n            packages,\n            onReloadPackages,\n            completedAt,\n            reloadError,\n            reloadPending,\n            rootModels,\n            loadingRootModels,\n        } = this.props;\n        const packageLinks = getPackageLinks(packages);\n        return (\n            <PackagesAndModules\n                packageLinks={packageLinks}\n                onReload={onReloadPackages}\n                completedAt={completedAt}\n                reloadError={reloadError}\n                reloadPending={reloadPending}\n                rootModels={rootModels}\n                loadingRootModels={loadingRootModels}\n            />\n        );\n    }\n}\n\nPackagesAndModulesContainer.propTypes = {\n    packages: PropTypes.shape(Object).isRequired,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    onLoad: PropTypes.func.isRequired,\n    onReloadPackages: PropTypes.func.isRequired,\n    reloadPending: PropTypes.bool,\n    completedAt: PropTypes.number,\n    reloadError: PropTypes.bool,\n    loadingRootModels: PropTypes.bool,\n};\n\nPackagesAndModulesContainer.defaultProps = {\n    packages: {},\n    models: [],\n    expandedModels: {},\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad() {\n        return dispatch(getModelsAndPackages());\n    },\n    onReloadPackages() {\n        return dispatch(reloadPackages());\n    },\n    onSetModelExpanded(modelName, expanded) {\n        return dispatch(setModelExpandedAction(modelName, expanded));\n    },\n});\n\nconst mapStateToProps = state => ({\n    packages: selectPackages(state),\n    rootModels: selectRootModels(state),\n    loadingRootModels: selectRootModelsLoading(state),\n    reloadPending: !!selectResultPending(state, RELOAD_PATH),\n    completedAt: selectCompletedAt(state, RELOAD_PATH),\n    reloadError: !!selectError(state, RELOAD_PATH),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(PackagesAndModulesContainer);\n\nexport {\n    PackagesAndModulesContainer as _PackagesAndModulesContainer,\n    getPackageLinks as _getPackageLinks,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { formatPath } from '@webui-one/core/utils/path';\nimport { timeStampToISOLocale } from '@webui-one/core/utils/time';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Grid from '@webui-one/components/Grid/Grid';\nimport {\n    RELOAD_ACTION_PATH,\n} from 'modules/packages/paths';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor';\nimport { packagesAndModules as style } from './ConfigurationEditorStyles';\n\nconst messages = {\n    'program-code-error': 'Code error',\n    'java-uninitialized': 'Java uninitialized',\n    'bad-ncs-version': 'Bad NSO version',\n    'missing-dependency': 'Missing dependency',\n    'circular-dependency': 'Circular dependency',\n    'package-meta-data-error': 'Metadata error',\n    'file-load-error': 'File load error',\n    'erlang-error': 'Erlang error',\n};\n\nconst getPackageHeader = (category, modelLinks) => {\n    const showStatus = modelLinks[category].isOk ?\n        !!modelLinks[category].version : !!modelLinks[category].status;\n    return (\n        <div key={category} data-handle=\"module\" style={style.moduleChunk}>\n            <div data-handle={category} style={style.moduleRow}>\n                <div\n                    style={style.modulesHeader}\n                    data-handle=\"package-name\"\n          >\n                    {modelLinks[category].name}\n                </div>\n                {showStatus && <span\n                    data-handle=\"package-version\"\n                    style={modelLinks[category].isOk\n                    ? style.packageVersionOk\n                    : style.packageVersionError}\n            >\n                    {\n                      modelLinks[category].isOk ?\n                      `v${modelLinks[category].version}` :\n                      messages[modelLinks[category].status]\n                    }\n                </span>}\n            </div>\n        </div>);\n};\n\nconst renderModels = (rootModels, loadingRootModels) => (\n    <div data-handle=\"modules\" style={style.moduleLinks}>\n        <div style={style.headerContainer}>\n            <div style={style.header}>MODULES</div>\n        </div>\n        <div style={style.contentContainer}>\n            <div style={style.loadingInformation}>\n                {loadingRootModels && (\n                    <div style={style.loader}>\n                        <Loader color={defaultStyles.textColor1} />\n                    </div>\n                )}\n            </div>\n            {!loadingRootModels &&\n                <Grid asGrid>\n                    {rootModels.sort().map(modelName => (\n                        <Link\n                            to={formatPath(`${CONFIGURATION_EDITOR_NAME}/${modelName}`)}\n                            key={modelName}\n                            style={style.modelLink}\n                        >{modelName}</Link>\n                    ))}\n                </Grid>\n            }\n        </div>\n    </div>\n);\n\nconst renderPackages = (\n    packageLinks,\n    onReload,\n    reloadError,\n    reloadPending,\n    completedAt,\n) => (\n    <div data-handle=\"packages\" style={style.moduleLinks}>\n        <div style={style.headerContainer}>\n            <div style={style.header}>PACKAGES</div>\n            <button\n                style={style.reloadButton}\n                onClick={onReload}\n                data-handle=\"reload-packages\"\n              >Reload</button>\n        </div>\n        <div style={style.contentContainer}>\n            {!reloadError && (reloadPending || completedAt) &&\n            <div style={style.loadingInformation}>\n                {reloadPending && <div style={style.loader}>\n                    <Loader color={defaultStyles.textColor1} />\n                </div>}\n                {completedAt && <span data-handle=\"completed-at\" >\n                  Reload completed at {timeStampToISOLocale(completedAt)}\n                </span>}\n            </div>}\n            {reloadError && !reloadPending && completedAt &&\n            <div data-handle=\"reload-error\" style={style.reloadError}>\n            An error occurred during reload. For detailed information, go to the <Link\n                style={{ color: 'white' }}\n                to={formatPath(RELOAD_ACTION_PATH)}>reload action\n            </Link>\n            </div>}\n            { Object.keys(packageLinks).length > 0 ?\n                <div><Grid asGrid>\n                    { Object.keys(packageLinks).sort().map(\n                  category => getPackageHeader(category, packageLinks),\n                  ) }\n                </Grid></div> : false}\n        </div>\n    </div>\n);\n\nconst PackagesAndModules = (\n    {\n        packageLinks,\n        onReload,\n        reloadError,\n        reloadPending,\n        completedAt,\n        rootModels,\n        loadingRootModels,\n    },\n) => (\n    <div style={style.container}>\n        { renderPackages(\n              packageLinks,\n              onReload,\n              reloadError,\n              reloadPending,\n              completedAt) }\n\n        { renderModels(rootModels, loadingRootModels) }\n    </div>);\n\nPackagesAndModules.propTypes = {\n    packageLinks: PropTypes.shape({}).isRequired,\n    onReload: PropTypes.func.isRequired,\n    reloadError: PropTypes.bool,\n    reloadPending: PropTypes.bool,\n    completedAt: PropTypes.number,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    loadingRootModels: PropTypes.bool,\n};\n\nPackagesAndModules.defaultProps = {\n    onLoad: () => null,\n};\n\nexport default PackagesAndModules;\n"],"sourceRoot":""}