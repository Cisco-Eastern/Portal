{"version":3,"sources":["webpack:///./src/CommitManager/CommitManagerContainer.jsx","webpack:///./src/CommitManager/CommitManagerStyles.js","webpack:///./src/Common/Components/Breadcrumb/BreadcrumbStyles.js","webpack:///./src/Common/Components/Commit/LoadStyles.js","webpack:///./src/Common/Components/ConfigRender/DataContainer.jsx","webpack:///./packages/components/Diff/DiffTable.jsx","webpack:///./packages/components/Diff/DiffTableStyles.js","webpack:///./src/Common/Components/Commit/CommitDialogStyles.js","webpack:///./src/CommitManager/Common.jsx","webpack:///./src/Common/Components/Commit/CommitButtonStyles.js","webpack:///./src/Common/Components/Commit/CommitOptions.jsx","webpack:///./src/modules/commitQueue/actions.js","webpack:///./src/modules/commitQueue/path.js","webpack:///./src/modules/commitQueue/selectors.js","webpack:///./src/CommitManager/ChangesTabContainer.jsx","webpack:///./src/CommitManager/ChangesTab.jsx","webpack:///./src/CommitManager/CommitDryRunTabContainer.jsx","webpack:///./src/CommitManager/CommitDryRunTab.jsx","webpack:///./src/CommitManager/CommitDryRunStyles.js","webpack:///./src/CommitManager/CommitManager.jsx","webpack:///./src/Common/Components/Commit/CommitButtonContainer.jsx","webpack:///./src/Common/Components/Commit/CommitButton.jsx","webpack:///./src/Common/Components/Commit/CommitDialog.jsx","webpack:///./src/Common/Components/Commit/CommitOptionsContainer.js","webpack:///./packages/styles/static/EditSymbol.jsx","webpack:///./src/Common/Components/Commit/IgnoreWarnings.jsx","webpack:///./src/Common/Components/Commit/RevertButtonContainer.js","webpack:///./src/Common/Components/Commit/RevertButton.jsx","webpack:///./src/Common/Components/Commit/RevertButtonStyles.js","webpack:///./src/Common/Components/Commit/LoadButtonContainer.jsx","webpack:///./src/Common/Components/Commit/LoadButton.jsx","webpack:///./src/Common/Components/Commit/LoadFromPlainTextContainer.jsx","webpack:///./src/Common/Components/Commit/LoadFromPlainText.jsx","webpack:///./src/Common/Components/Commit/LoadFromFileContainer.jsx","webpack:///./src/Common/Components/Commit/LoadFromFile.jsx","webpack:///./src/Common/Components/Commit/SaveToFileContainer.jsx","webpack:///./packages/core/utils/xml.js","webpack:///./src/Common/Components/Commit/SaveToFile.jsx","webpack:///./src/Common/Components/Commit/RollbackContainer.jsx","webpack:///./src/Common/Components/Commit/Rollback.jsx","webpack:///./src/Common/Components/Commit/RollbackStyles.js","webpack:///./src/CommitManager/CommitQueueListContainer.jsx","webpack:///./src/CommitManager/CommitQueueDevicesCellContainer.jsx","webpack:///./src/CommitManager/CommitQueueDevicesCellStyles.js","webpack:///./src/CommitManager/NativeCommitDryRunTabContainer.jsx","webpack:///./src/CommitManager/NativeCommitDryRunTab.jsx","webpack:///./src/CommitManager/WarningsTab.jsx"],"names":["loader","style","loaderbox","color","defaultStyles","color9","getPage","thIsBusy","disabled","name","tab","page","getChangesPage","translate","Messages","COMMITMANAGER","CHANGES","getCommitDryRunPage","CONFIG","getNativeCommitDryRunPage","NATIVE_CONFIG","getCommitQueuePage","COMMIT_QUEUE","countNumberOfErrors","error","number","data","errors","Array","isArray","length","convertWarningsToErrors","warnings","isNonEmptyArray","getWarningsPage","onReevaluateTrans","numberOfWarnings","WARNINGS","warningsNumberContainer","data-handle","onRevalidateTrans","getErrorsPage","conflicts","resolveConflictsCb","numberOfErrors","ERRORS","onResolveConflicts","CommitManagerContainer","React","Component","constructor","props","super","this","onChangeTab","bind","resolveConflicts","reevaluateCalled","state","activePageIndex","componentDidMount","emptyTransaction","onGetWriteTrans","th","shouldComponentUpdate","nextProps","nextState","changes","transError","transStatus","isDeepEqual","setState","componentDidUpdate","onReevaluate","render","disableDryRun","isNonEmpty","pages","loading","defaultProps","undefined","propTypes","PropTypes","arrayOf","shape","bool","type","string","message","func","isRequired","path","paths","reason","mapDispatchToProps","dispatch","getWriteTrans","reevaluate","mapStateToProps","selectWarnings","selectValidateTransactionError","i","schema","selectSchema","selectChangesWithDefaultValues","selectConflicts","transactionIsEmpty","selectThIsBusy","selectReadWrite","selectStatus","connect","application","display","flexFlow","height","backgroundImage","pattern1","scrollingContainer","overflow","padding","flexGrow","maxWidth","margin","backgroundColor","color5","fontSize","small3","textColor4","marginLeft","warningsNumberLabel","position","borderRadius","right","secondHeader","color11","borderTop","contentWrapper","tabDeck","main","statusStyles","fontFamily","font2","color2","medium2","alignSelf","minWidth","statusValid","color10","statusEmpty","statusInvalid","spacer","commitButton","marginRight","table","textColor2","width","textAlign","thead","color3","borderBottom","color7","whiteSpace","tbody","wordBreak","td","lineHeight","tr","a","color1","textDecoration","resultSearchBar","nativeDevice","medium3","nativeCommitDiff","font3","medium1","fontWeight","marginBottom","textColor1","checkboxStyle","checkbox","checkboxWrapper","label","warningStyles","revalidateContainer","errorHeader","messageContainer","reValidateButton","errorWrapper","link","crumbs","flexShrink","textOverflow","blackLink","navHome","navUp","deviceGroupsOptions","cursor","input","labelFilter","labelDropdown","boxShadow","zIndex","deviceGroupsOptionsActive","background","highlight","textAreaContainer","checkboxContainer","marginTop","container","minHeight","errorMessage","fileSelector","fileUpload","loadingDots","plainContainer","loadContainerStyle","selectedFilesStyle","previewTextAreaContainer","generateFileButton","button","generateFileButtonDisabled","buttonDisabled","textAreaStyle","DataContainer","onLoad","includeSubfolders","showEmpty","showOperdata","showActions","prevProps","prevSubfolders","prevPath","prevShowEmpty","prevShowOperdata","isLoading","hideIndicators","selectHasError","getDataThunk","rowPropTypes","lineNum","text","PlusRow","leftColNumber","leftCol","rightColAdd","MinusRow","leftColDelete","rightCol","BothRow","renderRow","row","rowIx","key","DiffTable","rows","split","map","leftColAdd","header","large1","editButton","border","frame","topRow","justifyContent","optionsBox","inputWrapper","queueOptionsWrapper","paddingLeft","borderLeft","ignoreContainer","ignoreDescription","ignoreLabel","item","Link","to","getLinkWithPath","escapeKey","op","old","value","change","ix","transform","CommitOptions","isConfigMode","commitOptions","onSetCommmitOption","atomic","blockOthers","commitQueue","errorOption","lock","noLsa","noNetworking","noOutOfSyncCheck","noOverwrite","noRevisionDrop","noDeploy","tag","timeout","useLsa","hasOption","onClick","active","onSetValue","options","onKeyDown","e","stopPropagation","role","editable","optionsInfo","formatOption","val","info","CommitOptionsType","boolean","chunkSize","offset","columnKey","sortorder","xpathExpression","getSchema","PATH","params","levels","stop_on_list","reload","then","query","selection","QUERY_SELECTION","PATH_QUEUE","sort","sortOrder","initialOffset","result_as","xpathExpr","contextNode","queueItemId","Promise","all","getQueueItemQueryParams","QUEUE_ITEM_DEVICE_LISTS","QUEUE_ITEM_DEVICE_LISTS_SELECTION","itemIdToPath","leaf","nodeSelector","createNodeRowSelector","ownProps","selectLoading","selectOffset","selectSortColumn","selectsortOrder","selectTotalNumberOfResults","getIdFromProps","rowKey","replace","reduce","acc","node","selectNode","determineState","deviceName","deviceLists","QUEUE_ITEM_TRANSIENT","find","QUEUE_ITEM_WAITING","QUEUE_ITEM_COMPLETED","QUEUE_ITEM_FAILED","lists","qp","selectRows","k","QUEUE_ITEM_DEVICES","d","device","ChangesTabContainer","hasLoadedSchemaFor","onGetSchema","filter","c","forEach","ChangesTab","isEmptyArray","renderHeader","renderBody","CommitDryRunTabContainer","onCommitDryRun","hasLatestCommitDryRunResult","commitDryRunError","hasNotError","result","Object","commitDryRun","selectCommitDryRunResult","selectCommitDryRunError","selectHasLatestCommitDryRunResult","renderTableWithName","tableWrapper","tableName","local_node","lsa_node","nodesData","n","boxSizing","getStatusElement","transactionEmpty","EVALUATING","EMPTY","transactionStatus","INVALID","VALID","CommitManager","additionalComponentsRight","CURRENT_TRANSACTION","COMMIT_BUTTON_COMMIT","shadow","tabs","defaultIndex","oneOfType","object","element","DONE_MESSAGE_TIMEOUT","commitIsDone","commitInProgress","CommitButtonContainer","toggleIgnoreWarnings","labelTimeout","shouldIgnoreWarnings","shouldShowDone","shouldShowDialog","showDoneLabel","hideDialog","componentWillUnmount","clearTimeout","msecs","setTimeout","hideDoneLabel","showDialog","parseCommitFlags","activeOptions","keys","option","startsWith","valid","onCommit","enableCommit","Number","isFinite","hasWarnings","isOkToCommit","ignoreWarnings","onToggleIgnoreWarnings","onCancel","extraStyles","selectCommitInProgress","selectCommitOptions","selectValid","flags","validateAndCommit","CommitButton","wrapper","COMMIT_BUTTON_DONE","CommitDialog","confirmTitle","onConfirm","formIsValid","commitOption","setCommmitOptionsAction","EditSymbol","x","y","viewBox","id","fill","IgnoreWarnings","enableRevert","onRevert","deleteTrans","RevertButton","openModal","closeModal","showModal","shouldRender","onRequestClose","modalStyles","REVERTBUTTON_CONFIRM_TITLE","bread","REVERTBUTTON_CONFIRM_BODY","button2","button2Disabled","onMouseDown","showTooltip","onMouseUp","hideTooltip","onMouseEnter","onMouseLeave","buildRollbacks","registerLoad","setLoadButtonEnabled","buildFiles","buildText","buildSave","LoadButtonContainer","doLoad","enableLoadButton","isFunction","prom","res","resolve","buildPages","confirmButtonTitle","MODAL","OK_BUTTON_TITLE","loadInProgress","enable","enableModal","selectLoadInProgress","getConfirmButtonTitle","customTitle","isString","LOAD_BUTTON_TITLE","LoadButton","extraStyle","title","ROLLBACKBUTTON_DIALOG_TITLE","validFormats","isValidFormat","format","includes","isValidString","str","isNonEmptyString","shouldEnableLoadButton","loadErrorMessage","LOAD_ERROR_MESSAGE","formatErrorMessage","LoadFromPlainTextContainer","onBlur","onChange","errorText","loadFromTextError","prevError","target","isJson","isXml","guessFormat","onLoadText","loadText","selectLoadFromTextError","LoadFromPlainText","styles","placeholder","MAX_PREVIEW_SIZE","hasFiles","files","getExtensionFromFilename","file","match","exec","getSelectedFiles","prototype","call","f","browserSupportsFileAPI","FileReader","LoadFromFileContainer","previewText","evt","fi","slice","updatePreview","PREVIEW_NO_ISSUES","theFile","size","PREVIEW_FILE_TO_BIG","PREVIEW_BROWSER_NOT_SUPPORTED","reader","onload","onerror","PREVIEW_FAILED_TO_READ_FILE","readAsText","onLoadFile","loadFileError","reject","extension","Error","readAsBinaryString","catch","err","loadFromFileError","selectedFiles","loadFile","selectLoadFromFileError","renderFiles","filename","index","LoadFromFile","click","CHOOSE_FILE_BUTTON_TITLE","ref","r","mimeTypes","json","xml","validFileEndings","saveDataToFile","filedata","ensureConfigNode","getMimeType","fileending","getFileEnding","blobdata","Blob","timestamp","href","URL","createObjectURL","getData","Date","now","outputToFile","SaveToFileContainer","doSave","onGenerateFile","saving","onSaveFile","validTrans","setAsyncState","newState","saveToFileError","disableFileSelector","saveFile","selectSaveToFileError","endsWith","SaveToFile","buttonStyle","btnTitle","GENERATE_FILE_BUTTON_TITLE","RollbackContainer","selectItem","onSelective","onChangeKeypath","selectedIndex","selective","keypath","UNSAFE_componentWillMount","onRollbacks","onLoadRollback","rollbacks","nr","onReadRollback","rollback","comment","creator","date","via","selectRollbacks","getRollbacks","loadRollback","readRollback","getRollbackList","onSelectItem","selectedRow","buildRollback","Rollback","keypathWrapper","selectiveWrapper","styleName","checkboxSpan","rollbackList","hidden","getRollbackFile","rollbackButtonContainer","STYLE_NAME","CHUNK_SIZE","listStyle","REFRESH_INTERVAL","createQueueLink","list","createCell","createTextCellFactory","createAgeCell","ageToRelativeTimeString","createDevicesCell","CommitQueueListContainer","onChangeSortOrder","onGoToPage","onRefresh","sortColumn","wasLoading","resetRefresh","refreshTimeout","newSortorder","newColumnKey","sortOrdering","totalNumberOfResults","isDesc","createHeader","createSortableHeaderFactory","columns","getDefaultColumn","additionalElements","LinkComponent","shouldPadRows","shouldRetainColumnsSize","nrOfStaticColumns","getCommitQueue","selectCommitQueueLoading","selectCommitQueueOffset","selectCommitQueueRows","keyNames","selectCommitQueueSortColumn","selectCommitQueueSortOrder","selectTotalNumberOfCommitQueues","CommitQueueDeviceCell","check","CommitQueueDevicesCellContainer","devices","selectQueueItemDevices","selectQueueItemIsLoading","getDevicesOfQueueItem","backgroundColor1","borderWidth","borderStyle","color16","borderColor","transient","color17","wait","complete","color6","failed","NativeCommitDryRunTabContainer","shouldCallDryRun","onNativeCommitDryRun","nativeResult","nativeCommitDryRun","selectNativeCommitDryRunResult","NativeCommitDryRunTab","nativeCommitPane","renderErrorHeader","numErrors","renderError","arr","truncatedPaths","getTruncatedPaths","contextLink","kind","breadcrumbStyles","getParentPath","applicationName","CONFIGURATION_EDITOR_NAME","hideContainers","hideLists","showConfig","isEditMode","renderErrors","renderErrorMessage","renderErrorDataMessage","WarningsTab","disableRevalidateButton","isObject","isEmpty","renderConflicts"],"mappings":"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","file":"CommitManagerContainer.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n    isDeepEqual,\n    isNonEmpty,\n} from '@webui-one/core/utils/object';\nimport { isNonEmptyArray } from '@webui-one/core/utils/array';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    getWriteTrans,\n    reevaluate,\n    resolveConflicts,\n} from 'modules/transactions/actions';\nimport {\n    selectConflicts,\n    selectChangesWithDefaultValues,\n    selectValidateTransactionError,\n    selectReadWrite,\n    selectThIsBusy,\n    selectStatus,\n    selectWarnings,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport { selectSchema } from 'modules/schemas/reducer';\nimport {\n    Messages,\n    translate,\n} from 'modules/intl';\n\nimport ChangesTabContainer from './ChangesTabContainer';\nimport CommitDryRunTabContainer from './CommitDryRunTabContainer';\nimport CommitManager from './CommitManager';\nimport CommitQueueTab from './CommitQueueListContainer';\nimport NativeCommitDryRunTabContainer from './NativeCommitDryRunTabContainer';\nimport style from './CommitManagerStyles';\nimport WarningsTab from './WarningsTab';\n\nconst loader = <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nconst getPage = (thIsBusy, { name, tab, page }, disabled) => ({\n    name,\n    tab: tab || name,\n    page: !thIsBusy ? page : loader,\n    disabled: !!disabled,\n});\n\nconst getChangesPage = () => ({\n    name: translate(Messages.COMMITMANAGER.CHANGES),\n    page: <ChangesTabContainer />,\n});\n\nconst getCommitDryRunPage = () => ({\n    name: translate(Messages.COMMITMANAGER.CONFIG),\n    page: <CommitDryRunTabContainer />,\n});\n\nconst getNativeCommitDryRunPage = () => ({\n    name: translate(Messages.COMMITMANAGER.NATIVE_CONFIG),\n    page: <NativeCommitDryRunTabContainer />,\n});\n\nconst getCommitQueuePage = () => ({\n    name: translate(Messages.COMMITMANAGER.COMMIT_QUEUE),\n    page: <CommitQueueTab />,\n});\n\nconst countNumberOfErrors = (error) => {\n    let number = 0;\n\n    if (error && error.data && error.data.errors && Array.isArray(error.data.errors)) {\n        number += error.data.errors.length;\n    }\n\n    return number;\n};\n\nconst convertWarningsToErrors = (warnings) => {\n    if (isNonEmptyArray(warnings)) {\n        return {\n            data: {\n                errors: warnings,\n            },\n        };\n    }\n    return {};\n};\n\nconst getWarningsPage = (warnings, onReevaluateTrans) => {\n    const numberOfWarnings = countNumberOfErrors(warnings);\n    const name = translate(Messages.COMMITMANAGER.WARNINGS);\n    return {\n        tab: (\n            <div>\n                <span>{name}</span>\n                {numberOfWarnings > 0 &&\n                    <span style={style.warningsNumberContainer} data-handle=\"warnings-number-label\">\n                        {numberOfWarnings}\n                    </span>\n                }\n            </div>),\n        page: <WarningsTab\n            error={warnings}\n            onRevalidateTrans={onReevaluateTrans}\n            />,\n        name,\n    };\n};\n\nconst getErrorsPage = (error, conflicts, onReevaluateTrans, resolveConflictsCb) => {\n    const numberOfErrors = countNumberOfErrors(error);\n    const name = translate(Messages.COMMITMANAGER.ERRORS);\n    return {\n        tab: (\n            <div>\n                <span>{name}</span>\n                {numberOfErrors > 0 &&\n                    <span style={style.warningsNumberContainer} data-handle=\"warnings-number-label\">\n                        {numberOfErrors}\n                    </span>\n                }\n            </div>),\n        page: <WarningsTab\n            error={error}\n            conflicts={conflicts}\n            onRevalidateTrans={onReevaluateTrans}\n            onResolveConflicts={resolveConflictsCb}\n        />,\n        name,\n    };\n};\n\nclass CommitManagerContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTab = this.onChangeTab.bind(this);\n        this.onReevaluateTrans = this.onReevaluateTrans.bind(this);\n        this.resolveConflicts = this.resolveConflicts.bind(this);\n        this.reevaluateCalled = false;\n\n        this.state = {\n            activePageIndex: 0,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            emptyTransaction,\n            onGetWriteTrans,\n            thIsBusy,\n            th,\n        } = this.props;\n\n        if (!th) onGetWriteTrans();\n\n        if (\n            th\n            && !thIsBusy\n            && !emptyTransaction\n        ) {\n            this.onReevaluateTrans();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            th,\n            thIsBusy,\n            changes,\n            warnings,\n            transError,\n            transStatus,\n        } = this.props;\n        const { activePageIndex } = this.state;\n\n        if (!isDeepEqual(transError, nextProps.transError)) {\n            this.setState({ activePageIndex: 1 });\n        } else if (!isDeepEqual(warnings, nextProps.warnings)) {\n            this.setState({ activePageIndex: 2 });\n        }\n\n        if (th !== nextProps.th) {\n            return true;\n        }\n        if (thIsBusy === true && nextProps.thIsBusy === false) {\n            return true;\n        }\n        if (activePageIndex !== nextState.activePageIndex) {\n            return true;\n        }\n        if (transStatus !== nextProps.transStatus) {\n            return true;\n        }\n        if (!isDeepEqual(changes, nextProps.changes)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate() {\n        const {\n            emptyTransaction,\n            onGetWriteTrans,\n            thIsBusy,\n            th,\n        } = this.props;\n\n        if (\n            !th\n            && !emptyTransaction\n        ) {\n            onGetWriteTrans();\n        }\n\n        if (\n            th\n            && !thIsBusy\n            && !this.reevaluateCalled\n            && !emptyTransaction\n        ) {\n            this.onReevaluateTrans();\n        }\n    }\n\n    onChangeTab(activePageIndex) {\n        this.setState({\n            activePageIndex,\n        });\n    }\n\n    onReevaluateTrans() {\n        const { onReevaluate, th } = this.props;\n        if (th) {\n            this.reevaluateCalled = true;\n            onReevaluate(th);\n        }\n    }\n\n    resolveConflicts() {\n        const { onResolveConflicts, th } = this.props;\n\n        if (th) {\n            onResolveConflicts(th);\n        }\n    }\n\n    render() {\n        const {\n            conflicts,\n            emptyTransaction,\n            transError,\n            thIsBusy,\n            transStatus,\n            warnings,\n        } = this.props;\n        const { activePageIndex } = this.state;\n        const disableDryRun = (transError && isNonEmpty(transError)) || thIsBusy;\n        const pages = [\n            getPage(thIsBusy, getChangesPage()),\n            getPage(thIsBusy, getErrorsPage(\n                transError,\n                conflicts,\n                this.onReevaluateTrans,\n                this.resolveConflicts,\n            )),\n            getPage(thIsBusy, getWarningsPage(warnings, this.onReevaluateTrans)),\n            getPage(thIsBusy, getCommitDryRunPage(), disableDryRun),\n            getPage(thIsBusy, getNativeCommitDryRunPage(), disableDryRun),\n            getPage(thIsBusy, getCommitQueuePage()),\n        ];\n\n        return (\n            <CommitManager\n                emptyTransaction={emptyTransaction}\n                onChangeTab={this.onChangeTab}\n                pages={pages}\n                loading={thIsBusy}\n                transStatus={transStatus}\n                activePageIndex={activePageIndex}\n            />\n        );\n    }\n}\n\nCommitManagerContainer.defaultProps = {\n    emptyTransaction: undefined,\n    thIsBusy: false,\n    th: undefined,\n    transStatus: undefined,\n    warnings: {},\n};\n\nCommitManagerContainer.propTypes = {\n    changes: PropTypes.arrayOf(PropTypes.shape()),\n    conflicts: PropTypes.arrayOf(PropTypes.shape()),\n    emptyTransaction: PropTypes.bool,\n    transError: PropTypes.shape({\n        type: PropTypes.string,\n        message: PropTypes.string,\n    }),\n    onGetWriteTrans: PropTypes.func.isRequired,\n    onReevaluate: PropTypes.func.isRequired,\n    onResolveConflicts: PropTypes.func.isRequired,\n    thIsBusy: PropTypes.bool,\n    th: PropTypes.number,\n    transStatus: PropTypes.string,\n    warnings: PropTypes.shape({\n        path: PropTypes.string,\n        paths: PropTypes.arrayOf(PropTypes.string),\n        reason: PropTypes.string,\n    }),\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetWriteTrans() {\n        dispatch(getWriteTrans());\n    },\n    onReevaluate(th) {\n        dispatch(reevaluate({ th }));\n    },\n    onResolveConflicts(th) {\n        dispatch(resolveConflicts({ th }));\n    },\n});\n\nconst mapStateToProps = (state) => {\n    const warnings = convertWarningsToErrors(selectWarnings(state));\n    const transError = selectValidateTransactionError(state);\n\n    if (transError && transError.data && Array.isArray(transError.data.errors)) {\n        for (let i = 0; i < transError.data.errors.length; i += 1) {\n            transError.data.errors[i].schema = selectSchema(\n                state,\n                transError.data.errors[i].path,\n            );\n        }\n    }\n\n    return {\n        changes: selectChangesWithDefaultValues(state),\n        conflicts: selectConflicts(state),\n        emptyTransaction: transactionIsEmpty(state),\n        transError,\n        thIsBusy: selectThIsBusy(state),\n        th: selectReadWrite(state),\n        transStatus: selectStatus(state),\n        warnings,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitManagerContainer);\n\nexport {\n    CommitManagerContainer as _CommitManagerContainer,\n    convertWarningsToErrors as _convertWarningsToErrors,\n    countNumberOfErrors as _countrNumberOfErrors,\n    getChangesPage as _getChangesPage,\n    getCommitDryRunPage as _getCommitDryRunPage,\n    getNativeCommitDryRunPage as _getNativeCommitDryRunPage,\n    getWarningsPage as _getWarningsPage,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    application: {\n        ...defaultStyles.application,\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100vh',\n        backgroundImage: defaultStyles.pattern1,\n    },\n    scrollingContainer: {\n        overflow: 'auto',\n        padding: '1rem 0.5rem',\n        flexGrow: '1',\n    },\n    maxWidth: {\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n    },\n    warningsNumberContainer: {\n        backgroundColor: defaultStyles.color5,\n        fontSize: defaultStyles.small3,\n        color: defaultStyles.textColor4,\n        padding: '0.075rem 0.25rem',\n        marginLeft: '0.5rem',\n    },\n    warningsNumberLabel: {\n        position: 'absolute',\n        backgroundColor: '#ff3333',\n        color: '#ffffff',\n        padding: '0 0.3rem',\n        borderRadius: '1rem',\n        right: '0.5rem',\n    },\n    secondHeader: {\n        backgroundColor: defaultStyles.color11,\n        borderTop: '1px solid #cccccc',\n        height: '50px',\n    },\n    contentWrapper: {\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n        display: 'flex',\n        height: '100%',\n    },\n    tabDeck: {\n        main: {\n            maxWidth: defaultStyles.maxWidth,\n            padding: '1rem',\n            margin: '0 auto',\n        },\n    },\n    statusStyles: {\n        message: {\n            fontFamily: defaultStyles.font2,\n            color: defaultStyles.color2,\n            fontSize: defaultStyles.medium2,\n            alignSelf: 'center',\n            margin: '0 0.5rem 0 1rem',\n            minWidth: '14rem',\n        },\n        statusValid: {\n            color: defaultStyles.color10,\n        },\n        statusEmpty: {\n        },\n        statusInvalid: {\n            color: defaultStyles.color5,\n        },\n    },\n    spacer: {\n        flexGrow: '1',\n    },\n    commitButton: {\n        alignSelf: 'center',\n        marginRight: '1rem',\n    },\n    table: {\n        color: defaultStyles.textColor2,\n        fontFamily: defaultStyles.font2,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        thead: {\n            backgroundColor: defaultStyles.color3,\n            borderBottom: `1px solid ${defaultStyles.color7}`,\n            fontSize: defaultStyles.medium2,\n            whiteSpace: 'nowrap',\n        },\n        tbody: {\n            backgroundColor: defaultStyles.color3,\n            fontSize: '0.8rem',\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word',\n        },\n        td: {\n            padding: '0.5rem 1rem',\n            lineHeight: '1.75',\n        },\n        th: {\n            padding: '0.5rem 1rem',\n            lineHeight: '1.75',\n        },\n        tr: {\n            backgroundColor: 'rgb(243, 243, 243)',\n            color: '#333333',\n            padding: '0.7rem',\n        },\n        a: {\n            color: defaultStyles.color1,\n            textDecoration: 'none',\n        },\n    },\n    resultSearchBar: {\n        width: '100%',\n    },\n    nativeDevice: {\n        fontSize: defaultStyles.medium3,\n        padding: '1rem 0 0 1rem',\n    },\n    nativeCommitDiff: {\n        fontFamily: defaultStyles.font3,\n        fontSize: defaultStyles.medium1,\n        padding: '0.25rem 1rem',\n        whiteSpace: 'pre',\n        lineHeight: '1.25',\n        fontWeight: 'normal',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n    },\n    loaderbox: {\n        margin: '2rem auto 2rem auto',\n    },\n};\n\nconst checkboxStyle = {\n    checkbox: {\n        alignSelf: 'center',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    label: {\n        fontSize: defaultStyles.medium2,\n        alignSelf: 'center',\n        margin: '0 0.5rem',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst warningStyles = {\n    page: {\n        position: 'relative',\n    },\n    revalidateContainer: {\n        display: 'inline-block',\n        margin: '1rem 0',\n    },\n    errorHeader: {\n        backgroundColor: defaultStyles.color5,\n        color: defaultStyles.color3,\n        padding: '0.4375rem 1rem',\n        marginBottom: '1rem',\n        fontSize: defaultStyles.medium1,\n    },\n    messageContainer: {\n        color: defaultStyles.color5,\n        fontSize: defaultStyles.medium2,\n        marginLeft: '1rem',\n        display: 'inline-block',\n    },\n    reValidateButton: {\n        marginLeft: '1rem',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n    },\n    errorWrapper: {\n        padding: '0 1rem',\n    },\n};\n\nexport {\n    checkboxStyle,\n    warningStyles,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst link = {\n    color: defaultStyles.color1,\n    textDecoration: 'none',\n    fontSize: defaultStyles.medium2,\n    lineHeight: 'normal',\n    alignSelf: 'center',\n};\n\nexport default {\n    crumbs: {\n        fontFamily: defaultStyles.font2,\n        display: 'flex',\n        alignSelf: 'center',\n        marginLeft: '0.5rem',\n        minWidth: '5rem',\n        overflow: 'hidden',\n        flexShrink: '0',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    link,\n    blackLink: {\n        ...link,\n        color: defaultStyles.textColor2,\n    },\n    navHome: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n    navUp: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n};\n\nconst labelDropdown = {\n    wordBreak: 'break-all',\n    position: 'absolute',\n    backgroundColor: 'rgb(248, 248, 248)',\n    padding: '0.6rem',\n    boxShadow: '0 0 0.5rem #888888',\n    minWidth: '6rem',\n    zIndex: '1',\n};\n\nconst deviceGroupsOptions = {\n    display: 'flex',\n    color: 'grey',\n    fontSize: '0.8rem',\n    cursor: 'pointer',\n    padding: '.2rem',\n};\n\nconst input = {\n    labelFilter: {\n        alignSelf: 'center',\n        fontSize: '0.6rem',\n    },\n    labelDropdown,\n    deviceGroupsOptions,\n    deviceGroupsOptionsActive: {\n        ...deviceGroupsOptions,\n        background: 'rgba(0, 0, 0, 0.05)',\n    },\n    input: {\n        width: '3rem',\n    },\n    highlight: {\n        fontWeight: 'bold',\n        color: defaultStyles.color2,\n    },\n};\n\nexport {\n    input,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst textAreaContainer = {\n    display: 'flex',\n};\n\nexport default {\n    checkboxContainer: {\n        display: 'flex',\n        marginTop: '1rem',\n    },\n    container: {\n        minHeight: '12rem',\n        padding: '0.2rem',\n        minWidth: '35rem',\n\n    },\n    errorMessage: {\n        color: defaultStyles.color5,\n        fontFamily: defaultStyles.font2,\n        fontSize: defaultStyles.medium1,\n        marginTop: '0.5rem',\n    },\n    fileSelector: {\n        display: 'none',\n    },\n    fileUpload: {\n        display: 'flex',\n        marginTop: '1rem',\n    },\n    loadingDots: {\n        width: '0.3875rem',\n        height: '0.3875rem',\n        margin: '0 0.075rem',\n    },\n    plainContainer: {\n        marginTop: '1rem',\n    },\n    loadContainerStyle: {\n        position: 'relative',\n        alignSelf: 'center',\n        margin: '0 0.5rem',\n        display: 'flex',\n    },\n    selectedFilesStyle: {\n        marginTop: '1rem',\n        fontFamily: defaultStyles.font2,\n        fontSize: defaultStyles.medium2,\n    },\n    tabDeck: {\n        main: {\n            height: '100%',\n            padding: '1rem',\n            overflow: 'auto',\n        },\n    },\n    textAreaContainer,\n    previewTextAreaContainer: {\n        ...textAreaContainer,\n        marginTop: '1rem',\n    },\n    generateFileButton: {\n        ...defaultStyles.button,\n        width: '7.5rem',\n    },\n    generateFileButtonDisabled: {\n        ...defaultStyles.buttonDisabled,\n        width: '7.5rem',\n    },\n    textAreaStyle: {\n        fontFamily: defaultStyles.font2,\n        marginTop: '0.2rem',\n        overflow: 'auto',\n        padding: '0.5rem',\n        width: '100%',\n    },\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { selectRawLoading as selectLoading } from 'modules/nodes/selectors';\nimport { getDataThunk } from 'modules/data/actions';\nimport { selectHasError } from 'modules/data/selectors';\n\nimport NotFound from 'Common/Components/ConfigRender/NotFound';\nimport SchemaContainer from 'Common/Components/ConfigRender/SchemaContainer';\n\nclass DataContainer extends React.Component {\n    componentDidMount() {\n        const { onLoad, path, includeSubfolders, showEmpty, showOperdata } = this.props;\n        onLoad(path, includeSubfolders, showEmpty, showOperdata);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {\n            error,\n            includeSubfolders,\n            path,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n\n        if (error !== nextProps.error) {\n            return true;\n        }\n\n        if (path !== nextProps.path) {\n            return true;\n        }\n        if (includeSubfolders !== nextProps.includeSubfolders) {\n            return true;\n        }\n        if (showOperdata !== nextProps.showOperdata) {\n            return true;\n        }\n        if (showEmpty !== nextProps.showEmpty) {\n            return true;\n        }\n        if (showActions !== nextProps.showActions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            includeSubfolders,\n            onLoad,\n            path,\n            showEmpty,\n            showOperdata } = this.props;\n        const {\n            includeSubfolders: prevSubfolders,\n            path: prevPath,\n            showEmpty: prevShowEmpty,\n            showOperdata: prevShowOperdata,\n        } = prevProps;\n\n        if (prevPath !== path ||\n            prevSubfolders !== includeSubfolders ||\n            prevShowEmpty !== showEmpty ||\n            prevShowOperdata !== showOperdata) {\n            onLoad(path, includeSubfolders, showEmpty, showOperdata);\n        }\n    }\n\n    render() {\n        const { error, isLoading } = this.props;\n        if (isLoading === true) {\n            return <Loader color=\"white\" />;\n        }\n        if (error) {\n            return <NotFound />;\n        }\n        return (\n            <SchemaContainer {...this.props} />\n        );\n    }\n}\n\nDataContainer.defaultProps = {\n    hideIndicators: false,\n    isLoading: false,\n    path: '',\n};\n\nDataContainer.propTypes = {\n    hideIndicators: PropTypes.bool,\n    error: PropTypes.bool,\n    includeSubfolders: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    showActions: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, { path }) => ({\n    error: selectHasError(state, path),\n    isLoading: selectLoading(state, path),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad(path, includeSubfolders, showEmpty, showOperdata) {\n        return dispatch(getDataThunk({\n            path,\n            includeSubfolders,\n            showEmpty,\n            showOperdata,\n        }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(DataContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    DataContainer as _DataContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './DiffTableStyles';\n\n\nconst rowPropTypes = {\n    lineNum: PropTypes.number,\n    text: PropTypes.string,\n};\n\nconst PlusRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftCol} />\n        <td style={style.rightColAdd}><div>{text}</div></td>\n    </tr>\n);\nPlusRow.propTypes = rowPropTypes;\n\nconst MinusRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftColDelete}><div>{text}</div></td>\n        <td style={style.rightCol} />\n    </tr>\n);\nMinusRow.propTypes = rowPropTypes;\n\n\nconst BothRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftCol}><div>{text}</div></td>\n        <td style={style.rightCol}><div>{text}</div></td>\n    </tr>\n);\nBothRow.propTypes = rowPropTypes;\n\n\nconst renderRow = (row, rowIx) => {\n    const lineNum = rowIx + 1;\n    if (row.length > 0 && row[0] === '+') {\n        return <PlusRow text={row} lineNum={lineNum} key={rowIx} />;\n    }\n    if (row.length > 0 && row[0] === '-') {\n        return <MinusRow text={row} lineNum={lineNum} key={rowIx} />;\n    }\n    return <BothRow text={row} lineNum={lineNum} key={rowIx} />;\n};\n\n\nconst DiffTable = ({ data }) => {\n    const rows = data.split('\\n').map(renderRow);\n    return (\n        <table style={style.table}>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    );\n};\n\nDiffTable.propTypes = {\n    data: PropTypes.string,\n};\n\nexport default DiffTable;\nexport {\n    renderRow as _renderRow,\n    BothRow as _BothRow,\n    MinusRow as _MinusRow,\n    PlusRow as _PlusRow,\n};\n","const addColor = 'rgba(0, 129, 0, 0.2)';\nconst deleteColor = 'rgba(129, 0, 0, 0.2)';\nexport default {\n    table: {\n        marginTop: '1rem',\n        width: '100%',\n        fontFamily: '\"Courier New\", Courier, monospace',\n        fontSize: '0.8rem',\n        fontWeight: 'normal',\n    },\n    tr: {\n        whiteSpace: 'pre',\n    },\n    leftColNumber: {\n        width: '4em',\n    },\n    leftCol: {\n        width: '45%',\n    },\n    leftColDelete: {\n        width: '45%',\n        background: deleteColor,\n    },\n    leftColAdd: {\n        background: addColor,\n    },\n    rightCol: {\n        width: '45%',\n    },\n    rightColAdd: {\n        width: '45%',\n        background: addColor,\n    },\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    header: {\n        fontSize: defaultStyles.large1,\n        textAlign: 'center',\n        marginBottom: '1rem',\n    },\n    editButton: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        marginLeft: '1rem',\n        padding: '0',\n        width: '1.5rem',\n    },\n    frame: {\n        fontSize: defaultStyles.medium1,\n    },\n    topRow: {\n        display: 'flex',\n        justifyContent: 'space-Between',\n        marginBottom: '1rem',\n        fontSize: defaultStyles.medium2,\n    },\n    optionsBox: {\n        backgroundColor: defaultStyles.color11,\n        padding: '0.5rem',\n        border: `1px solid ${defaultStyles.color7}`,\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-Between',\n        padding: '0.25rem 0',\n    },\n    inputWrapper: {\n        width: '5.5rem',\n    },\n    name: {\n        alignSelf: 'center',\n    },\n    queueOptionsWrapper: {\n        paddingLeft: '0.65rem',\n        borderLeft: `1px solid ${defaultStyles.color7}`,\n        marginLeft: '0.35rem',\n    },\n    ignoreContainer: {\n        fontSize: '0.75rem',\n        marginBottom: '0.5rem',\n        marginTop: '1rem',\n    },\n    ignoreDescription: {\n        alignSelf: 'center',\n        fontSize: '0.875rem',\n        marginBottom: '0.5rem',\n    },\n    ignoreLabel: {\n        alignSelf: 'center',\n        cursor: 'pointer',\n        marginLeft: '0.5rem',\n    },\n};\n","import React from 'react';\nimport style from './CommitManagerStyles';\nimport { Link } from 'react-router';\nimport { getLinkWithPath } from 'ConfigurationEditor';\nimport { escapeKey } from '@webui-one/core/utils/path';\n\nexport const renderRow = (item, key) => (\n    <tr style={!(key % 2 === 0) ? style.table.tr : null} key={key}>\n        <td style={style.table.td}>\n            <Link\n                style={style.table.a}\n                to={getLinkWithPath(escapeKey(item.path))}\n            >\n                {item.path}\n            </Link>\n        </td>\n        <td style={style.table.td}>{item.op}</td>\n        <td style={style.table.td}>{item.old}</td>\n        <td style={style.table.td}>{item.value}</td>\n    </tr>\n);\n\nexport const renderHeader = () => (\n    <thead style={style.table.thead}>\n        <tr>\n            <th style={style.table.th}>Path</th>\n            <th style={style.table.th}>Operation</th>\n            <th style={style.table.th}>Old value</th>\n            <th style={style.table.th}>New value</th>\n        </tr>\n    </thead>\n);\n\nexport const renderBody = changes => (\n    <tbody style={style.table.tbody}>\n        { changes.map((change, ix) => (renderRow(change, ix))) }\n    </tbody>\n);\n\nexport {\n    renderBody as _renderBody,\n    renderRow as _renderRow,\n    renderHeader as _renderHeader,\n};\n","export default {\n    label: {\n        width: '4rem',\n    },\n    loader: {\n        transform: 'scale(0.5)',\n    },\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport Input from '@webui-one/components/ConfigRender/Input/Input';\nimport Select from '@webui-one/components/ConfigRender/Select/Select';\nimport EditSymbol from '@webui-one/styles/static/EditSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './CommitDialogStyles';\n\nclass CommitOptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isConfigMode: false };\n    }\n\n    render() {\n        const { commitOptions, onSetCommmitOption } = this.props;\n        const { isConfigMode } = this.state;\n        const {\n            'commit-queue-atomic': atomic,\n            'commit-queue-block-others': blockOthers,\n            'commit-queue': commitQueue,\n            'commit-queue-error-option': errorOption,\n            'commit-queue-lock': lock,\n            'no-lsa': noLsa,\n            'no-networking': noNetworking,\n            'no-out-of-sync-check': noOutOfSyncCheck,\n            'no-overwrite': noOverwrite,\n            'no-revision-drop': noRevisionDrop,\n            'no-deploy': noDeploy,\n            'commit-queue-tag': tag,\n            'commit-queue-timeout': timeout,\n            'use-lsa': useLsa,\n        } = commitOptions;\n        const hasOption = noRevisionDrop || noDeploy || (commitQueue && commitQueue !== 'bypass') ||\n                noNetworking || noOutOfSyncCheck || noOverwrite || useLsa || noLsa;\n\n        return (<div style={style.frame}>\n            <div style={style.topRow}>\n                <div style={style.name}>{(isConfigMode || hasOption) ?\n                    'Commit options:' : 'No commit options set'}</div>\n                <button\n                    data-handle=\"penButton\"\n                    onClick={() => this.setState({ isConfigMode: !isConfigMode })}\n                    style={style.editButton}\n            ><EditSymbol color={defaultStyles.color1} active={isConfigMode} /></button>\n            </div>\n            {(isConfigMode || hasOption) && <div style={style.optionsBox}>\n                {(isConfigMode || noRevisionDrop) &&\n                <div data-handle=\"noRevisionDrop\" style={style.row}>\n                    <div style={style.name}>No revision drop</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noRevisionDrop}\n                        onSetValue={value => onSetCommmitOption('no-revision-drop', value)}\n                />}\n                </div>}\n                {(isConfigMode || noDeploy) &&\n                <div data-handle=\"noDeploy\" style={style.row}>\n                    <div style={style.name}>No deploy</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noDeploy}\n                        onSetValue={value => onSetCommmitOption('no-deploy', value)}\n                />}\n                </div>}\n                {(isConfigMode || (commitQueue && (commitQueue !== 'bypass'))) &&\n                <div data-handle=\"commitQueue\" style={style.row}>\n                    <div style={style.name}>{`Commit queue${isConfigMode ? '' : `: ${commitQueue}`}`}</div>\n                    {isConfigMode && <Select\n                        options={['', 'async', 'sync', 'bypass']}\n                        onSetValue={value => onSetCommmitOption('commit-queue', value)}\n                        value={commitQueue}\n                 />}\n                </div>}\n                {(commitQueue && commitQueue !== 'bypass') && <div style={style.queueOptionsWrapper}>\n                    {(isConfigMode || atomic) &&\n                    <div data-handle=\"atomic\" style={style.row}>\n                        <div style={style.name}>Atomic</div>\n                        {isConfigMode && <Select\n                            options={['', 'true', 'false']}\n                            onSetValue={value => onSetCommmitOption('commit-queue-atomic', value)}\n                            value={atomic}\n                    />}\n                    </div>}\n                    {(isConfigMode || blockOthers) &&\n                    <div data-handle=\"blockOthers\" style={style.row}>\n                        <div style={style.name}>Block others</div>\n                        {isConfigMode && <CheckBox\n                            value={!!blockOthers}\n                            onSetValue={value => onSetCommmitOption(\n                                'commit-queue-block-others', value,\n                                )}\n                    />}\n                    </div>}\n                    {(isConfigMode || lock) &&\n                    <div data-handle=\"lock\" style={style.row}>\n                        <div style={style.name}>Lock</div>\n                        {isConfigMode && <CheckBox\n                            value={!!lock}\n                            onSetValue={value => onSetCommmitOption('commit-queue-lock', value)}\n                    />}\n                    </div>}\n                    {(isConfigMode || tag) &&\n                    <div data-handle=\"tag\" style={style.row} onKeyDown={e => e.stopPropagation()} role=\"none\">\n                        <div style={style.name}>{`Tag${isConfigMode ? '' : `: ${tag}`}`}</div>\n                        <div style={style.inputWrapper}>\n                            {isConfigMode && <Input\n                                editable\n                                onSetValue={value => onSetCommmitOption('commit-queue-tag', value)}\n                                value={tag}\n                 />}\n                        </div>\n                    </div>}\n                    {(isConfigMode || timeout) &&\n                    <div data-handle=\"timeout\" style={style.row} onKeyDown={e => e.stopPropagation()} role=\"none\">\n                        <div style={style.name}>{`Timeout${isConfigMode ? '' : `: ${timeout}`}`}</div>\n                        <div style={style.inputWrapper}>\n                            {isConfigMode && <Input\n                                editable\n                                onSetValue={value => onSetCommmitOption('commit-queue-timeout', value)}\n                                value={timeout}\n                 />}\n                        </div>\n                    </div>}\n                    {(isConfigMode || (errorOption)) &&\n                    <div data-handle=\"errorOption\" style={style.row}>\n                        <div style={style.name}>{`Error option${isConfigMode ? '' : `: ${errorOption}`}`}</div>\n                        {isConfigMode && <Select\n                            options={['', 'continue-on-error', 'rollback-on-error', 'bypass-on-error']}\n                            optionsInfo={['', 'continue', 'rollback', 'bypass']}\n                            formatOption={(val, info) => info}\n                            onSetValue={value => onSetCommmitOption('commit-queue-error-option', value)}\n                            value={errorOption}\n                 />}\n                    </div>}\n                </div>}\n                {(isConfigMode || noNetworking) &&\n                <div data-handle=\"noNetworking\" style={style.row}>\n                    <div style={style.name}>No networking</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noNetworking}\n                        onSetValue={value => onSetCommmitOption('no-networking', value)}\n                />}\n                </div>}\n                {(isConfigMode || noOutOfSyncCheck) &&\n                <div data-handle=\"noOutOfSyncCheck\" style={style.row}>\n                    <div style={style.name}>No out of sync check</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noOutOfSyncCheck}\n                        onSetValue={value => onSetCommmitOption('no-out-of-sync-check', value)}\n                />}\n                </div>}\n                {(isConfigMode || noOverwrite) &&\n                <div data-handle=\"noOverwrite\" style={style.row}>\n                    <div style={style.name}>No overwrite</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noOverwrite}\n                        onSetValue={value => onSetCommmitOption('no-overwrite', value)}\n                />}\n                </div>}\n                {(isConfigMode || useLsa) &&\n                <div data-handle=\"useLsa\" style={style.row}>\n                    <div style={style.name}>Use LSA</div>\n                    {isConfigMode && <CheckBox\n                        value={!!useLsa}\n                        onSetValue={value => onSetCommmitOption('use-lsa', value)}\n                />}\n                </div>}\n                {(isConfigMode || noLsa) &&\n                <div data-handle=\"noLsa\" style={style.row}>\n                    <div style={style.name}>No LSA</div>\n                    {isConfigMode && <CheckBox\n                        value={!!noLsa}\n                        onSetValue={value => onSetCommmitOption('no-lsa', value)}\n                />}\n                </div>}\n            </div>}\n        </div>);\n    }\n}\n\n\nCommitOptions.defaultProps = {\n    commitOptions: {},\n    onSetCommmitOption: () => null,\n};\n\nexport const CommitOptionsType = PropTypes.shape({\n    'commit-queue-atomic': PropTypes.boolean,\n    'commit-queue-block-others': PropTypes.boolean,\n    'commit-queue': PropTypes.boolean,\n    'commit-queue-error-option': PropTypes.string,\n    'commit-queue-lock': PropTypes.boolean,\n    'commit-queue-tag': PropTypes.string,\n    'commit-queue-timeout': PropTypes.string,\n    'no-deploy': PropTypes.boolean,\n    'no-lsa': PropTypes.boolean,\n    'no-networking': PropTypes.boolean,\n    'no-out-of-sync-check': PropTypes.boolean,\n    'no-overwrite': PropTypes.boolean,\n    'no-revision-drop': PropTypes.boolean,\n    'use-lsa': PropTypes.boolean,\n});\n\nCommitOptions.propTypes = {\n    commitOptions: CommitOptionsType,\n    onSetCommmitOption: PropTypes.func,\n};\n\n\nexport default CommitOptions;\n","import { getSchema } from 'modules/schemas/actions';\nimport {\n    query,\n} from 'modules/nodes/actions';\n\nimport {\n    PATH,\n    PATH_QUEUE,\n    QUERY_SELECTION,\n    getQueueItemQueryParams,\n} from './path';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getCommitQueue = (chunkSize, offset, columnKey, sortorder, xpathExpression) =>\n    dispatch => dispatch(getSchema({\n        path: PATH,\n        params: {\n            levels: -1,\n            stop_on_list: true,\n        },\n        reload: true,\n    })).then(() => dispatch(query({\n        selection: QUERY_SELECTION,\n        path: PATH_QUEUE,\n        sort: columnKey,\n        sortOrder: sortorder,\n        initialOffset: offset,\n        chunkSize,\n        result_as: 'string',\n        xpathExpr: xpathExpression,\n        contextNode: PATH,\n    })));\n\nexport const getDevicesOfQueueItem = queueItemId =>\n    dispatch => Promise.all(getQueueItemQueryParams(queueItemId).map(({ path, selection }) =>\n        dispatch(query({ selection, path })),\n    ));\n","export const QUERY_SELECTION = ['id', 'age', 'status', 'is-atomic'];\nexport const PATH = '/ncs:devices/commit-queue';\nexport const PATH_QUEUE = `${PATH}/queue-item`;\n\n\nexport const QUEUE_ITEM_DEVICES = 'devices';\nexport const QUEUE_ITEM_WAITING = 'waiting-for';\nexport const QUEUE_ITEM_TRANSIENT = 'transient-errors';\nexport const QUEUE_ITEM_COMPLETED = 'completed';\nexport const QUEUE_ITEM_FAILED = 'failed';\n\nexport const QUEUE_ITEM_DEVICE_LISTS = [\n    QUEUE_ITEM_DEVICES,\n    QUEUE_ITEM_WAITING,\n    QUEUE_ITEM_TRANSIENT,\n    QUEUE_ITEM_COMPLETED,\n    QUEUE_ITEM_FAILED,\n];\n\nexport const QUEUE_ITEM_DEVICE_LISTS_SELECTION = {\n    [QUEUE_ITEM_FAILED]: ['name'],\n};\n\nexport const itemIdToPath = queueItemId => leaf => ({\n    path: `/ncs:devices/commit-queue/queue-item{${queueItemId}}/${leaf}`,\n    selection: QUEUE_ITEM_DEVICE_LISTS_SELECTION[leaf],\n});\n\nexport const getQueueItemQueryParams = queueItemId =>\n    QUEUE_ITEM_DEVICE_LISTS.map(itemIdToPath(queueItemId));\n","import {\n    createNodeRowSelector,\n    selectLoading,\n    selectOffset,\n    selectSortColumn,\n    selectsortOrder,\n    selectNode,\n    selectRows,\n} from 'modules/nodes/selectors';\n\nimport {\n    selectTotalNumberOfResults,\n} from 'modules/data/selectors';\n\nimport {\n    PATH_QUEUE,\n    QUEUE_ITEM_COMPLETED,\n    QUEUE_ITEM_DEVICES,\n    QUEUE_ITEM_DEVICE_LISTS,\n    QUEUE_ITEM_FAILED,\n    QUEUE_ITEM_TRANSIENT,\n    QUEUE_ITEM_WAITING,\n    getQueueItemQueryParams,\n} from './path';\n\nconst nodeSelector = createNodeRowSelector();\nexport const selectCommitQueueRows = (state, ownProps) => (\n    nodeSelector(state, { ...ownProps, path: PATH_QUEUE })\n);\nexport const selectCommitQueueLoading = state => selectLoading(state, PATH_QUEUE);\nexport const selectCommitQueueOffset = state => selectOffset(state, PATH_QUEUE);\nexport const selectCommitQueueSortColumn = state => selectSortColumn(state, PATH_QUEUE);\nexport const selectCommitQueueSortOrder = state => selectsortOrder(state, PATH_QUEUE);\nexport const selectTotalNumberOfCommitQueues = state =>\n    selectTotalNumberOfResults(state, PATH_QUEUE);\n\nexport const getIdFromProps = ownProps => ownProps.rowKey.replace(/[^0-9]/g, '');\n\nexport const selectQueueItemIsLoading = (state, ownProps) =>\n    getQueueItemQueryParams(getIdFromProps(ownProps)).reduce(\n        (acc, { path }) => {\n            const node = selectNode(state, path);\n            return acc || (node.isLoading !== undefined && node.isLoading);\n        },\n        false,\n    );\n\nconst determineState = (deviceName, deviceLists) => {\n    if (deviceLists[QUEUE_ITEM_TRANSIENT].find(e => deviceName === e[0])) return 'transient';\n    if (deviceLists[QUEUE_ITEM_WAITING].find(e => deviceName === e[0])) return 'wait';\n    if (deviceLists[QUEUE_ITEM_COMPLETED].find(e => deviceName === e[0])) return 'complete';\n    if (deviceLists[QUEUE_ITEM_FAILED].find(e => deviceName === e.name)) return 'failed';\n    return 'device';\n};\n\nexport const selectQueueItemDevices = (state, ownProps) => {\n    const queryParams = getQueueItemQueryParams(getIdFromProps(ownProps));\n    const lists = queryParams.map(qp => selectRows(state, qp.path));\n    const deviceLists = QUEUE_ITEM_DEVICE_LISTS.reduce((acc, k, i) => ({\n        ...acc,\n        [k]: lists[i],\n    }), {});\n    return deviceLists[QUEUE_ITEM_DEVICES].map((d) => {\n        const deviceName = d[0];\n        return ({\n            device: deviceName,\n            state: determineState(deviceName, deviceLists),\n        });\n    });\n};\n\nexport {\n    determineState as _determineState,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getSchema } from 'modules/schemas/actions';\nimport {\n    selectChangesWithDefaultValues,\n} from 'modules/transactions/selectors';\nimport ChangesTab from './ChangesTab';\n\nclass ChangesTabContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hasLoadedSchemaFor = {};\n    }\n\n    componentDidUpdate() {\n        const {\n            changes,\n            onGetSchema,\n        } = this.props;\n        const defaultSetChanges = changes.filter(\n            c => c.op === 'default_set' && c.value === undefined && this.hasLoadedSchemaFor[c.path] !== true,\n        );\n\n        defaultSetChanges.forEach((c) => {\n            this.hasLoadedSchemaFor[c.path] = true;\n            onGetSchema(c.path);\n        });\n    }\n\n    render() {\n        const { changes } = this.props;\n        return <ChangesTab changes={changes} />;\n    }\n}\n\nChangesTabContainer.defaultProps = {\n    changes: [],\n};\n\nChangesTabContainer.propTypes = {\n    changes: PropTypes.arrayOf(\n        PropTypes.shape({\n            device: PropTypes.string,\n            text: PropTypes.string,\n        }),\n    ),\n    onGetSchema: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetSchema(path) {\n        dispatch(getSchema({ path, params: { levels: 1 } }));\n    },\n});\n\nconst mapStateToProps = state => ({\n    changes: selectChangesWithDefaultValues(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ChangesTabContainer);\n\nexport {\n    ChangesTabContainer as _ChangesTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmptyArray } from '@webui-one/core/utils/array';\nimport style from './CommitManagerStyles';\nimport {\n    renderHeader,\n    renderBody,\n} from './Common';\n\nconst ChangesTab = ({ changes = [] }) => {\n    if (isEmptyArray(changes)) {\n        return <div style={style.message}>No changes</div>;\n    }\n\n    return (\n        <table style={style.table}>\n            {renderHeader()}\n            {renderBody(changes)}\n        </table>\n    );\n};\n\nChangesTab.defaultProps = {\n    changes: [],\n};\n\nChangesTab.propTypes = {\n    changes: PropTypes.arrayOf(\n        PropTypes.shape({\n            path: PropTypes.string,\n            op: PropTypes.string,\n            value: PropTypes.string,\n            old: PropTypes.string,\n        }),\n    ),\n};\n\nexport default ChangesTab;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    selectCommitDryRunResult,\n    selectCommitDryRunError,\n    selectReadWrite,\n    selectHasLatestCommitDryRunResult,\n    selectThIsBusy,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport {\n    commitDryRun,\n} from 'modules/transactions/actions';\n\nimport style from './CommitManagerStyles';\nimport commitDryRunTab from './CommitDryRunTab';\n\nconst loader = <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nclass CommitDryRunTabContainer extends React.Component {\n    componentDidMount() {\n        this.onCommitDryRun();\n    }\n\n    componentDidUpdate() {\n        this.onCommitDryRun();\n    }\n\n    onCommitDryRun() {\n        const {\n            onCommitDryRun,\n            th,\n            emptyTransaction,\n            hasLatestCommitDryRunResult,\n            thIsBusy,\n            commitDryRunError,\n        } = this.props;\n\n        const hasNotError = !(commitDryRunError && commitDryRunError.message);\n\n        if (\n            !emptyTransaction &&\n            !!th &&\n            !hasLatestCommitDryRunResult &&\n            !thIsBusy &&\n            hasNotError\n        ) {\n            onCommitDryRun(th);\n        }\n    }\n\n    render() {\n        const { thIsBusy, result } = this.props;\n        if (thIsBusy) {\n            return loader;\n        }\n        return (\n            commitDryRunTab(result)\n        );\n    }\n}\n\nCommitDryRunTabContainer.defaultProps = {\n    result: {},\n};\n\nCommitDryRunTabContainer.propTypes = {\n    commitDryRunError: PropTypes.shape({\n        message: PropTypes.string,\n    }),\n    thIsBusy: PropTypes.bool,\n    result: PropTypes.shape(Object),\n    onCommitDryRun: PropTypes.func,\n    th: PropTypes.number,\n    emptyTransaction: PropTypes.bool,\n    hasLatestCommitDryRunResult: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onCommitDryRun(th) {\n        dispatch(commitDryRun({ th }));\n    },\n});\n\nconst mapStateToProps = state => ({\n    thIsBusy: selectThIsBusy(state),\n    result: selectCommitDryRunResult(state),\n    commitDryRunError: selectCommitDryRunError(state),\n    th: selectReadWrite(state),\n    hasLatestCommitDryRunResult: selectHasLatestCommitDryRunResult(state),\n    emptyTransaction: transactionIsEmpty(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitDryRunTabContainer);\n\nexport {\n    CommitDryRunTabContainer as _CommitDryRunTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport DiffTable from '@webui-one/components/Diff/DiffTable';\nimport style from './CommitDryRunStyles';\n\nconst renderTableWithName = ({ name, data }, i) => ( // eslint-disable-line react/prop-types\n    <div style={style.tableWrapper} key={`table-wrapper-${i}`}>\n        <div style={style.tableName}>{name}</div>\n        <DiffTable data={data} />\n    </div>\n);\n\nconst commitDryRunTab = (result) => {\n    if (!(result && result.local_node && result.local_node.data)) {\n        return <div style={style.message}>No configuration changes</div>;\n    }\n\n    if (result.lsa_node && result.lsa_node.length) {\n        const localNode = { data: result.local_node.data, name: 'Local node' };\n        const nodesData = [localNode, ...result.lsa_node.map(n => ({ ...n, name: `LSA node: ${n.name}` }))];\n        return (\n            <div style={style.tableWrapper}>\n                { nodesData.map(renderTableWithName) }\n            </div>\n        );\n    }\n    return (<div style={style.tableWrapper}>\n        <DiffTable data={result.local_node.data} />\n    </div>);\n};\n\nexport default commitDryRunTab;\n\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    tableWrapper: {\n        width: '100%',\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n    },\n    tableName: {\n        padding: '0.5rem 0 0.25rem 0',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n    },\n};\n","import TabDeck from '@webui-one/components/TabDeck/TabDeck';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport CommitButtonContainer from 'Common/Components/Commit/CommitButtonContainer';\nimport RevertButtonContainer from 'Common/Components/Commit/RevertButtonContainer';\nimport LoadButtonContainer from 'Common/Components/Commit/LoadButtonContainer';\nimport HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport EditModeButtonContainer from 'ConfigurationEditor/EditModeButtonContainer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate, Messages } from 'modules/intl';\nimport style from './CommitManagerStyles';\nimport { transactionStatus } from 'modules/transactions/constants';\n\nconst getStatusElement = (transactionEmpty, transStatus, loading) => {\n    if (loading) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusValid}>\n                {translate(Messages.COMMITMANAGER.EVALUATING)}\n            </span>\n        );\n    }\n\n    if (transactionEmpty) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusEmpty}>\n                {translate(Messages.COMMITMANAGER.EMPTY)}\n            </span>\n        );\n    }\n    if (transStatus === transactionStatus.INVALID) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusInvalid}>\n                {translate(Messages.COMMITMANAGER.INVALID)}\n            </span>\n        );\n    }\n    return (\n        <span data-handle=\"transactionStatus\" style={style.statusStyles.statusValid}>\n            {translate(Messages.COMMITMANAGER.VALID)}\n        </span>\n    );\n};\n\nconst CommitManager = (props) => {\n    const {\n        loading,\n        emptyTransaction,\n        onChangeTab,\n        pages,\n        transStatus,\n        activePageIndex,\n    } = props;\n\n    return (\n        <div style={style.application} data-handle=\"commitManager\">\n            <HeaderContainer additionalComponentsRight={[<EditModeButtonContainer />]}>\n                <div style={style.secondHeader}>\n                    <div style={style.contentWrapper}>\n                        <div style={style.statusStyles.message}>\n                            <span>\n                                {translate(Messages.COMMITMANAGER.CURRENT_TRANSACTION)}\n                            </span>&#160;\n                            {getStatusElement(emptyTransaction, transStatus, loading)}\n                        </div>\n                        <RevertButtonContainer />\n                        <LoadButtonContainer />\n                        <div style={style.spacer} />\n                        <div style={style.commitButton}>\n                            <CommitButtonContainer>\n                                {translate(Messages.COMMITMANAGER.COMMIT_BUTTON_COMMIT)}\n                            </CommitButtonContainer>\n                        </div>\n                    </div>\n                </div>\n                <div style={defaultStyles.shadow} />\n            </HeaderContainer>\n            <div style={style.scrollingContainer}>\n                <div style={style.maxWidth}>\n                    <TabDeck\n                        onChangeTab={onChangeTab}\n                        tabs={pages}\n                        defaultIndex={activePageIndex}\n                    />\n                </div>\n            </div>\n            <FooterContainer />\n        </div>\n    );\n};\n\nCommitManager.propTypes = {\n    activePageIndex: PropTypes.number,\n    emptyTransaction: PropTypes.bool,\n    loading: PropTypes.bool,\n    onChangeTab: PropTypes.func,\n    pages: PropTypes.arrayOf(\n        PropTypes.shape({\n            tab: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.object,\n            ]),\n            page: PropTypes.element,\n            name: PropTypes.string,\n        }),\n    ),\n    transStatus: PropTypes.string,\n};\n\nCommitManager.defaultProps = {\n    pages: [],\n    loading: undefined,\n};\n\nexport default CommitManager;\n\nexport {\n    getStatusElement as _getStatusElement,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { validateAndCommit } from 'modules/transactions/actions';\nimport PropTypes from 'prop-types';\nimport {\n    selectCommitInProgress,\n    selectCommitOptions,\n    selectReadWrite,\n    selectValid,\n    selectThIsBusy,\n    selectWarnings,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport CommitButton from './CommitButton';\nimport CommitDialog from './CommitDialog';\nimport { CommitOptionsType } from './CommitOptions';\n\nconst DONE_MESSAGE_TIMEOUT = 5000;\n\nconst commitIsDone = (prevProps, props) => (\n    prevProps.commitInProgress === true && !props.commitInProgress\n);\n\nclass CommitButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleIgnoreWarnings = this.toggleIgnoreWarnings.bind(this);\n        this.labelTimeout = null;\n        this.state = {\n            shouldIgnoreWarnings: false,\n            shouldShowDone: false,\n            shouldShowDialog: false,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (commitIsDone(prevProps, this.props)) {\n            this.showDoneLabel(DONE_MESSAGE_TIMEOUT);\n            this.hideDialog();\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.labelTimeout);\n        this.labelTimeout = null;\n    }\n\n    showDoneLabel(msecs) {\n        this.setState({ shouldShowDone: true });\n        this.labelTimeout = setTimeout(() => {\n            this.hideDoneLabel();\n        }, msecs);\n    }\n\n    hideDoneLabel() {\n        this.setState({ shouldShowDone: false });\n    }\n\n    showDialog() {\n        this.setState({ shouldShowDialog: true });\n    }\n\n    hideDialog() {\n        this.setState({ shouldShowDialog: false });\n    }\n\n    parseCommitFlags() {\n        const { commitOptions } = this.props;\n        let activeOptions = Object.keys(commitOptions).filter(\n            key => !!commitOptions[key]);\n        if (!commitOptions['commit-queue']) {\n            activeOptions = activeOptions.filter(\n                option => !option.startsWith('commit-queue'),\n            );\n        }\n        return activeOptions.map((key) => {\n            const value = commitOptions[key];\n            return typeof value === 'string' ? `${key}=${value}` : key;\n        });\n    }\n\n    toggleIgnoreWarnings() {\n        const { shouldIgnoreWarnings } = this.state;\n        this.setState({ shouldIgnoreWarnings: !shouldIgnoreWarnings });\n    }\n\n    render() {\n        const {\n            commitInProgress,\n            emptyTransaction,\n            thIsBusy,\n            th,\n            valid,\n            onCommit,\n            warnings,\n        } = this.props;\n        const {\n            shouldIgnoreWarnings,\n            shouldShowDialog,\n        } = this.state;\n        const enableCommit = Number.isFinite(th)\n            && valid\n            && !emptyTransaction\n            && !thIsBusy\n            && !commitInProgress;\n        const { shouldShowDone } = this.state;\n\n        const hasWarnings = Array.isArray(warnings) && warnings.length > 0;\n        const isOkToCommit = !commitInProgress && (!hasWarnings || shouldIgnoreWarnings);\n\n        return (\n            <div>\n                <CommitButton\n                    commitInProgress={commitInProgress}\n                    shouldShowDone={shouldShowDone}\n                    enableCommit={enableCommit}\n                    onCommit={() => this.showDialog()}\n                 />\n                {shouldShowDialog && <CommitDialog\n                    hasWarnings={hasWarnings}\n                    ignoreWarnings={shouldIgnoreWarnings}\n                    onToggleIgnoreWarnings={this.toggleIgnoreWarnings}\n                    isOkToCommit={isOkToCommit}\n                    onCommit={() => {\n                        this.hideDialog();\n                        onCommit(this.parseCommitFlags());\n                    }}\n                    onCancel={() => this.hideDialog()}\n                />}\n            </div>\n        );\n    }\n}\n\nCommitButtonContainer.defaultProps = {\n    commitInProgress: undefined,\n    commitOptions: {},\n    emptyTransaction: undefined,\n    thIsBusy: undefined,\n    extraStyles: {},\n    th: undefined,\n    valid: undefined,\n};\n\nCommitButtonContainer.propTypes = {\n    commitInProgress: PropTypes.bool,\n    commitOptions: CommitOptionsType,\n    emptyTransaction: PropTypes.bool,\n    thIsBusy: PropTypes.bool,\n    onCommit: PropTypes.func,\n    th: PropTypes.number,\n    valid: PropTypes.bool,\n    warnings: PropTypes.arrayOf(PropTypes.shape()),\n};\n\nconst mapStateToProps = state => ({\n    commitInProgress: selectCommitInProgress(state),\n    commitOptions: selectCommitOptions(state),\n    emptyTransaction: transactionIsEmpty(state),\n    thIsBusy: selectThIsBusy(state),\n    th: selectReadWrite(state),\n    valid: selectValid(state),\n    warnings: selectWarnings(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onCommit(flags) {\n        dispatch(validateAndCommit({ flags }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitButtonContainer);\n\nexport {\n    CommitButtonContainer as _CommitButtonContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    DONE_MESSAGE_TIMEOUT as _DONE_MESSAGE_TIMEOUT,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { translate, Messages } from 'modules/intl';\nimport style from './CommitButtonStyles';\n\nconst CommitButton = ({ commitInProgress, enableCommit, onCommit, shouldShowDone }) => (\n    (<div style={style.wrapper}>\n        <button\n            disabled={!enableCommit}\n            style={enableCommit ? defaultStyles.button : defaultStyles.buttonDisabled}\n            onClick={onCommit}\n            data-handle=\"commitButton\"\n        >\n            <div style={style.label}>\n                {(shouldShowDone || !commitInProgress) &&\n                <div>{shouldShowDone ? translate(Messages.COMMITMANAGER.COMMIT_BUTTON_DONE) :\n            translate(Messages.COMMITMANAGER.COMMIT_BUTTON_COMMIT)}</div>}\n                {commitInProgress &&\n                <div style={style.loader}><Loader color={defaultStyles.color3} /></div>}\n            </div>\n        </button>\n    </div>)\n);\n\nCommitButton.propTypes = {\n    commitInProgress: PropTypes.bool,\n    shouldShowDone: PropTypes.bool,\n    enableCommit: PropTypes.bool,\n    onCommit: PropTypes.func.isRequired,\n};\n\nexport default CommitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport style from './CommitDialogStyles';\nimport CommitOptionsContainer from './CommitOptionsContainer';\nimport IgnoreWarnings from './IgnoreWarnings';\n\nconst CommitDialog = ({\n    commitInProgress,\n    isOkToCommit,\n    hasWarnings,\n    ignoreWarnings,\n    onCancel,\n    onCommit,\n    onToggleIgnoreWarnings,\n}) => (\n    <ModalConfirm\n        confirmTitle=\"Yes, commit\"\n        onConfirm={onCommit}\n        onCancel={onCancel}\n        formIsValid={isOkToCommit}>\n        <div style={style.header}>Commit changes to NSO?</div>\n        {commitInProgress || <CommitOptionsContainer />}\n        {hasWarnings && <IgnoreWarnings\n            ignoreWarnings={ignoreWarnings}\n            onToggleIgnoreWarnings={onToggleIgnoreWarnings}\n        />}\n        {commitInProgress && <Loader />}\n    </ModalConfirm>\n);\n\nCommitDialog.propTypes = {\n    commitInProgress: PropTypes.bool,\n    hasWarnings: PropTypes.bool,\n    ignoreWarnings: PropTypes.bool,\n    isOkToCommit: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onCommit: PropTypes.func.isRequired,\n    onToggleIgnoreWarnings: PropTypes.func,\n};\n\nexport default CommitDialog;\n","import { connect } from 'react-redux';\nimport { setCommmitOptionsAction } from 'modules/transactions/actions';\nimport { selectCommitOptions } from 'modules/transactions/selectors';\nimport CommitOptions from './CommitOptions';\n\nconst mapStateToProps = state => ({ commitOptions: selectCommitOptions(state) });\n\nconst mapDispatchToProps = dispatch => ({\n    onSetCommmitOption(commitOption, value) {\n        dispatch(setCommmitOptionsAction(commitOption, value));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitOptions);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditSymbol = ({ color, active }) =>\n    (<svg x=\"0px\" y=\"0px\" viewBox=\"0 0 36 24\">\n        <path\n            id=\"pen\"\n            fill={color}\n            d=\"M14.92,4.01l4.88,4.91L7.45,21.33l-4.88-4.91L14.92,4.01z M23.51,2.82l-2.18-2.19\n        c-0.84-0.85-2.21-0.85-3.05,0l-2.09,2.1l4.88,4.91l2.43-2.44C24.16,4.54,24.16,3.48,23.51,2.82z M0.01,23.32\n        c-0.09,0.4,0.27,0.76,0.67,0.66l5.44-1.33l-4.88-4.91L0.01,23.32z\" />\n        {active || <path\n            id=\"down\"\n            fill={color}\n            d=\"M25.44,12.37l0.08-0.08c0.46-0.43,1.17-0.43,1.63,0l3.38,3.14l3.38-3.14\n        c0.46-0.43,1.17-0.43,1.63,0l0.08,0.08c0.46,0.43,0.49,1.15,0.06,1.61c-0.02,0.02-0.04,0.04-0.06,0.06l-4.28,3.98\n        c-0.46,0.43-1.17,0.43-1.63,0l-4.28-3.98c-0.46-0.43-0.49-1.15-0.06-1.61C25.4,12.41,25.41,12.39,25.44,12.37z\" />}\n        {active && <path\n            id=\"down_1_\"\n            fill={color}\n            d=\"M35.64,17.95l-0.08,0.08c-0.46,0.43-1.17,0.43-1.63,0l-3.38-3.14l-3.38,3.14\n        c-0.46,0.43-1.17,0.43-1.63,0l-0.08-0.08c-0.46-0.43-0.49-1.15-0.06-1.61c0.02-0.02,0.04-0.04,0.06-0.06l4.28-3.98\n        c0.46-0.43,1.17-0.43,1.63,0l4.28,3.98c0.46,0.43,0.49,1.15,0.06,1.61C35.68,17.91,35.66,17.93,35.64,17.95z\" />}\n    </svg>\n    );\n\nEditSymbol.propTypes = {\n    color: PropTypes.string,\n    active: PropTypes.bool,\n};\n\nEditSymbol.defaultProps = {\n    color: 'red',\n};\n\nexport default EditSymbol;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport style from './CommitDialogStyles';\n\nconst IgnoreWarnings = ({\n    ignoreWarnings,\n    onToggleIgnoreWarnings,\n}) => (<div style={style.ignoreContainer}>\n    <div style={style.ignoreDescription}>This transaction contains warnings.</div>\n    <CheckBox\n        name=\"ignore-commit-warnings\"\n        onSetValue={onToggleIgnoreWarnings}\n        value={ignoreWarnings}\n        >\n        <span style={style.ignoreLabel}>Ignore warnings</span>\n    </CheckBox>\n</div>);\n\n\nIgnoreWarnings.defaultProps = {\n    ignoreWarnings: undefined,\n    onToggleIgnoreWarnings: () => null,\n};\n\nIgnoreWarnings.propTypes = {\n    ignoreWarnings: PropTypes.bool,\n    onToggleIgnoreWarnings: PropTypes.func,\n};\n\n\nexport default IgnoreWarnings;\n","import { connect } from 'react-redux';\nimport { deleteTrans } from 'modules/transactions/actions';\nimport {\n    selectReadWrite,\n    transactionIsEmpty,\n    selectThIsBusy,\n} from 'modules/transactions/selectors';\nimport RevertButton from './RevertButton';\n\nconst mapStateToProps = (state) => {\n    const th = selectReadWrite(state);\n    const enableRevert = th !== undefined && !selectThIsBusy(state) && !transactionIsEmpty(state);\n    return { enableRevert, th };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRevert(th) {\n        dispatch(deleteTrans(th));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RevertButton);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport modalStyles from '@webui-one/components/Modal/ModalStyles';\nimport { Messages, translate } from 'modules/intl';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './RevertButtonStyles';\n\nclass RevertButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openModal = this.openModal.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.state = {\n            showModal: false,\n        };\n    }\n    onConfirm() {\n        const { th, onRevert } = this.props;\n        onRevert(th);\n    }\n\n    closeModal() {\n        this.setState({ showModal: false });\n    }\n\n    openModal() {\n        this.setState({ showModal: true });\n    }\n\n    render() {\n        const { enableRevert } = this.props;\n        return (\n            <div style={style.container}>\n                <ModalConfirm\n                    shouldRender={this.state.showModal}\n                    onConfirm={this.onConfirm}\n                    formIsValid\n                    onRequestClose={this.closeModal}\n                >\n                    <div style={modalStyles.header}>\n                        {translate(Messages.COMMITMANAGER.REVERTBUTTON_CONFIRM_TITLE)}\n                    </div>\n                    <div style={modalStyles.bread}>\n                        {translate(Messages.COMMITMANAGER.REVERTBUTTON_CONFIRM_BODY)}\n                    </div>\n                </ModalConfirm>\n                <button\n                    disabled={!enableRevert}\n                    style={enableRevert ? defaultStyles.button2 : defaultStyles.button2Disabled}\n                    onClick={this.openModal}\n                    onMouseDown={this.showTooltip}\n                    onMouseUp={this.hideTooltip}\n                    onMouseEnter={this.showTooltip}\n                    onMouseLeave={this.hideTooltip}\n                    data-handle=\"revert\"\n                     >Revert</button>\n            </div>\n        );\n    }\n}\n\nRevertButton.propTypes = {\n    enableRevert: PropTypes.bool,\n    th: PropTypes.number,\n    onRevert: PropTypes.func,\n};\n\nexport default RevertButton;\n","export default{\n    container: {\n        alignSelf: 'center',\n    },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport PropTypes from 'prop-types';\n\nimport {\n    selectLoadInProgress,\n} from 'modules/transactions/selectors';\nimport { Messages, translate } from 'modules/intl';\n\nimport LoadButton from './LoadButton';\nimport LoadFromPlainTextContainer from './LoadFromPlainTextContainer';\nimport LoadFromFileContainer from './LoadFromFileContainer';\nimport SaveToFileContainer from './SaveToFileContainer';\nimport RollbackContainer from './RollbackContainer';\n\nconst buildRollbacks = (registerLoad, setLoadButtonEnabled) => (\n    <RollbackContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nconst buildFiles = (registerLoad, setLoadButtonEnabled) => (\n    <LoadFromFileContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\n\nconst buildText = (registerLoad, setLoadButtonEnabled) => (\n    <LoadFromPlainTextContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nconst buildSave = (registerLoad, setLoadButtonEnabled) => (\n    <SaveToFileContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nclass LoadButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTab = this.onChangeTab.bind(this);\n        this.onLoad = this.onLoad.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.registerLoad = this.registerLoad.bind(this);\n        this.setLoadButtonEnabled = this.setLoadButtonEnabled.bind(this);\n\n        this.state = {\n            activePageIndex: 0,\n            doLoad: null,\n            enableLoadButton: true,\n            showModal: false,\n        };\n    }\n\n    onLoad() {\n        const { doLoad } = this.state;\n        if (isFunction(doLoad)) {\n            const prom = doLoad();\n            if (prom.then) {\n                return prom.then((res) => {\n                    if (!res || !res.error) {\n                        this.closeModal();\n                    }\n                });\n            }\n            this.closeModal();\n        }\n        return Promise.resolve();\n    }\n\n    onChangeTab(activePageIndex) {\n        this.setState({ activePageIndex });\n    }\n\n    setLoadButtonEnabled(enableLoadButton) {\n        this.setState({ enableLoadButton });\n    }\n\n    closeModal() {\n        this.setState({ showModal: false });\n    }\n\n    openModal() {\n        this.setState({ showModal: true });\n    }\n\n    registerLoad(doLoad) {\n        this.setState({ doLoad });\n    }\n\n    buildPages() {\n        if (!this.pages) {\n            this.pages = [\n                {\n                    name: 'rollbacks',\n                    page: buildRollbacks(this.registerLoad, this.setLoadButtonEnabled),\n                    tab: 'Rollbacks',\n                },\n                {\n                    name: 'files',\n                    page: buildFiles(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Files',\n                },\n                {\n                    name: 'paste',\n                    page: buildText(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Paste',\n                },\n                {\n                    confirmButtonTitle: translate(Messages.MODAL.OK_BUTTON_TITLE),\n                    name: 'save',\n                    page: buildSave(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Save',\n                },\n            ];\n        }\n        return this.pages;\n    }\n\n    render() {\n        const {\n            loadInProgress,\n        } = this.props;\n        const {\n            activePageIndex,\n            enableLoadButton,\n            showModal,\n        } = this.state;\n        const pages = this.buildPages();\n        const enable = !!enableLoadButton && !loadInProgress;\n        return (\n            <LoadButton\n                activePageIndex={activePageIndex}\n                closeModal={this.closeModal}\n                enableModal\n                enableLoadButton={enable}\n                loadInProgress={loadInProgress}\n                onChangeTab={this.onChangeTab}\n                onLoad={this.onLoad}\n                openModal={this.openModal}\n                pages={pages}\n                showModal={showModal}\n            />\n        );\n    }\n}\n\nLoadButtonContainer.propTypes = {\n    loadInProgress: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n    loadInProgress: selectLoadInProgress(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    undefined,\n)(LoadButtonContainer);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    LoadButtonContainer as _LoadButtonContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport TabDeck from '@webui-one/components/TabDeck/TabDeck';\nimport { isString } from '@webui-one/core/utils/string';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { Messages, translate } from 'modules/intl';\nimport style from './LoadStyles';\n\nconst getConfirmButtonTitle = (pages, activePageIndex) => {\n    const customTitle = Array.isArray(pages) &&\n        pages[activePageIndex] &&\n        pages[activePageIndex].confirmButtonTitle;\n    return isString(customTitle)\n        ? customTitle\n        : translate(Messages.MODAL.LOAD_BUTTON_TITLE);\n};\n\nconst LoadButton = ({\n    activePageIndex,\n    closeModal,\n    enableModal,\n    enableLoadButton,\n    loadInProgress,\n    onChangeTab,\n    onLoad,\n    openModal,\n    showModal,\n    pages,\n}) => {\n    const confirmTitle = loadInProgress\n        ? (<Loader color={defaultStyles.color3} extraStyle={style.loadingDots} />)\n        : getConfirmButtonTitle(pages, activePageIndex);\n    return (\n        <div style={style.loadContainerStyle}>\n            <ModalConfirm\n                confirmTitle={confirmTitle}\n                title={translate(Messages.COMMITMANAGER.ROLLBACKBUTTON_DIALOG_TITLE)}\n                shouldRender={showModal}\n                onConfirm={onLoad}\n                formIsValid={!!enableLoadButton}\n                onCancel={closeModal}\n            >\n                <TabDeck\n                    extraStyle={style.tabDeck}\n                    onChangeTab={onChangeTab}\n                    tabs={pages}\n                    defaultIndex={activePageIndex}\n                />\n            </ModalConfirm>\n            <button\n                data-handle=\"show-load-save-modal-button\"\n                disabled={!enableModal}\n                style={defaultStyles.button2}\n                onClick={openModal}\n            >Load/Save</button>\n        </div>\n    );\n};\n\nLoadButton.propTypes = {\n    activePageIndex: PropTypes.number,\n    closeModal: PropTypes.func,\n    enableModal: PropTypes.bool,\n    enableLoadButton: PropTypes.bool,\n    loadInProgress: PropTypes.bool,\n    onChangeTab: PropTypes.func,\n    onLoad: PropTypes.func,\n    openModal: PropTypes.func,\n    pages: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            page: PropTypes.element,\n        }),\n    ),\n    showModal: PropTypes.bool,\n};\n\nLoadButton.defaultProps = {\n    activePageIndex: 0,\n};\n\nexport default LoadButton;\n\nexport {\n    getConfirmButtonTitle as _getConfirmButtonTitle,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { isJson, isNonEmptyString, isXml } from '@webui-one/core/utils/string';\nimport { loadText } from 'modules/transactions/actions';\nimport { selectLoadFromTextError } from 'modules/transactions/selectors';\nimport { translate, Messages } from 'modules/intl';\nimport LoadFromPlainText from './LoadFromPlainText';\n\nconst validFormats = ['json', 'xml'];\n\nconst isValidFormat = format => validFormats.includes(format);\nconst isValidString = str => isNonEmptyString(str);\nconst shouldEnableLoadButton = (format, value) => (\n    isValidFormat(format) && isValidString(value)\n);\n\nfunction guessFormat(value) {\n    if (isJson(value)) {\n        return 'json';\n    }\n    if (isXml(value)) {\n        return 'xml';\n    }\n    return '';\n}\n\nconst loadErrorMessage = translate(Messages.COMMITMANAGER.LOAD_ERROR_MESSAGE);\nconst formatErrorMessage = 'Text is not valid JSON or XML.';\n\nclass LoadFromPlainTextContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.doLoad = this.doLoad.bind(this);\n        this.state = {\n            errorText: '',\n            format: '',\n            value: '',\n        };\n    }\n\n    componentDidMount() {\n        const { format, value } = this.state;\n        const { registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(shouldEnableLoadButton(format, value));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { loadFromTextError } = this.props;\n        const { loadFromTextError: prevError } = prevProps;\n        if (loadFromTextError && loadFromTextError !== prevError) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                errorText: loadErrorMessage,\n            });\n        }\n    }\n\n    onBlur(e) {\n        const value = e.target.value;\n        const format = guessFormat(value);\n        const { setLoadButtonEnabled } = this.props;\n        const errorText = format !== '' ? '' : formatErrorMessage;\n        this.setState({ errorText, format, value });\n        setLoadButtonEnabled(true);\n        setLoadButtonEnabled(shouldEnableLoadButton(format, value));\n    }\n\n    onChange(e) {\n        const value = e.target.value;\n        this.setState({ value });\n    }\n\n    doLoad() {\n        const { onLoadText } = this.props;\n        const { format, value } = this.state;\n        if (shouldEnableLoadButton(format, value)) {\n            return onLoadText(value, format);\n        }\n        return Promise.resolve();\n    }\n\n    render() {\n        const { errorText, format, value } = this.state;\n        return (\n            <LoadFromPlainText\n                errorText={errorText}\n                format={format}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                value={value}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadText(data, format) {\n        return dispatch(loadText({ data, format }));\n    },\n});\n\nLoadFromPlainTextContainer.propTypes = {\n    loadFromTextError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    onLoadText: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func.isRequired,\n    setLoadButtonEnabled: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    loadFromTextError: selectLoadFromTextError(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LoadFromPlainTextContainer);\n\nexport {\n    shouldEnableLoadButton,\n    formatErrorMessage,\n    isValidFormat,\n    isValidString,\n    loadErrorMessage,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    LoadFromPlainTextContainer as _LoadFromPlainTextContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './LoadStyles';\n\nconst LoadFromPlainText = ({\n    errorText,\n    onBlur,\n    onChange,\n    value,\n}) => (\n    <div style={styles.container}>\n        <div style={styles.plainContainer}>\n            <div data-handle=\"transaction-data\" style={styles.textAreaContainer}>\n                <textarea\n                    rows=\"5\"\n                    onBlur={onBlur}\n                    onChange={onChange}\n                    placeholder=\"Paste your transaction data here.\"\n                    style={styles.textAreaStyle}\n                    value={value}\n                />\n            </div>\n        </div>\n        {errorText && <div data-handle=\"load-from-text-error-message\" style={styles.errorMessage}>\n            { errorText }\n        </div>}\n    </div>\n);\n\nLoadFromPlainText.propTypes = {\n    errorText: PropTypes.string,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n};\nexport default LoadFromPlainText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport { translate, Messages } from 'modules/intl';\n\nimport { loadFile } from 'modules/transactions/actions';\nimport { selectLoadFromFileError } from 'modules/transactions/selectors';\n\nimport LoadFromFile from './LoadFromFile';\n\n// NOTE(dbildstr): only allow preview of 5 MiB big files for now\nconst MAX_PREVIEW_SIZE = 5 * 1024 * 1024;\n\nconst hasFiles = files => !!(Array.isArray(files) && files.length > 0);\n\nconst getExtensionFromFilename = (file) => {\n    const match = /^(.*)\\.(.*)$/.exec(file.name);\n    const extension = match && match.length > 2 ? match[2] : 'txt';\n    return extension;\n};\n\nconst getSelectedFiles = files => (\n    hasFiles(files) ? Array.prototype.map.call(files, f => f.name) : []\n);\n\nconst browserSupportsFileAPI = () => isFunction(FileReader);\n\nclass LoadFromFileContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doLoad = this.doLoad.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.files = [];\n\n        this.state = {\n            error: undefined,\n            previewText: '',\n            files: undefined,\n            format: 'xml',\n        };\n    }\n\n    componentDidMount() {\n        const { registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(false);\n    }\n\n    onChange(evt) {\n        this.fi = evt.target;\n        this.files = Array.prototype.slice.call(this.fi.files);\n        this.setState({ files: getSelectedFiles(this.files) });\n        this.props.setLoadButtonEnabled(hasFiles(this.files));\n        this.updatePreview(this.files);\n    }\n\n    updatePreview(files) {\n        if (!hasFiles(files)) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_NO_ISSUES,\n                ),\n            });\n            return;\n        }\n        const theFile = files[0];\n\n        if (theFile.size > MAX_PREVIEW_SIZE) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_FILE_TO_BIG,\n                ),\n            });\n            return;\n        }\n\n        if (!browserSupportsFileAPI()) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_BROWSER_NOT_SUPPORTED,\n                ),\n            });\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({ previewText: reader.result });\n        };\n        reader.onerror = () => {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_FAILED_TO_READ_FILE,\n                ),\n            });\n        };\n        reader.readAsText(theFile);\n    }\n\n    doLoad() {\n        const { onLoadFile } = this.props;\n        this.setState({ loadFileError: null });\n        if (hasFiles(this.files)) {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                const theFile = this.files[0];\n                const extension = getExtensionFromFilename(theFile);\n                reader.onload = () => {\n                    resolve({ result: reader.result, extension });\n                };\n                reader.onerror = error => reject(new Error(error));\n                reader.readAsBinaryString(theFile);\n            }).then(res => (\n                onLoadFile(res.result, res.extension)\n            )).catch((err) => {\n                this.setState({ loadFileError: err });\n                return err;\n            });\n        }\n        return Promise.resolve();\n    }\n\n    render() {\n        const { loadFromFileError } = this.props;\n        const { loadFileError, files, previewText } = this.state;\n        const errorText = (loadFromFileError || loadFileError)\n            ? translate(Messages.COMMITMANAGER.LOAD_ERROR_MESSAGE)\n            : null;\n        return (\n            <LoadFromFile\n                onChange={this.onChange}\n                previewText={previewText}\n                selectedFiles={files}\n                errorText={errorText}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadFile(data, format) {\n        return dispatch(loadFile({ data, format }));\n    },\n});\n\nLoadFromFileContainer.propTypes = {\n    loadFromFileError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    onLoadFile: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func,\n    setLoadButtonEnabled: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n    loadFromFileError: selectLoadFromFileError(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LoadFromFileContainer);\n\nexport {\n    MAX_PREVIEW_SIZE,\n    hasFiles as _hasFiles,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    LoadFromFileContainer as _LoadFromFileContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { translate, Messages } from 'modules/intl';\nimport styles from './LoadStyles';\n\nconst renderFiles = (selectedFiles) => {\n    if (!Array.isArray(selectedFiles) || selectedFiles.length < 1) {\n        return null;\n    }\n    return (\n        <div data-handle=\"selected-files\" style={styles.selectedFilesStyle}>\n            {selectedFiles.map((filename, index) => (\n                <div key={`${index}`}>{filename}</div>\n            ))}\n        </div>\n    );\n};\n\nclass LoadFromFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.fi.click();\n    }\n\n    render() {\n        const { errorText, selectedFiles, onChange, previewText } = this.props;\n        return (\n            <div style={styles.container}>\n                <div style={styles.fileUpload}>\n                    <button\n                        data-handle=\"load-from-file-selector\"\n                        onClick={this.onClick}\n                        style={defaultStyles.button}\n                    >{translate(Messages.COMMITMANAGER.CHOOSE_FILE_BUTTON_TITLE)}</button>\n                    <input\n                        style={styles.fileSelector}\n                        onChange={onChange}\n                        ref={(r) => { this.fi = r; }}\n                        type=\"file\"\n                    />\n                </div>\n                {renderFiles(selectedFiles)}\n                <div style={styles.previewTextAreaContainer}>\n                    <textarea\n                        disabled\n                        rows=\"5\"\n                        onChange={onChange}\n                        style={styles.textAreaStyle}\n                        value={previewText}\n                    />\n                </div>\n                {errorText && <div\n                    data-handle=\"load-from-file-error-text\"\n                    style={styles.errorMessage}\n                >\n                    { errorText }\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default LoadFromFile;\nLoadFromFile.propTypes = {\n    errorText: PropTypes.string,\n    onChange: PropTypes.func,\n    previewText: PropTypes.string,\n    selectedFiles: PropTypes.arrayOf(PropTypes.string),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { translate, Messages } from 'modules/intl';\nimport { outputToFile } from '@webui-one/core/utils/browser';\nimport { ensureConfigNode } from '@webui-one/core/utils/xml';\n\nimport { saveFile } from 'modules/transactions/actions';\nimport {\n    selectSaveToFileError,\n    transactionIsEmpty,\n    selectValid,\n} from 'modules/transactions/selectors';\n\nimport SaveToFile from './SaveToFile';\n\nconst mimeTypes = {\n    json: 'application/json',\n    xml: 'application/xml',\n};\n\nconst getMimeType = format => (\n    Object.keys(mimeTypes).includes(format) ? mimeTypes[format] : 'text/plain'\n);\n\nconst validFileEndings = ['json', 'xml'];\nconst getFileEnding = format => (\n    validFileEndings.includes(format) ? format : 'txt'\n);\n\nconst getData = (timestamp, blobdata, fileending) => ({\n    filename: `transaction-diff.${fileending}`,\n    href: URL.createObjectURL(blobdata),\n    timestamp,\n});\n\nconst saveDataToFile = format => (res) => {\n    const filedata = ensureConfigNode(res.result.local_node.data);\n    const type = getMimeType(format);\n    const fileending = getFileEnding(format);\n    const blobdata = new Blob([filedata || ''], { type });\n    const timestamp = Date.now();\n    const data = getData(timestamp, blobdata, fileending);\n    outputToFile(data);\n};\n\nclass SaveToFileContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doSave = this.doSave.bind(this);\n        this.onGenerateFile = this.onGenerateFile.bind(this);\n        this.files = [];\n\n        this.state = {\n            error: undefined,\n            previewText: '',\n            files: undefined,\n            format: 'xml',\n            saving: false,\n        };\n    }\n\n    componentDidMount() {\n        const { emptyTransaction, registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doSave);\n        setLoadButtonEnabled(!emptyTransaction);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { emptyTransaction, setLoadButtonEnabled } = this.props;\n        if (emptyTransaction !== prevProps.emptyTransaction) {\n            setLoadButtonEnabled(!emptyTransaction);\n        }\n    }\n\n    onGenerateFile() {\n        const { emptyTransaction, onSaveFile, validTrans } = this.props;\n        const format = 'xml';\n\n        if (emptyTransaction || !validTrans) {\n            return Promise.resolve();\n        }\n\n        return this.setAsyncState({ saving: true })\n            .then(() => onSaveFile(format))\n            .then(saveDataToFile(format))\n            .then(() => this.setAsyncState({ saving: false }));\n    }\n\n    setAsyncState(newState) {\n        return new Promise(resolve => this.setState(newState, () => resolve()));\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    doSave() {\n        return Promise.resolve();\n    }\n\n    render() {\n        const {\n            emptyTransaction,\n            saveToFileError,\n            validTrans,\n        } = this.props;\n        const { loadFileError, previewText, data, saving } = this.state;\n        const errorText = (saveToFileError || loadFileError)\n            ? translate(Messages.COMMITMANAGER.LOAD_ERROR_MESSAGE)\n            : null;\n        const disableFileSelector = saving || !validTrans || !!emptyTransaction;\n        return (\n            <SaveToFile\n                disableFileSelector={disableFileSelector}\n                onGenerateFile={this.onGenerateFile}\n                previewText={previewText}\n                selectedFiles={data}\n                errorText={errorText}\n                saving={saving}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSaveFile(value, type) {\n        return dispatch(saveFile(value, type));\n    },\n});\n\nSaveToFileContainer.propTypes = {\n    emptyTransaction: PropTypes.bool,\n    onSaveFile: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func,\n    saveToFileError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    setLoadButtonEnabled: PropTypes.func,\n    validTrans: PropTypes.bool,\n};\nSaveToFileContainer.defaultProps = {\n    emptyTransaction: true,\n};\n\nconst mapStateToProps = state => ({\n    emptyTransaction: transactionIsEmpty(state),\n    saveToFileError: selectSaveToFileError(state),\n    validTrans: selectValid(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SaveToFileContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    SaveToFileContainer as _SaveToFileContainer,\n};\n","/* eslint-disable import/prefer-default-export */\n\nexport const ensureConfigNode = data => (\n    !(data.startsWith('<config>') && data.endsWith('</config>'))\n        ? `<config>${data}</config>`\n        : data\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { translate, Messages } from 'modules/intl';\nimport styles from './LoadStyles';\nimport style from './CommitButtonStyles';\n\nconst SaveToFile = ({\n    disableFileSelector,\n    errorText,\n    onGenerateFile,\n    saving,\n}) => {\n    const buttonStyle = !disableFileSelector\n        ? styles.generateFileButton\n        : styles.generateFileButtonDisabled;\n\n    const btnTitle = saving\n        ? (<div style={style.loader}><Loader color={defaultStyles.color3} /></div>)\n        : translate(Messages.COMMITMANAGER.GENERATE_FILE_BUTTON_TITLE);\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.fileUpload}>\n                <button\n                    data-handle=\"save-to-file-generator\"\n                    onClick={onGenerateFile}\n                    style={buttonStyle}\n                    disabled={!!disableFileSelector}\n                >{btnTitle}</button>\n            </div>\n            {errorText && <div\n                data-handle=\"save-to-file-error-text\"\n                style={styles.errorMessage}\n            >\n                { errorText }\n            </div>}\n        </div>\n    );\n};\n\nexport default SaveToFile;\nSaveToFile.propTypes = {\n    disableFileSelector: PropTypes.bool,\n    errorText: PropTypes.string,\n    onGenerateFile: PropTypes.func,\n    saving: PropTypes.bool,\n};\n\nSaveToFile.defaultProps = {\n    disableFileSelector: true,\n    saving: false,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n    selectRollbacks,\n} from 'modules/transactions/selectors';\nimport {\n    getRollbacks,\n    loadRollback,\n    readRollback,\n} from 'modules/transactions/actions';\n\nimport Rollback from './Rollback';\n\nclass RollbackContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doLoad = this.doLoad.bind(this);\n        this.selectItem = this.selectItem.bind(this);\n        this.onSelective = this.onSelective.bind(this);\n        this.onChangeKeypath = this.onChangeKeypath.bind(this);\n\n        this.state = {\n            selectedIndex: -1,\n            selective: false,\n            keypath: '',\n        };\n    }\n\n    // eslint-disable-next-line camelcase, react/sort-comp\n    UNSAFE_componentWillMount() {\n        const { onRollbacks, registerLoad, setLoadButtonEnabled } = this.props;\n        const { selectedIndex } = this.state;\n        onRollbacks();\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(selectedIndex !== -1);\n    }\n\n    onChangeKeypath(e) {\n        const { value } = e.target;\n        this.setState({ keypath: value });\n    }\n\n    onSelective(selective) {\n        this.setState({ selective });\n    }\n\n    doLoad() {\n        const { keypath, selectedIndex, selective } = this.state;\n        const { onLoadRollback, rollbacks } = this.props;\n        return onLoadRollback(\n            rollbacks[selectedIndex].nr,\n            keypath || undefined,\n            selective || undefined,\n        );\n    }\n\n    selectItem(index) {\n        const { onReadRollback, rollbacks, setLoadButtonEnabled } = this.props;\n        const { selectedIndex: currentIndex } = this.state;\n        const selectedIndex = currentIndex !== index ? index : -1;\n        this.setState({ selectedIndex });\n        if (selectedIndex !== -1 && typeof rollbacks[selectedIndex].rollback !== 'string') {\n            onReadRollback(rollbacks[selectedIndex].nr);\n        }\n        setLoadButtonEnabled(selectedIndex !== -1);\n    }\n\n    render() {\n        const { rollbacks } = this.props;\n        const { selective, selectedIndex } = this.state;\n        return (\n            <Rollback\n                onChangeKeypath={this.onChangeKeypath}\n                rollbacks={rollbacks}\n                onSelective={this.onSelective}\n                selectItem={this.selectItem}\n                selective={selective}\n                selectedIndex={selectedIndex}\n            />\n        );\n    }\n}\n\nRollbackContainer.propTypes = {\n    onRollbacks: PropTypes.func,\n    onLoadRollback: PropTypes.func,\n    onReadRollback: PropTypes.func,\n    registerLoad: PropTypes.func,\n    setLoadButtonEnabled: PropTypes.func,\n    rollbacks: PropTypes.arrayOf(\n        PropTypes.shape({\n            comment: PropTypes.string,\n            creator: PropTypes.string,\n            date: PropTypes.string,\n            filename: PropTypes.string,\n            label: PropTypes.string,\n            nr: PropTypes.number,\n            rollback: PropTypes.string,\n            via: PropTypes.string,\n        }),\n    ),\n};\nconst mapStateToProps = state => ({\n    rollbacks: selectRollbacks(state) || [],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRollbacks() {\n        dispatch(getRollbacks());\n    },\n    onLoadRollback(nr, keypath, selective) {\n        return dispatch(loadRollback({ nr, keypath, selective }));\n    },\n    onReadRollback(nr) {\n        dispatch(readRollback(nr));\n    },\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RollbackContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    RollbackContainer as _RollbackContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport style from './RollbackStyles';\n\n// FIXME(dbildstr): fix no-static-element-interactions warning\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nconst buildRollback = (rollback, index, onSelectItem, selectedIndex) => (\n    <div\n        key={`${rollback.date}-${rollback.filename}`}\n        style={selectedIndex === index ? style.selectedRow : style.row}\n        onClick={() => { onSelectItem(index, rollback); }}\n        >\n        <div>\n            <span>\n                {rollback.date} - {rollback.creator} / {rollback.via}\n            </span>\n        </div>\n    </div>\n);\n/* eslint-enable jsx-a11y/no-static-element-interactions */\nconst getRollbackFile = (selectedIndex, rollbacks) => (\n    selectedIndex !== -1 && selectedIndex < rollbacks.length\n        ? rollbacks[selectedIndex].rollback\n        : ''\n);\n\nconst getRollbackList = (rollbacks, selectedIndex, selectItem) => (\n    rollbacks.length > 0\n        ? rollbacks.map((rollback, index) => (\n            buildRollback(rollback, index, selectItem, selectedIndex)\n        ))\n        : <div>No rollbacks found</div>\n);\n\nconst Rollback = ({\n    rollbacks,\n    onChangeKeypath,\n    onSelective,\n    selectItem,\n    selective,\n    selectedIndex,\n}) => (\n    <div>\n        <div style={style.wrapper}>\n            {getRollbackList(rollbacks, selectedIndex, selectItem)}\n        </div>\n        <div key=\"rollback-keypath\" style={style.keypathWrapper}>\n            <div style={style.keypath}>\n                <div>Keypath:</div>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Keypath\"\n                        onChange={onChangeKeypath}\n                    />\n                </div>\n            </div>\n            {selectedIndex !== -1 && <div style={style.selectiveWrapper}><CheckBox\n                onSetValue={onSelective}\n                value={selective}\n                styleName=\"listStyles\"\n                >\n                <span style={style.checkboxSpan}>Selective</span>\n            </CheckBox></div>}\n        </div>\n        <div\n            style={selectedIndex !== -1 ?\n                style.rollbackList :\n                style.rollbackList.hidden}\n        >\n            <pre>\n                {getRollbackFile(selectedIndex, rollbacks)}\n            </pre>\n        </div>\n    </div>\n);\n\nRollback.propTypes = {\n    onChangeKeypath: PropTypes.func,\n    onSelective: PropTypes.func,\n    selectItem: PropTypes.func,\n    selective: PropTypes.bool,\n    selectedIndex: PropTypes.number,\n    rollbacks: PropTypes.arrayOf(\n        PropTypes.shape({\n            comment: PropTypes.string,\n            creator: PropTypes.string,\n            date: PropTypes.string,\n            filename: PropTypes.string,\n            label: PropTypes.string,\n            nr: PropTypes.number,\n            via: PropTypes.string,\n        }),\n    ),\n};\n\nexport default Rollback;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst row = {\n    color: 'rgb(51, 121, 173)',\n    fontSize: defaultStyles.medium2,\n    cursor: 'pointer',\n    padding: '0.4rem',\n};\n\nconst rollbackList = {\n    overflow: 'auto',\n    fontFamily: defaultStyles.font3,\n    fontWeight: 'normal',\n    width: '35rem',\n};\n\nexport default {\n    rollbackButtonContainer: {\n        position: 'relative',\n    },\n    rollback: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        width: '1.8rem',\n        cursor: 'pointer',\n        padding: '0',\n    },\n    keypathWrapper: {\n        height: '4rem',\n        overflow: 'auto',\n    },\n    rollbackList: {\n        ...rollbackList,\n        height: '15rem',\n        hidden: {\n            ...rollbackList,\n            height: '0rem',\n        },\n    },\n    checkboxSpan: {\n        height: '0.8rem',\n        fontSize: '0.8rem',\n        color: 'rgb(51, 51, 51)',\n        margin: '0.5rem 0.4rem 0.4rem',\n        display: 'inline-block',\n    },\n    keypath: {\n        display: 'none',\n        padding: '0.5rem',\n        lineHeight: '1.3rem',\n    },\n    wrapper: {\n        padding: '0.2rem',\n        height: '8rem',\n        overflow: 'auto',\n        width: '35rem',\n    },\n    selectiveWrapper: {\n        padding: '0.8rem',\n        display: 'flex',\n    },\n    selectedRow: {\n        ...row,\n        backgroundColor: defaultStyles.color11,\n    },\n    row: {\n        ...row,\n    },\n};\n","import List from '@webui-one/components/ConfigRender/List/List';\nimport Pagination from '@webui-one/components/ConfigRender/List/Pagination';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { getCommitQueue } from 'modules/commitQueue/actions';\nimport { getLinkWithPath } from 'ConfigurationEditor';\nimport {\n    createSortableHeaderFactory,\n    createTextCellFactory,\n    getDefaultColumn,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport {\n    selectCommitQueueLoading,\n    selectCommitQueueOffset,\n    selectCommitQueueRows,\n    selectCommitQueueSortColumn,\n    selectCommitQueueSortOrder,\n    selectTotalNumberOfCommitQueues,\n} from 'modules/commitQueue/selectors';\nimport {\n    ageToRelativeTimeString,\n} from '@webui-one/core/utils/time';\n\nimport CommitQueueDevicesCellContainer from 'CommitManager/CommitQueueDevicesCellContainer';\nimport style from './CommitManagerStyles';\n\nconst STYLE_NAME = 'commitQueueList';\nconst CHUNK_SIZE = 10;\nconst listStyle = styles(STYLE_NAME);\nconst REFRESH_INTERVAL = 10000;\nconst createQueueLink = (text, key, rowKey) => (\n    <Link to={getLinkWithPath(rowKey)} style={{ ...listStyle.list.row.link }}>\n        {text}\n    </Link>\n);\nconst createCell = createTextCellFactory(STYLE_NAME);\nconst createAgeCell = (text, key, rowKey) =>\n    createCell(ageToRelativeTimeString(text), key, rowKey);\n\nconst createDevicesCell = (text, key, rowKey) =>\n    <CommitQueueDevicesCellContainer rowKey={rowKey} />;\n\nclass CommitQueueListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSortOrder = this.onChangeSortOrder.bind(this);\n        this.onGoToPage = this.onGoToPage.bind(this);\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    componentDidMount() {\n        const { onLoad, sortColumn, sortOrder } = this.props;\n        onLoad(CHUNK_SIZE, 1, sortColumn, sortOrder);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isLoading: wasLoading } = prevProps;\n        const { isLoading } = this.props;\n        if (wasLoading && !isLoading) {\n            this.resetRefresh();\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.refreshTimeout);\n    }\n\n    onChangeSortOrder(columnKey) {\n        const {\n            onLoad,\n            sortOrder,\n            sortColumn,\n            isLoading,\n        } = this.props;\n\n        if (!isLoading) {\n            const isDesc = columnKey === sortColumn && sortOrder !== 'descending';\n            const isNone = columnKey === sortColumn && sortOrder === 'descending';\n            let newSortorder = 'ascending';\n            let newColumnKey = columnKey;\n            if (isDesc) newSortorder = 'descending';\n            if (isNone) {\n                newSortorder = undefined;\n                newColumnKey = undefined;\n            }\n\n            onLoad(CHUNK_SIZE, 1, newColumnKey, newSortorder);\n        }\n    }\n\n    onGoToPage(offset) {\n        const {\n            isLoading,\n            onLoad,\n            sortOrder,\n            sortColumn,\n        } = this.props;\n\n        if (!isLoading) {\n            onLoad(CHUNK_SIZE, offset, sortColumn, sortOrder);\n        }\n    }\n\n    onRefresh() {\n        const { offset } = this.props;\n        this.onGoToPage(offset);\n    }\n\n    resetRefresh() {\n        clearTimeout(this.refreshTimeout);\n        this.refreshTimeout = setTimeout(this.onRefresh, REFRESH_INTERVAL);\n    }\n\n    render() {\n        const {\n            rows,\n            sortColumn,\n            sortOrder: sortOrdering,\n            isLoading,\n            totalNumberOfResults,\n            offset,\n        } = this.props;\n\n        if (!isLoading && (!rows || !rows.length)) {\n            return <div style={style.message}>No commits in queue</div>;\n        }\n\n        const sortOrder = {\n            columnKey: sortColumn,\n            isDesc: sortOrdering === 'descending',\n        };\n\n        const createHeader = createSortableHeaderFactory(this.onChangeSortOrder, sortOrder);\n\n        const columns = [{\n            ...getDefaultColumn(),\n            title: 'id',\n            key: 'id',\n            createHeader,\n            createCell: createQueueLink,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'age',\n            key: 'age',\n            createHeader,\n            createCell: createAgeCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'status',\n            key: 'status',\n            createHeader,\n            createCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'atomic',\n            key: 'is-atomic',\n            createHeader,\n            createCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'devices',\n            key: 'devices',\n            createHeader,\n            createCell: createDevicesCell,\n        }];\n\n        const additionalElements = [\n            <Pagination\n                key=\"pagination\"\n                totalNumberOfResults={totalNumberOfResults}\n                onGoToPage={this.onGoToPage}\n                chunkSize={CHUNK_SIZE}\n                offset={offset}\n            />,\n        ];\n\n        return (<List\n            columns={columns}\n            rows={rows}\n            styleName={STYLE_NAME}\n            isLoading={isLoading}\n            additionalElements={additionalElements}\n            chunkSize={CHUNK_SIZE}\n            LinkComponent={Link}\n            offset={offset}\n            shouldPadRows={false}\n            totalNumberOfResults={totalNumberOfResults}\n            shouldRetainColumnsSize={false}\n            nrOfStaticColumns={0}\n        />);\n    }\n}\n\nCommitQueueListContainer.propTypes = {\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func.isRequired,\n    rows: PropTypes.arrayOf(Object),\n    sortOrder: PropTypes.string,\n    offset: PropTypes.number,\n    sortColumn: PropTypes.string,\n    totalNumberOfResults: PropTypes.number,\n};\n\nCommitQueueListContainer.defaultProps = {};\n\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad(chunkSize, offset, columnKey, sortOrder) {\n        dispatch(getCommitQueue(chunkSize, offset, columnKey, sortOrder));\n    },\n});\n\nconst mapStateToProps = state => ({\n    isLoading: selectCommitQueueLoading(state),\n    offset: selectCommitQueueOffset(state),\n    rows: selectCommitQueueRows(state, { keyNames: ['id'] }),\n    sortColumn: selectCommitQueueSortColumn(state),\n    sortOrder: selectCommitQueueSortOrder(state),\n    totalNumberOfResults: selectTotalNumberOfCommitQueues(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitQueueListContainer);\n\n\nexport {\n    createAgeCell as _createAgeCell,\n    CommitQueueListContainer as _CommitQueueListContainer,\n    createQueueLink as _createQueueLink,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport {\n    selectQueueItemDevices,\n    selectQueueItemIsLoading,\n    getIdFromProps,\n} from 'modules/commitQueue/selectors';\nimport { getDevicesOfQueueItem } from 'modules/commitQueue/actions';\n\nimport style from './CommitQueueDevicesCellStyles';\n\nexport const CommitQueueDeviceCell = ({ device, state }) => (<div\n    key={device}\n    data-handle={`device-${device}-${state}`}\n    style={style[state]}>\n    {state === 'complete' && <span style={style.check}>✓</span>}\n    {device}\n</div>\n);\nCommitQueueDeviceCell.propTypes = {\n    device: PropTypes.string,\n    state: PropTypes.string,\n};\n\nclass CommitQueueDevicesCellContainer extends React.Component {\n    componentDidMount() {\n        const { isLoading, onLoad } = this.props;\n        if (!isLoading) {\n            onLoad();\n        }\n    }\n\n    render() {\n        const { devices, rowKey, isLoading } = this.props;\n        if (isLoading) return <Loader color=\"#000\" />;\n        return (<div data-handle={`devices-${rowKey}`}>\n            {devices.map(CommitQueueDeviceCell)}\n        </div>);\n    }\n}\n\nCommitQueueDevicesCellContainer.propTypes = {\n    devices: PropTypes.arrayOf(Object).isRequired,\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func,\n    rowKey: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    devices: selectQueueItemDevices(state, ownProps),\n    isLoading: selectQueueItemIsLoading(state, ownProps),\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onLoad() {\n        dispatch(getDevicesOfQueueItem(getIdFromProps(ownProps)));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitQueueDevicesCellContainer);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n    CommitQueueDevicesCellContainer as _CommitQueueDevicesCellContainer,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst device = {\n    borderRadius: '1rem',\n    color: defaultStyles.backgroundColor1,\n    display: 'inline-block',\n    marginRight: '0.1rem',\n    padding: '0 0.5rem',\n    lineHeight: '1.5rem',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n};\n\nexport default {\n    device: {\n        ...device,\n        backgroundColor: defaultStyles.color16,\n        borderColor: defaultStyles.color16,\n    },\n    transient: {\n        ...device,\n        backgroundColor: defaultStyles.color17,\n        borderColor: defaultStyles.color17,\n\n    },\n    wait: {\n        ...device,\n        backgroundColor: defaultStyles.color16,\n        borderColor: defaultStyles.color16,\n    },\n    complete: {\n        ...device,\n        backgroundColor: defaultStyles.backgroundColor1,\n        borderColor: defaultStyles.color6,\n        color: defaultStyles.color2,\n    },\n    failed: {\n        ...device,\n        backgroundColor: defaultStyles.color5,\n        borderColor: defaultStyles.color5,\n    },\n    check: {\n        color: defaultStyles.color10,\n    },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    selectNativeCommitDryRunResult,\n    selectReadWrite,\n    selectThIsBusy,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport {\n    nativeCommitDryRun,\n} from 'modules/transactions/actions';\n\nimport style from './CommitManagerStyles';\nimport NativeCommitDryRunTab from './NativeCommitDryRunTab';\n\nconst loader = <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nclass NativeCommitDryRunTabContainer extends React.Component {\n    componentDidMount() {\n        const {\n            th,\n            emptyTransaction,\n        } = this.props;\n        this.shouldCallDryRun = !emptyTransaction && !!th;\n        if (this.shouldCallDryRun) {\n            this.onNativeCommitDryRun();\n        }\n    }\n\n    componentDidUpdate() {\n        this.onNativeCommitDryRun();\n    }\n\n    componentWillUnmount() {\n        this.shouldCallDryRun = false;\n    }\n\n    onNativeCommitDryRun() {\n        const {\n            onNativeCommitDryRun,\n            thIsBusy,\n            th,\n        } = this.props;\n\n        if (this.shouldCallDryRun\n            && !thIsBusy\n            && th) {\n            this.shouldCallDryRun = false;\n            onNativeCommitDryRun(th);\n        }\n    }\n\n    render() {\n        const { thIsBusy, nativeResult } = this.props;\n        const { device: devices } = nativeResult;\n\n        if (thIsBusy) {\n            return loader;\n        }\n\n        return (\n            <div data-handle=\"NativeCommitDryRunContainer\">\n                <NativeCommitDryRunTab devices={devices} />\n            </div>\n        );\n    }\n}\n\nNativeCommitDryRunTabContainer.defaultProps = {\n    nativeResult: {},\n};\n\nNativeCommitDryRunTabContainer.propTypes = {\n    nativeResult: PropTypes.oneOfType([\n        PropTypes.shape(Object),\n    ]),\n    onNativeCommitDryRun: PropTypes.func,\n    thIsBusy: PropTypes.bool,\n    th: PropTypes.number,\n    emptyTransaction: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onNativeCommitDryRun(th) {\n        dispatch(nativeCommitDryRun(th));\n    },\n});\n\nconst mapStateToProps = state => ({\n    nativeResult: selectNativeCommitDryRunResult(state),\n    thIsBusy: selectThIsBusy(state),\n    th: selectReadWrite(state),\n    emptyTransaction: transactionIsEmpty(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NativeCommitDryRunTabContainer);\n\nexport {\n    NativeCommitDryRunTabContainer as _NativeCommitDryRunTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmptyArray } from '@webui-one/core/utils/array';\nimport style from './CommitManagerStyles';\n\nconst NativeCommitDryRunTab = ({ devices }) => {\n    if (isEmptyArray(devices)) {\n        return <div style={style.message}>No devices affected</div>;\n    }\n\n    return (\n        <div>\n            <div style={style.nativeCommitPane}>\n                {devices.map(({ name, data }) => (<div data-handle={`native-${name}`} key={name} >\n                    <div style={style.nativeDevice} data-handle=\"native-name\">{name}</div>\n                    <div style={style.nativeCommitDiff} data-handle=\"native-diff\">{data}</div>\n                </div>))}\n            </div>\n        </div>\n    );\n};\n\nNativeCommitDryRunTab.defaultProps = {\n    devices: [],\n};\n\nNativeCommitDryRunTab.propTypes = {\n    devices: PropTypes.arrayOf(PropTypes.shape({\n        data: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n    })),\n};\n\nexport default NativeCommitDryRunTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DataContainer from 'Common/Components/ConfigRender/DataContainer';\nimport { getTruncatedPaths } from '@webui-one/core/keypath/kp-parser';\nimport { getLinkWithPath, CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Link from '@webui-one/components/Link';\nimport { getParentPath } from '@webui-one/core/utils/path';\nimport breadcrumbStyles from 'Common/Components/Breadcrumb/BreadcrumbStyles';\nimport {\n    renderHeader,\n    renderBody,\n} from './Common';\nimport {\n    isEmpty,\n    isObject,\n} from '@webui-one/core/utils/object';\nimport {\n    isNonEmptyArray,\n} from '@webui-one/core/utils/array';\nimport style, {\n    warningStyles,\n} from './CommitManagerStyles';\n\nconst renderErrorHeader = (index, numErrors, reason) =>\n    <p style={warningStyles.errorHeader} data-handle=\"error-header\">{`${index + 1}/${numErrors}. ${reason}`}</p>;\n\nconst renderError = (error, index, arr) => {\n    if (!error.paths) {\n        return (<div key={index}>\n            {renderErrorHeader(index, arr.length, error.reason)}\n        </div>);\n    }\n    const paths = arr.reduce((acc, e) => (e.paths ? [...acc, ...e.paths] : acc), []);\n    const truncatedPaths = getTruncatedPaths(paths);\n    let contextLink;\n    if (error.schema && error.schema.data && error.schema.data.kind === 'leaf') {\n        contextLink = (\n            <Link\n                style={breadcrumbStyles.link}\n                to={getLinkWithPath(getParentPath(error.path))}\n                >\n                {`${getParentPath(error.path)}/`}\n            </Link>\n        );\n    }\n    return (<div style={warningStyles.page} key={index}>\n        { error.paths && error.paths.map((path, ix) =>\n            (<div key={ix} style={warningStyles.errorWrapper}>\n                {renderErrorHeader(index, arr.length, `.../${truncatedPaths[path]} ${error.reason}`)}\n                <div>\n                    { contextLink }\n                    <DataContainer\n                        applicationName={CONFIGURATION_EDITOR_NAME}\n                        hideIndicators\n                        hideContainers\n                        hideLists\n                        includeSubfolders\n                        showEmpty\n                        showConfig\n                        isEditMode\n                        key={ix}\n                        path={path}\n                />\n                </div>\n            </div>),\n        )}\n    </div>);\n};\n\nconst renderErrors = (error) => {\n    if (!error.data) return false;\n    if (!error.data.errors) return false;\n    return error.data.errors.map(renderError);\n};\n\nconst renderErrorMessage = (error) => {\n    if (!error.message) return false;\n    return <p style={warningStyles.messageContainer} data-handle=\"error\" >{error.message}</p>;\n};\n\nconst renderErrorDataMessage = (error) => {\n    if (!error.data) return false;\n    if (!error.data.message) return false;\n    return (<p style={warningStyles.container} data-handle=\"errorMessage\" >\n        {`${error.data.message}`}\n    </p>);\n};\n\nconst renderConflicts = (conflicts) => {\n    if (!isNonEmptyArray(conflicts)) return false;\n\n    return <div>\n        <table style={style.table}>\n            {renderHeader()}\n            {renderBody(conflicts)}\n        </table>\n    </div>;\n};\n\nconst WarningsTab = ({\n    error,\n    conflicts,\n    onRevalidateTrans,\n    onResolveConflicts,\n    disableRevalidateButton,\n}) => {\n    const disabled = !!disableRevalidateButton;\n    if (!isObject(error) || isEmpty(error)) {\n        return <div style={warningStyles.message}>No warnings</div>;\n    }\n\n    return (<div>\n        {renderErrorMessage(error)}\n        <div style={warningStyles.revalidateContainer}>\n            {renderErrorDataMessage(error)}\n            <button\n                disabled={disabled}\n                style={{ ...defaultStyles.button, ...style.reValidateButton }}\n                onClick={onRevalidateTrans}\n                data-handle=\"revalidate\"\n                    >\n                        Re-validate\n            </button>\n            {\n                isNonEmptyArray(conflicts) && (\n                    <button\n                        disabled={disabled}\n                        style={defaultStyles.button}\n                        onClick={onResolveConflicts}\n                        data-handle=\"resolve-conflicts\"\n                        >\n                                Resolve Transaction\n                    </button>\n                )\n            }\n        </div>\n        <div style={style.scrollingContainer}>\n            {renderErrors(error)}\n            {renderConflicts(conflicts)}\n        </div>\n    </div>);\n};\n\nWarningsTab.defaultProps = {\n    error: undefined,\n};\n\nWarningsTab.propTypes = {\n    disableRevalidateButton: PropTypes.bool,\n    conflicts: PropTypes.arrayOf(PropTypes.shape()),\n    error: PropTypes.shape({\n        type: PropTypes.string,\n        message: PropTypes.string,\n        errors: PropTypes.arrayOf(\n            PropTypes.shape({\n                reason: PropTypes.string,\n                paths: PropTypes.arrayOf(PropTypes.string),\n            }),\n        ),\n    }),\n    onRevalidateTrans: PropTypes.func,\n    onResolveConflicts: PropTypes.func,\n};\n\nexport default WarningsTab;\n\nexport {\n    WarningsTab as _WarningsTab,\n    renderErrors as _renderErrors,\n    renderErrorMessage as _renderErrorMessage,\n    renderErrorDataMessage as _renderErrorDataMessage,\n    renderError as _renderError,\n};\n"],"sourceRoot":""}